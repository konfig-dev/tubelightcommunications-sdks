{
  "openapi": "3.0.3",
  "info": {
    "title": "Cpaas API",
    "version": "v1",
    "description": "Cpaas API Documentation"
  },
  "paths": {
    "/api/authentication/login": {
      "post": {
        "tags": ["sms", "email", "whatsapp"],
        "operationId": "authenticateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "405": {
            "description": "Method not Allowed"
          },
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationLoginResponse"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/api/authentication/login \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"username\": \"****\",\n  \"password\": \"****\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/api/authentication/login\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"username\": \"****\",\n  \"password\": \"****\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"username\\\": \\\"****\\\",\"\n,\"  \\\"password\\\": \\\"****\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/api/authentication/login\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/api/authentication/login`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"****\",\n    \"password\": \"****\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/api/authentication/login`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"****\",\n    \"password\": \"****\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"username\" => \"****\",\n  \"password\" => \"****\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/api/authentication/login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/update/profile": {
      "put": {
        "tags": ["sms"],
        "operationId": "updateProfileDetail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PUT \\\nhttps://{host-domain}/sms/api/v1/update/profile \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"companyName\": \"string\",\n  \"principleEntityId\": \"string\",\n  \"contactNo\": \"string\",\n  \"address\": \"string\",\n  \"name\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/update/profile\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"companyName\": \"string\",\n  \"principleEntityId\": \"string\",\n  \"contactNo\": \"string\",\n  \"address\": \"string\",\n  \"name\": \"string\"\n}\nresponse = requests.put(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"companyName\\\": \\\"string\\\",\"\n,\"  \\\"principleEntityId\\\": \\\"string\\\",\"\n,\"  \\\"contactNo\\\": \\\"string\\\",\"\n,\"  \\\"address\\\": \\\"string\\\",\"\n,\"  \\\"name\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/update/profile\";\n    var request = HttpRequest.newBuilder()\n      .PUT(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/update/profile`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"companyName\": \"string\",\n    \"principleEntityId\": \"string\",\n    \"contactNo\": \"string\",\n    \"address\": \"string\",\n    \"name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/update/profile`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"companyName\": \"string\",\n    \"principleEntityId\": \"string\",\n    \"contactNo\": \"string\",\n    \"address\": \"string\",\n    \"name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"companyName\" => \"string\",\n  \"principleEntityId\" => \"string\",\n  \"contactNo\" => \"string\",\n  \"address\" => \"string\",\n  \"name\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/update/profile\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/accounting/update": {
      "put": {
        "tags": ["sms"],
        "operationId": "profileAccountingUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountingupdateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PUT \\\nhttps://{host-domain}/sms/api/v1/accounting/update \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"password\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/accounting/update\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"password\": \"string\"\n}\nresponse = requests.put(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"password\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/accounting/update\";\n    var request = HttpRequest.newBuilder()\n      .PUT(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/accounting/update`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/accounting/update`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"password\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/accounting/update\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/template": {
      "post": {
        "tags": ["sms"],
        "operationId": "SendingTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTemplateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/websms/template \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"sender\": \"string\",\n  \"message\": \"string\",\n  \"messageType\": \"string\",\n  \"templateName\": \"string\",\n  \"dltTemplateId\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/template\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"sender\": \"string\",\n  \"message\": \"string\",\n  \"messageType\": \"string\",\n  \"templateName\": \"string\",\n  \"dltTemplateId\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"message\\\": \\\"string\\\",\"\n,\"  \\\"messageType\\\": \\\"string\\\",\"\n,\"  \\\"templateName\\\": \\\"string\\\",\"\n,\"  \\\"dltTemplateId\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/template\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"message\": \"string\",\n    \"messageType\": \"string\",\n    \"templateName\": \"string\",\n    \"dltTemplateId\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"message\": \"string\",\n    \"messageType\": \"string\",\n    \"templateName\": \"string\",\n    \"dltTemplateId\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sender\" => \"string\",\n  \"message\" => \"string\",\n  \"messageType\" => \"string\",\n  \"templateName\" => \"string\",\n  \"dltTemplateId\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/template\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/single": {
      "post": {
        "tags": ["sms"],
        "operationId": "singleApi",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SingleSmsProcedure"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/websms/single \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"mobileNo\": \"string\",\n  \"sender\": \"string\",\n  \"messageType\": \"string\",\n  \"messages\": \"string\",\n  \"peId\": \"string\",\n  \"tempId\": \"string\",\n  \"countCharacter\": \"int32\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/single\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"mobileNo\": \"string\",\n  \"sender\": \"string\",\n  \"messageType\": \"string\",\n  \"messages\": \"string\",\n  \"peId\": \"string\",\n  \"tempId\": \"string\",\n  \"countCharacter\": \"int32\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"mobileNo\\\": \\\"string\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"messageType\\\": \\\"string\\\",\"\n,\"  \\\"messages\\\": \\\"string\\\",\"\n,\"  \\\"peId\\\": \\\"string\\\",\"\n,\"  \\\"tempId\\\": \\\"string\\\",\"\n,\"  \\\"countCharacter\\\": \\\"int32\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/single\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/single`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"mobileNo\": \"string\",\n    \"sender\": \"string\",\n    \"messageType\": \"string\",\n    \"messages\": \"string\",\n    \"peId\": \"string\",\n    \"tempId\": \"string\",\n    \"countCharacter\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/single`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"mobileNo\": \"string\",\n    \"sender\": \"string\",\n    \"messageType\": \"string\",\n    \"messages\": \"string\",\n    \"peId\": \"string\",\n    \"tempId\": \"string\",\n    \"countCharacter\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"mobileNo\" => \"string\",\n  \"sender\" => \"string\",\n  \"messageType\" => \"string\",\n  \"messages\" => \"string\",\n  \"peId\" => \"string\",\n  \"tempId\" => \"string\",\n  \"countCharacter\" => \"int32\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/single\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/retrieve/template": {
      "post": {
        "tags": ["sms"],
        "operationId": "retrieveTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateRetrievingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetreiveModelSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/websms/retrieve/template \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/retrieve/template\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/retrieve/template\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/retrieve/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/retrieve/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/retrieve/template\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/personalize": {
      "post": {
        "tags": ["sms"],
        "operationId": "SendPersonalizeMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleSmsSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/websms/personalize \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"sender\": \"string\",\n  \"smsType\": \"string\",\n  \"fromDate\": \"int64\",\n  \"fileName\": \"string\",\n  \"totalNumber\": \"int32\",\n  \"message\": \"string\",\n  \"peId\": \"string\",\n  \"templateId\": \"string\",\n  \"campaignName\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/personalize\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"sender\": \"string\",\n  \"smsType\": \"string\",\n  \"fromDate\": \"int64\",\n  \"fileName\": \"string\",\n  \"totalNumber\": \"int32\",\n  \"message\": \"string\",\n  \"peId\": \"string\",\n  \"templateId\": \"string\",\n  \"campaignName\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"smsType\\\": \\\"string\\\",\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"fileName\\\": \\\"string\\\",\"\n,\"  \\\"totalNumber\\\": \\\"int32\\\",\"\n,\"  \\\"message\\\": \\\"string\\\",\"\n,\"  \\\"peId\\\": \\\"string\\\",\"\n,\"  \\\"templateId\\\": \\\"string\\\",\"\n,\"  \\\"campaignName\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/personalize\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/personalize`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"smsType\": \"string\",\n    \"fromDate\": \"int64\",\n    \"fileName\": \"string\",\n    \"totalNumber\": \"int32\",\n    \"message\": \"string\",\n    \"peId\": \"string\",\n    \"templateId\": \"string\",\n    \"campaignName\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/personalize`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"smsType\": \"string\",\n    \"fromDate\": \"int64\",\n    \"fileName\": \"string\",\n    \"totalNumber\": \"int32\",\n    \"message\": \"string\",\n    \"peId\": \"string\",\n    \"templateId\": \"string\",\n    \"campaignName\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sender\" => \"string\",\n  \"smsType\" => \"string\",\n  \"fromDate\" => \"int64\",\n  \"fileName\" => \"string\",\n  \"totalNumber\" => \"int32\",\n  \"message\" => \"string\",\n  \"peId\" => \"string\",\n  \"templateId\" => \"string\",\n  \"campaignName\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/personalize\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/multiple": {
      "post": {
        "tags": ["sms"],
        "operationId": "CountSmsdatewiseSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipleSmsSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/websms/multiple \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"sender\": \"string\",\n  \"smsType\": \"string\",\n  \"fromDate\": \"int64\",\n  \"fileName\": \"string\",\n  \"totalNumber\": \"int32\",\n  \"message\": \"string\",\n  \"peId\": \"string\",\n  \"templateId\": \"string\",\n  \"campaignName\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/multiple\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"sender\": \"string\",\n  \"smsType\": \"string\",\n  \"fromDate\": \"int64\",\n  \"fileName\": \"string\",\n  \"totalNumber\": \"int32\",\n  \"message\": \"string\",\n  \"peId\": \"string\",\n  \"templateId\": \"string\",\n  \"campaignName\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"smsType\\\": \\\"string\\\",\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"fileName\\\": \\\"string\\\",\"\n,\"  \\\"totalNumber\\\": \\\"int32\\\",\"\n,\"  \\\"message\\\": \\\"string\\\",\"\n,\"  \\\"peId\\\": \\\"string\\\",\"\n,\"  \\\"templateId\\\": \\\"string\\\",\"\n,\"  \\\"campaignName\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/multiple\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/multiple`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"smsType\": \"string\",\n    \"fromDate\": \"int64\",\n    \"fileName\": \"string\",\n    \"totalNumber\": \"int32\",\n    \"message\": \"string\",\n    \"peId\": \"string\",\n    \"templateId\": \"string\",\n    \"campaignName\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/multiple`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"smsType\": \"string\",\n    \"fromDate\": \"int64\",\n    \"fileName\": \"string\",\n    \"totalNumber\": \"int32\",\n    \"message\": \"string\",\n    \"peId\": \"string\",\n    \"templateId\": \"string\",\n    \"campaignName\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sender\" => \"string\",\n  \"smsType\" => \"string\",\n  \"fromDate\" => \"int64\",\n  \"fileName\" => \"string\",\n  \"totalNumber\" => \"int32\",\n  \"message\" => \"string\",\n  \"peId\" => \"string\",\n  \"templateId\" => \"string\",\n  \"campaignName\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/multiple\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/upload": {
      "post": {
        "tags": ["sms"],
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/upload \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"file\": \"binary\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/upload\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"file\": \"binary\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"file\\\": \\\"binary\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/upload\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/upload`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/upload`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"file\" => \"binary\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/smslog": {
      "post": {
        "tags": ["sms"],
        "operationId": "smsLogd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsLogSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/smslog \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/smslog\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"action\\\": \\\"string\\\",\"\n,\"  \\\"jobid\\\": \\\"int32\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/smslog\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/smslog`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/smslog`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"action\" => \"string\",\n  \"jobid\" => \"int32\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/smslog\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/sender/statistic": {
      "post": {
        "tags": ["sms"],
        "operationId": "senderStatistic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderWiseStatisticModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/sender/statistic \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/sender/statistic\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\",\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/sender/statistic\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\",\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/sender/statistic\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/sender/manage": {
      "post": {
        "tags": ["sms"],
        "operationId": "manageSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderMangeModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/sender/manage \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"sender\": \"string\",\n  \"delete\": true\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/sender/manage\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"sender\": \"string\",\n  \"delete\": true\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"delete\\\": true\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/sender/manage\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/manage`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"sender\": \"string\",\n    \"delete\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/manage`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"sender\": \"string\",\n    \"delete\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"sender\" => \"string\",\n  \"delete\" => true\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/sender/manage\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/sender/block": {
      "post": {
        "tags": ["sms"],
        "operationId": "blockSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockNumberModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/sender/block \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"delete\": true,\n  \"mobileno\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/sender/block\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"delete\": true,\n  \"mobileno\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"delete\\\": true,\"\n,\"  \\\"mobileno\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/sender/block\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/block`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"delete\": true,\n    \"mobileno\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sender/block`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"delete\": true,\n    \"mobileno\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"delete\" => true,\n  \"mobileno\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/sender/block\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/retreive/download/center": {
      "post": {
        "tags": ["sms"],
        "operationId": "retreiveDownloadCenter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetreiveDownloadModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/retreive/download/center \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/retreive/download/center\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/retreive/download/center\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/retreive/download/center`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/retreive/download/center`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/retreive/download/center\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/profile": {
      "post": {
        "tags": ["sms"],
        "operationId": "profileDetail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/profile \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/profile\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/profile\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/profile`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/profile`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/profile\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/personalize/upload": {
      "post": {
        "tags": ["sms"],
        "operationId": "personalizeUploadFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/uploadPersonalizeSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/personalize/upload \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"file\": \"binary\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/personalize/upload\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"file\": \"binary\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"file\\\": \\\"binary\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/personalize/upload\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/personalize/upload`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/personalize/upload`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"file\" => \"binary\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/personalize/upload\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/month/statistic": {
      "post": {
        "tags": ["sms"],
        "operationId": "monthlyStatistic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatestatisticModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/month/statistic \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/month/statistic\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/month/statistic\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/month/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/month/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"sender\" => \"string\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/month/statistic\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/mobile/logs": {
      "post": {
        "tags": ["sms"],
        "operationId": "mobileLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MobileLogsModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkJobSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/mobile/logs \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"mobileNo\": \"string\",\n  \"search\": \"string\",\n  \"date\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/mobile/logs\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"mobileNo\": \"string\",\n  \"search\": \"string\",\n  \"date\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"mobileNo\\\": \\\"string\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"date\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/mobile/logs\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/mobile/logs`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"mobileNo\": \"string\",\n    \"search\": \"string\",\n    \"date\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/mobile/logs`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"mobileNo\": \"string\",\n    \"search\": \"string\",\n    \"date\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"mobileNo\" => \"string\",\n  \"search\" => \"string\",\n  \"date\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/mobile/logs\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/jobsummary": {
      "post": {
        "tags": ["sms"],
        "operationId": "JobSummary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatestatisticModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/jobsummary \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/jobsummary\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/jobsummary\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/jobsummary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/jobsummary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"sender\" => \"string\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/jobsummary\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/download/center": {
      "post": {
        "tags": ["sms"],
        "operationId": "downloadCentre",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadCentrerModel2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/download/center \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"jobId\": \"string\",\n  \"sender\": \"string\",\n  \"status\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"columns\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"search\": \"string\",\n  \"mobileNumber\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/download/center\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"jobId\": \"string\",\n  \"sender\": \"string\",\n  \"status\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"columns\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"search\": \"string\",\n  \"mobileNumber\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\",\"\n,\"  \\\"jobId\\\": \\\"string\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"status\\\": [\"\n,\"    \\\"string_1\\\",\"\n,\"    \\\"string_2\\\"\"\n,\"  ],\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"columns\\\": [\"\n,\"    \\\"string_1\\\",\"\n,\"    \\\"string_2\\\"\"\n,\"  ],\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"mobileNumber\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/download/center\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/download/center`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"jobId\": \"string\",\n    \"sender\": \"string\",\n    \"status\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"columns\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"search\": \"string\",\n    \"mobileNumber\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/download/center`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"jobId\": \"string\",\n    \"sender\": \"string\",\n    \"status\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"columns\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"search\": \"string\",\n    \"mobileNumber\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\",\n  \"jobId\" => \"string\",\n  \"sender\" => \"string\",\n  \"status\" => array(\n    \"string_1\",\n    \"string_2\"\n  ),\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"columns\" => array(\n    \"string_1\",\n    \"string_2\"\n  ),\n  \"search\" => \"string\",\n  \"mobileNumber\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/download/center\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/descriptive/summary": {
      "post": {
        "tags": ["sms"],
        "operationId": "descriptiveSummary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DescriptiveSummaryModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/descriptive/summary \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"size\": \"int32\",\n  \"page\": \"int32\",\n  \"search\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/descriptive/summary\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"size\": \"int32\",\n  \"page\": \"int32\",\n  \"search\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/descriptive/summary\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/descriptive/summary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"size\": \"int32\",\n    \"page\": \"int32\",\n    \"search\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/descriptive/summary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"size\": \"int32\",\n    \"page\": \"int32\",\n    \"search\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"size\" => \"int32\",\n  \"page\" => \"int32\",\n  \"search\" => \"string\",\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/descriptive/summary\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/date/statistic": {
      "post": {
        "tags": ["sms"],
        "operationId": "datewiseStatistic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatestatisticModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/date/statistic \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/date/statistic\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"sender\": \"string\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/date/statistic\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/date/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/date/statistic`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"sender\": \"string\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"sender\" => \"string\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/date/statistic\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/dashboard/sms": {
      "post": {
        "tags": ["sms"],
        "operationId": "CountSmsAllSenders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountSmsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Method not Allowed"
          },
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/dashboard/sms \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"sender\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/dashboard/sms\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"sender\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/dashboard/sms\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/dashboard/sms`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/dashboard/sms`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sender\" => \"string\",\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/dashboard/sms\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/dashboard/hour/sms": {
      "post": {
        "tags": ["sms"],
        "operationId": "hourlySms",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashBoardHourSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/dashboard/hour/sms \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/dashboard/hour/sms\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/dashboard/hour/sms\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/dashboard/hour/sms`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/dashboard/hour/sms`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/dashboard/hour/sms\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/credit/logs": {
      "post": {
        "tags": ["sms"],
        "operationId": "CreditLogs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditLogModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/credit/logs \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"search\": \"string\",\n  \"page\": \"int32\",\n  \"size\": \"int32\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/credit/logs\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"search\": \"string\",\n  \"page\": \"int32\",\n  \"size\": \"int32\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/credit/logs\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/credit/logs`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\",\n    \"page\": \"int32\",\n    \"size\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/credit/logs`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\",\n    \"page\": \"int32\",\n    \"size\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"search\" => \"string\",\n  \"page\" => \"int32\",\n  \"size\" => \"int32\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/credit/logs\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/count/sms/all/sender": {
      "post": {
        "tags": ["sms"],
        "operationId": "CountSmsAllSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountSmsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllSenderSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/count/sms/all/sender \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"sender\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/count/sms/all/sender\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"sender\": \"string\",\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sender\\\": \\\"string\\\",\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/count/sms/all/sender\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/count/sms/all/sender`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/count/sms/all/sender`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"sender\": \"string\",\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sender\" => \"string\",\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/count/sms/all/sender\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/bulkjob": {
      "post": {
        "tags": ["sms"],
        "operationId": "smsBulkJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkJobSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/bulkjob \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/bulkjob\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"action\\\": \\\"string\\\",\"\n,\"  \\\"jobid\\\": \\\"int32\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/bulkjob\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulkjob`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulkjob`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"action\" => \"string\",\n  \"jobid\" => \"int32\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/bulkjob\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/bulk/template": {
      "post": {
        "tags": ["sms"],
        "operationId": "bulkTemplateMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/bulk/template \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"file\": \"binary\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/bulk/template\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"file\": \"binary\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"file\\\": \\\"binary\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/bulk/template\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulk/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulk/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"file\" => \"binary\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/bulk/template\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/block/upload/numbers": {
      "post": {
        "tags": ["sms"],
        "operationId": "blockMultipleNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["file"],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/block/upload/numbers \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"file\": \"binary\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/block/upload/numbers\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"file\": \"binary\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"file\\\": \\\"binary\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/block/upload/numbers\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/block/upload/numbers`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/block/upload/numbers`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"file\": \"binary\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"file\" => \"binary\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/block/upload/numbers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/block/retrieve/numbers": {
      "post": {
        "tags": ["sms"],
        "operationId": "blockMultipleRetreivingNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockNumberModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/block/retrieve/numbers \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"delete\": true,\n  \"mobileno\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/block/retrieve/numbers\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"delete\": true,\n  \"mobileno\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"delete\\\": true,\"\n,\"  \\\"mobileno\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/block/retrieve/numbers\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/block/retrieve/numbers`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"delete\": true,\n    \"mobileno\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/block/retrieve/numbers`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"delete\": true,\n    \"mobileno\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"delete\" => true,\n  \"mobileno\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/block/retrieve/numbers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/balance": {
      "post": {
        "tags": ["sms"],
        "operationId": "getMoney",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/balance \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/balance\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/balance\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/balance`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/balance`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/balance\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/accounting": {
      "post": {
        "tags": ["sms"],
        "operationId": "profileAccounting",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/accounting \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/accounting\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/accounting\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/accounting`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/accounting`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/accounting\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/Schedule/bulkjob": {
      "post": {
        "tags": ["sms"],
        "operationId": "SchedulesmsBulkJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginationModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchBulkJob"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/sms/api/v1/Schedule/bulkjob \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/Schedule/bulkjob\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\",\n  \"action\": \"string\",\n  \"jobid\": \"int32\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\",\"\n,\"  \\\"action\\\": \\\"string\\\",\"\n,\"  \\\"jobid\\\": \\\"int32\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/Schedule/bulkjob\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/Schedule/bulkjob`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/Schedule/bulkjob`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\",\n    \"action\": \"string\",\n    \"jobid\": \"int32\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\",\n  \"action\" => \"string\",\n  \"jobid\" => \"int32\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/Schedule/bulkjob\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/summary/sender/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "senderSummary",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/summary/sender/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/summary/sender/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/summary/sender/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/sender/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/sender/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/summary/sender/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/summary/monthly/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "monthlySummary",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/summary/monthly/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/summary/monthly/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/summary/monthly/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/monthly/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/monthly/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/summary/monthly/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/summary/job/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "jobSummary",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/summary/job/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/summary/job/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/summary/job/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/summary/job/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/summary/descriptive/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "descriptiveSummary_1",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/summary/descriptive/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/summary/descriptive/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/summary/descriptive/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/descriptive/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/descriptive/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/summary/descriptive/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/summary/datewise/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "datewiseSummary",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/summary/datewise/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/summary/datewise/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/summary/datewise/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/datewise/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/summary/datewise/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/summary/datewise/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/sms/log/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "SmsLog",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/sms/log/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/sms/log/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/sms/log/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sms/log/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/sms/log/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/sms/log/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/schedule/job/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "scheduleJob",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/schedule/job/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/schedule/job/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/schedule/job/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/schedule/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/schedule/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/schedule/job/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/mobile/logs/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "mobileLogs_1",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/mobile/logs/download?date=int64&mobile=string \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/mobile/logs/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\nquery = {\n  \"date\": \"int64\",\n  \"mobile\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"date\", \"int64\");\n    params.put(\"mobile\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/mobile/logs/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"date\": \"int64\",\n  \"mobile\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/mobile/logs/download?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"date\": \"int64\",\n  \"mobile\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/mobile/logs/download?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"date\" => \"int64\",\n  \"mobile\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/mobile/logs/download?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/credit/logs/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "creditLogs",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/credit/logs/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/credit/logs/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/credit/logs/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/credit/logs/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/credit/logs/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/credit/logs/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/center/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "downloadCenter",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/center/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/center/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/center/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/center/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/center/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/center/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/bulk/job/download": {
      "get": {
        "tags": ["sms"],
        "operationId": "BulkJob",
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadApi"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/sms/api/v1/bulk/job/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/bulk/job/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/bulk/job/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulk/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/bulk/job/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/bulk/job/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/sms/api/v1/websms/retrieve/template/delete": {
      "delete": {
        "tags": ["sms"],
        "operationId": "deleteTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTemplateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "unauthorized"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X DELETE \\\nhttps://{host-domain}/sms/api/v1/websms/retrieve/template/delete \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"templateId\": \"int64\",\n  \"sender\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/sms/api/v1/websms/retrieve/template/delete\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"templateId\": \"int64\",\n  \"sender\": \"string\"\n}\nresponse = requests.delete(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"templateId\\\": \\\"int64\\\",\"\n,\"  \\\"sender\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/sms/api/v1/websms/retrieve/template/delete\";\n    var request = HttpRequest.newBuilder()\n      .DELETE(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/retrieve/template/delete`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"templateId\": \"int64\",\n    \"sender\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/sms/api/v1/websms/retrieve/template/delete`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"templateId\": \"int64\",\n    \"sender\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"templateId\" => \"int64\",\n  \"sender\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/sms/api/v1/websms/retrieve/template/delete\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/summary": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "whatsappSummaryService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhatsappReportingModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/summary \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/summary\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/summary\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/summary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/summary`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/summary\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/single": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "sendWhatsapp",
        "parameters": [
          {
            "name": "Host",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendWhatsappModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JSONObject"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/single \\\n-H 'Content-Type: application/json' \\\n-H 'Host: string' \\\n-d '{\n  \"mobileNumber\": \"string\",\n  \"email\": \"string\",\n  \"browserType\": \"string\",\n  \"whatsappType\": \"string\",\n  \"parameterCount\": \"int32\",\n  \"templateName\": \"string\",\n  \"templateId\": \"string\",\n  \"params\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"mediaType\": \"string\",\n  \"mediaUrl\": \"string\",\n  \"button1\": \"string\",\n  \"button2\": \"string\",\n  \"button3\": \"string\",\n  \"buttons\": [\n    {\n      \"buttonType\": \"string\",\n      \"buttonPayload\": \"string\"\n    }\n  ],\n  \"button_type\": \"string\",\n  \"button_payload\": \"string\",\n  \"fileName\": \"string\",\n  \"contentType\": \"string\",\n  \"template\": {\n    \"language\": {\n      \"policy\": \"string\",\n      \"code\": \"string\"\n    },\n    \"templateId\": \"string\"\n  },\n  \"components\": [\n    {\n      \"type\": \"string\",\n      \"mediaparameters\": [\n        {\n          \"type\": \"string\",\n          \"media\": {\n            \"type\": \"string\",\n            \"url\": \"string\",\n            \"filename\": \"string\"\n          }\n        }\n      ]\n    }\n  ],\n  \"message\": \"string\",\n  \"to's\": \"string\",\n  \"from's\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/single\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Host\": \"string\"\n}\n\npayload = {\n  \"mobileNumber\": \"string\",\n  \"email\": \"string\",\n  \"browserType\": \"string\",\n  \"whatsappType\": \"string\",\n  \"parameterCount\": \"int32\",\n  \"templateName\": \"string\",\n  \"templateId\": \"string\",\n  \"params\": [\n    \"string_1\",\n    \"string_2\"\n  ],\n  \"mediaType\": \"string\",\n  \"mediaUrl\": \"string\",\n  \"button1\": \"string\",\n  \"button2\": \"string\",\n  \"button3\": \"string\",\n  \"buttons\": [\n    {\n      \"buttonType\": \"string\",\n      \"buttonPayload\": \"string\"\n    }\n  ],\n  \"button_type\": \"string\",\n  \"button_payload\": \"string\",\n  \"fileName\": \"string\",\n  \"contentType\": \"string\",\n  \"template\": {\n    \"language\": {\n      \"policy\": \"string\",\n      \"code\": \"string\"\n    },\n    \"templateId\": \"string\"\n  },\n  \"components\": [\n    {\n      \"type\": \"string\",\n      \"mediaparameters\": [\n        {\n          \"type\": \"string\",\n          \"media\": {\n            \"type\": \"string\",\n            \"url\": \"string\",\n            \"filename\": \"string\"\n          }\n        }\n      ]\n    }\n  ],\n  \"message\": \"string\",\n  \"to's\": \"string\",\n  \"from's\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"mobileNumber\\\": \\\"string\\\",\"\n,\"  \\\"email\\\": \\\"string\\\",\"\n,\"  \\\"browserType\\\": \\\"string\\\",\"\n,\"  \\\"whatsappType\\\": \\\"string\\\",\"\n,\"  \\\"parameterCount\\\": \\\"int32\\\",\"\n,\"  \\\"templateName\\\": \\\"string\\\",\"\n,\"  \\\"templateId\\\": \\\"string\\\",\"\n,\"  \\\"params\\\": [\"\n,\"    \\\"string_1\\\",\"\n,\"    \\\"string_2\\\"\"\n,\"  ],\"\n,\"  \\\"mediaType\\\": \\\"string\\\",\"\n,\"  \\\"mediaUrl\\\": \\\"string\\\",\"\n,\"  \\\"button1\\\": \\\"string\\\",\"\n,\"  \\\"button2\\\": \\\"string\\\",\"\n,\"  \\\"button3\\\": \\\"string\\\",\"\n,\"  \\\"buttons\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"buttonType\\\": \\\"string\\\",\"\n,\"      \\\"buttonPayload\\\": \\\"string\\\"\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"button_type\\\": \\\"string\\\",\"\n,\"  \\\"button_payload\\\": \\\"string\\\",\"\n,\"  \\\"fileName\\\": \\\"string\\\",\"\n,\"  \\\"contentType\\\": \\\"string\\\",\"\n,\"  \\\"template\\\": \"{\"\"\n,\"    \\\"language\\\": \"{\"\"\n,\"      \\\"policy\\\": \\\"string\\\",\"\n,\"      \\\"code\\\": \\\"string\\\"\"\n,\"    \"}\",\"\n,\"    \\\"templateId\\\": \\\"string\\\"\"\n,\"  \"}\",\"\n,\"  \\\"components\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"type\\\": \\\"string\\\",\"\n,\"      \\\"mediaparameters\\\": [\"\n,\"        \"{\"\"\n,\"          \\\"type\\\": \\\"string\\\",\"\n,\"          \\\"media\\\": \"{\"\"\n,\"            \\\"type\\\": \\\"string\\\",\"\n,\"            \\\"url\\\": \\\"string\\\",\"\n,\"            \\\"filename\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        \"}\"\"\n,\"      ]\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"message\\\": \\\"string\\\",\"\n,\"  \\\"to's\\\": \\\"string\\\",\"\n,\"  \\\"from's\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/single\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Host\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/single`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Host\": \"string\"\n  },\n  body: JSON.stringify({\n    \"mobileNumber\": \"string\",\n    \"email\": \"string\",\n    \"browserType\": \"string\",\n    \"whatsappType\": \"string\",\n    \"parameterCount\": \"int32\",\n    \"templateName\": \"string\",\n    \"templateId\": \"string\",\n    \"params\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"mediaType\": \"string\",\n    \"mediaUrl\": \"string\",\n    \"button1\": \"string\",\n    \"button2\": \"string\",\n    \"button3\": \"string\",\n    \"buttons\": [\n      {\n        \"buttonType\": \"string\",\n        \"buttonPayload\": \"string\"\n      }\n    ],\n    \"button_type\": \"string\",\n    \"button_payload\": \"string\",\n    \"fileName\": \"string\",\n    \"contentType\": \"string\",\n    \"template\": {\n      \"language\": {\n        \"policy\": \"string\",\n        \"code\": \"string\"\n      },\n      \"templateId\": \"string\"\n    },\n    \"components\": [\n      {\n        \"type\": \"string\",\n        \"mediaparameters\": [\n          {\n            \"type\": \"string\",\n            \"media\": {\n              \"type\": \"string\",\n              \"url\": \"string\",\n              \"filename\": \"string\"\n            }\n          }\n        ]\n      }\n    ],\n    \"message\": \"string\",\n    \"to's\": \"string\",\n    \"from's\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/single`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Host\": \"string\"\n  },\n  body: JSON.stringify({\n    \"mobileNumber\": \"string\",\n    \"email\": \"string\",\n    \"browserType\": \"string\",\n    \"whatsappType\": \"string\",\n    \"parameterCount\": \"int32\",\n    \"templateName\": \"string\",\n    \"templateId\": \"string\",\n    \"params\": [\n      \"string_1\",\n      \"string_2\"\n    ],\n    \"mediaType\": \"string\",\n    \"mediaUrl\": \"string\",\n    \"button1\": \"string\",\n    \"button2\": \"string\",\n    \"button3\": \"string\",\n    \"buttons\": [\n      {\n        \"buttonType\": \"string\",\n        \"buttonPayload\": \"string\"\n      }\n    ],\n    \"button_type\": \"string\",\n    \"button_payload\": \"string\",\n    \"fileName\": \"string\",\n    \"contentType\": \"string\",\n    \"template\": {\n      \"language\": {\n        \"policy\": \"string\",\n        \"code\": \"string\"\n      },\n      \"templateId\": \"string\"\n    },\n    \"components\": [\n      {\n        \"type\": \"string\",\n        \"mediaparameters\": [\n          {\n            \"type\": \"string\",\n            \"media\": {\n              \"type\": \"string\",\n              \"url\": \"string\",\n              \"filename\": \"string\"\n            }\n          }\n        ]\n      }\n    ],\n    \"message\": \"string\",\n    \"to's\": \"string\",\n    \"from's\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"mobileNumber\" => \"string\",\n  \"email\" => \"string\",\n  \"browserType\" => \"string\",\n  \"whatsappType\" => \"string\",\n  \"parameterCount\" => \"int32\",\n  \"templateName\" => \"string\",\n  \"templateId\" => \"string\",\n  \"params\" => array(\n    \"string_1\",\n    \"string_2\"\n  ),\n  \"mediaType\" => \"string\",\n  \"mediaUrl\" => \"string\",\n  \"button1\" => \"string\",\n  \"button2\" => \"string\",\n  \"button3\" => \"string\",\n  \"buttons\" => array(\n    array(\n      \"buttonType\" => \"string\",\n      \"buttonPayload\" => \"string\"\n    )\n  ),\n  \"button_type\" => \"string\",\n  \"button_payload\" => \"string\",\n  \"fileName\" => \"string\",\n  \"contentType\" => \"string\",\n  \"template\" => array(\n    \"language\" => array(\n      \"policy\" => \"string\",\n      \"code\" => \"string\"\n    ),\n    \"templateId\" => \"string\"\n  ),\n  \"components\" => array(\n    array(\n      \"type\" => \"string\",\n      \"mediaparameters\" => array(\n        array(\n          \"type\" => \"string\",\n          \"media\" => array(\n            \"type\" => \"string\",\n            \"url\" => \"string\",\n            \"filename\" => \"string\"\n          )\n        )\n      )\n    )\n  ),\n  \"message\" => \"string\",\n  \"to's\" => \"string\",\n  \"from's\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Host: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/single\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/send": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "whatsapp_send",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendWhatsapp"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhatsappSendSwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/send \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"to\": [\n    \"84********\",\n    \"93********\"\n  ],\n  \"message\": {\n    \"template_name\": \"cust_support\",\n    \"language\": \"string\",\n    \"body_params\": \"[\\\"Name\\\",\\\"Ticket-id\\\"\\\"hours\\\"]\",\n    \"type\": \"template\"\n  },\n  \"templateMessage\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/send\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"to\": [\n    \"84********\",\n    \"93********\"\n  ],\n  \"message\": {\n    \"template_name\": \"cust_support\",\n    \"language\": \"string\",\n    \"body_params\": \"[\\\"Name\\\",\\\"Ticket-id\\\"\\\"hours\\\"]\",\n    \"type\": \"template\"\n  },\n  \"templateMessage\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"to\\\": [\"\n,\"    \\\"84********\\\",\"\n,\"    \\\"93********\\\"\"\n,\"  ],\"\n,\"  \\\"message\\\": \"{\"\"\n,\"    \\\"template_name\\\": \\\"cust_support\\\",\"\n,\"    \\\"language\\\": \\\"string\\\",\"\n,\"    \\\"body_params\\\": \\\"[\\\\\"Name\\\\\",\\\\\"Ticket-id\\\\\"\\\\\"hours\\\\\"]\\\",\"\n,\"    \\\"type\\\": \\\"template\\\"\"\n,\"  \"}\",\"\n,\"  \\\"templateMessage\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/send\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/send`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"to\": [\n      \"84********\",\n      \"93********\"\n    ],\n    \"message\": {\n      \"template_name\": \"cust_support\",\n      \"language\": \"string\",\n      \"body_params\": \"[\\\"Name\\\",\\\"Ticket-id\\\"\\\"hours\\\"]\",\n      \"type\": \"template\"\n    },\n    \"templateMessage\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/send`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"to\": [\n      \"84********\",\n      \"93********\"\n    ],\n    \"message\": {\n      \"template_name\": \"cust_support\",\n      \"language\": \"string\",\n      \"body_params\": \"[\\\"Name\\\",\\\"Ticket-id\\\"\\\"hours\\\"]\",\n      \"type\": \"template\"\n    },\n    \"templateMessage\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"to\" => array(\n    \"84********\",\n    \"93********\"\n  ),\n  \"message\" => array(\n    \"template_name\" => \"cust_support\",\n    \"language\" => \"string\",\n    \"body_params\" => \"array(\\\"Name\\\",\\\"Ticket-id\\\"\\\"hours\\\")\",\n    \"type\" => \"template\"\n  ),\n  \"templateMessage\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/send\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/retreive/template": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "retreivingTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetreivingTemplateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateResponse"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/retreive/template \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/retreive/template\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/retreive/template\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/retreive/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/retreive/template`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/retreive/template\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/report": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "whatsappReporting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhatsappReportingModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/report \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/report\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/report\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/report`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/report`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/report\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/hour/dashboard": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "summaryMonthService",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/hour/dashboard \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/hour/dashboard\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/hour/dashboard\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/hour/dashboard`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/hour/dashboard`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/hour/dashboard\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/dashboard": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "summaryService",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhatsappSummaryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/dashboard \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/dashboard\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/dashboard\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/dashboard`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/dashboard`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/dashboard\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/capability": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "capability_check",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapabilityModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapibilitySwagger"
                }
              }
            }
          },
          "405": {
            "description": "Method not Allowed"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/capability \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/capability\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"numbers\\\": [\"\n,\"    \\\"84********\\\",\"\n,\"    \\\"93********\\\"\"\n,\"  ]\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/capability\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/capability`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/capability`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"numbers\" => array(\n    \"84********\",\n    \"93********\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/capability\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/blacklist": {
      "post": {
        "tags": ["whatsapp"],
        "operationId": "WhatsappBlacklist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptInModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JSONObject"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/whatsapp/api/v1/blacklist \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/blacklist\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"numbers\\\": [\"\n,\"    \\\"84********\\\",\"\n,\"    \\\"93********\\\"\"\n,\"  ]\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/blacklist\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/blacklist`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/blacklist`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"numbers\" => array(\n    \"84********\",\n    \"93********\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/blacklist\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/whatsapp/log/download": {
      "get": {
        "tags": ["whatsapp"],
        "operationId": "whatsappLogs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/whatsapp/api/v1/whatsapp/log/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/whatsapp/log/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/whatsapp/log/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/whatsapp/log/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/whatsapp/log/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/whatsapp/log/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/summary/monthly/download": {
      "get": {
        "tags": ["whatsapp"],
        "operationId": "BulkJob",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/whatsapp/api/v1/summary/monthly/download \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/summary/monthly/download\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/summary/monthly/download\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/summary/monthly/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/summary/monthly/download`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/summary/monthly/download\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/whatsapp/api/v1/optout": {
      "delete": {
        "tags": ["whatsapp"],
        "operationId": "optOutCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptInModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "405": {
            "description": "Method not Allowed"
          },
          "200": {
            "description": "200 ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptOutSwagger"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X DELETE \\\nhttps://{host-domain}/whatsapp/api/v1/optout \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/whatsapp/api/v1/optout\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"numbers\": [\n    \"84********\",\n    \"93********\"\n  ]\n}\nresponse = requests.delete(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"numbers\\\": [\"\n,\"    \\\"84********\\\",\"\n,\"    \\\"93********\\\"\"\n,\"  ]\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/whatsapp/api/v1/optout\";\n    var request = HttpRequest.newBuilder()\n      .DELETE(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/optout`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/whatsapp/api/v1/optout`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"numbers\": [\n      \"84********\",\n      \"93********\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"numbers\" => array(\n    \"84********\",\n    \"93********\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/whatsapp/api/v1/optout\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/summary/{id}": {
      "post": {
        "tags": ["email"],
        "operationId": "emailSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSummaryModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/email/api/v1/summary/{id} \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/summary/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/summary/{id}\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/summary/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/summary/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/summary/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/send/{id}": {
      "post": {
        "tags": ["email"],
        "operationId": "emailSent",
        "parameters": [
          {
            "name": "attach",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "bcc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailSendRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JSONObject"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/email/api/v1/send/{id}?attach=string&cc=string&bcc=string \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"personalizations\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"subject\": \"string\",\n      \"cc\": [\n        {\n          \"email\": \"string\"\n        }\n      ],\n      \"bcc\": [\n        {\n          \"email\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"content\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"from\": {\n    \"email\": \"string\",\n    \"name\": \"string\",\n    \"reply_to\": \"string\"\n  },\n  \"attachments\": [\n    {\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"filename\": \"string\"\n    }\n  ],\n  \"send_at\": \"int32\",\n  \"batch_id\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/send/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\nquery = {\n  \"attach\": \"string\",\n  \"cc\": \"string\",\n  \"bcc\": \"string\"\n}\npayload = {\n  \"personalizations\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"string\",\n          \"name\": \"string\"\n        }\n      ],\n      \"subject\": \"string\",\n      \"cc\": [\n        {\n          \"email\": \"string\"\n        }\n      ],\n      \"bcc\": [\n        {\n          \"email\": \"string\"\n        }\n      ]\n    }\n  ],\n  \"content\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"from\": {\n    \"email\": \"string\",\n    \"name\": \"string\",\n    \"reply_to\": \"string\"\n  },\n  \"attachments\": [\n    {\n      \"content\": \"string\",\n      \"type\": \"string\",\n      \"filename\": \"string\"\n    }\n  ],\n  \"send_at\": \"int32\",\n  \"batch_id\": \"string\"\n}\nresponse = requests.post(url, headers=headers, params=query, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"personalizations\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"to\\\": [\"\n,\"        \"{\"\"\n,\"          \\\"email\\\": \\\"string\\\",\"\n,\"          \\\"name\\\": \\\"string\\\"\"\n,\"        \"}\"\"\n,\"      ],\"\n,\"      \\\"subject\\\": \\\"string\\\",\"\n,\"      \\\"cc\\\": [\"\n,\"        \"{\"\"\n,\"          \\\"email\\\": \\\"string\\\"\"\n,\"        \"}\"\"\n,\"      ],\"\n,\"      \\\"bcc\\\": [\"\n,\"        \"{\"\"\n,\"          \\\"email\\\": \\\"string\\\"\"\n,\"        \"}\"\"\n,\"      ]\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"content\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"type\\\": \\\"string\\\",\"\n,\"      \\\"value\\\": \\\"string\\\"\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"from\\\": \"{\"\"\n,\"    \\\"email\\\": \\\"string\\\",\"\n,\"    \\\"name\\\": \\\"string\\\",\"\n,\"    \\\"reply_to\\\": \\\"string\\\"\"\n,\"  \"}\",\"\n,\"  \\\"attachments\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"content\\\": \\\"string\\\",\"\n,\"      \\\"type\\\": \\\"string\\\",\"\n,\"      \\\"filename\\\": \\\"string\\\"\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"send_at\\\": \\\"int32\\\",\"\n,\"  \\\"batch_id\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"attach\", \"string\");\n    params.put(\"cc\", \"string\");\n    params.put(\"bcc\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/send/{id}\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"attach\": \"string\",\n  \"cc\": \"string\",\n  \"bcc\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/send/{id}?${query}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"personalizations\": [\n      {\n        \"to\": [\n          {\n            \"email\": \"string\",\n            \"name\": \"string\"\n          }\n        ],\n        \"subject\": \"string\",\n        \"cc\": [\n          {\n            \"email\": \"string\"\n          }\n        ],\n        \"bcc\": [\n          {\n            \"email\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"content\": [\n      {\n        \"type\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"from\": {\n      \"email\": \"string\",\n      \"name\": \"string\",\n      \"reply_to\": \"string\"\n    },\n    \"attachments\": [\n      {\n        \"content\": \"string\",\n        \"type\": \"string\",\n        \"filename\": \"string\"\n      }\n    ],\n    \"send_at\": \"int32\",\n    \"batch_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"attach\": \"string\",\n  \"cc\": \"string\",\n  \"bcc\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/send/{id}?${query}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"personalizations\": [\n      {\n        \"to\": [\n          {\n            \"email\": \"string\",\n            \"name\": \"string\"\n          }\n        ],\n        \"subject\": \"string\",\n        \"cc\": [\n          {\n            \"email\": \"string\"\n          }\n        ],\n        \"bcc\": [\n          {\n            \"email\": \"string\"\n          }\n        ]\n      }\n    ],\n    \"content\": [\n      {\n        \"type\": \"string\",\n        \"value\": \"string\"\n      }\n    ],\n    \"from\": {\n      \"email\": \"string\",\n      \"name\": \"string\",\n      \"reply_to\": \"string\"\n    },\n    \"attachments\": [\n      {\n        \"content\": \"string\",\n        \"type\": \"string\",\n        \"filename\": \"string\"\n      }\n    ],\n    \"send_at\": \"int32\",\n    \"batch_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"attach\" => \"string\",\n  \"cc\" => \"string\",\n  \"bcc\" => \"string\"\n);\n$payload = array(\n  \"personalizations\" => array(\n    array(\n      \"to\" => array(\n        array(\n          \"email\" => \"string\",\n          \"name\" => \"string\"\n        )\n      ),\n      \"subject\" => \"string\",\n      \"cc\" => array(\n        array(\n          \"email\" => \"string\"\n        )\n      ),\n      \"bcc\" => array(\n        array(\n          \"email\" => \"string\"\n        )\n      )\n    )\n  ),\n  \"content\" => array(\n    array(\n      \"type\" => \"string\",\n      \"value\" => \"string\"\n    )\n  ),\n  \"from\" => array(\n    \"email\" => \"string\",\n    \"name\" => \"string\",\n    \"reply_to\" => \"string\"\n  ),\n  \"attachments\" => array(\n    array(\n      \"content\" => \"string\",\n      \"type\" => \"string\",\n      \"filename\" => \"string\"\n    )\n  ),\n  \"send_at\" => \"int32\",\n  \"batch_id\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/send/{id}?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/reporting/{id}": {
      "post": {
        "tags": ["email"],
        "operationId": "emailReporting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/email/api/v1/reporting/{id} \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/reporting/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\",\n  \"page\": \"int32\",\n  \"size\": \"int32\",\n  \"search\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\",\"\n,\"  \\\"page\\\": \\\"int32\\\",\"\n,\"  \\\"size\\\": \\\"int32\\\",\"\n,\"  \\\"search\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/reporting/{id}\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/reporting/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/reporting/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\",\n    \"page\": \"int32\",\n    \"size\": \"int32\",\n    \"search\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\",\n  \"page\" => \"int32\",\n  \"size\" => \"int32\",\n  \"search\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/reporting/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/dashboard/{id}": {
      "post": {
        "tags": ["email"],
        "operationId": "Email_report",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailDashboardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/email/api/v1/dashboard/{id} \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/dashboard/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"fromDate\": \"int64\",\n  \"toDate\": \"int64\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"fromDate\\\": \\\"int64\\\",\"\n,\"  \\\"toDate\\\": \\\"int64\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/dashboard/{id}\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/dashboard/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/dashboard/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"fromDate\": \"int64\",\n    \"toDate\": \"int64\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"fromDate\" => \"int64\",\n  \"toDate\" => \"int64\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/dashboard/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/dashboard/hour/{id}": {
      "post": {
        "tags": ["email"],
        "operationId": "hourlySms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/email/api/v1/dashboard/hour/{id} \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/dashboard/hour/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/dashboard/hour/{id}\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/dashboard/hour/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/dashboard/hour/{id}`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/dashboard/hour/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/api/authentication/webhook": {
      "post": {
        "tags": ["email"],
        "operationId": "getResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailResponse"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailResponse"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/api/authentication/webhook \\\n-H 'Content-Type: application/json' \\\n-d 'null'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/api/authentication/webhook\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = null\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\nnull\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/api/authentication/webhook\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/api/authentication/webhook`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  \"body\": null\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/api/authentication/webhook`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  \"body\": null\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = null;\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/api/authentication/webhook\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/summary/download/{id}": {
      "get": {
        "tags": ["email"],
        "operationId": "emailSummaryMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/email/api/v1/summary/download/{id} \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/summary/download/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/summary/download/{id}\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/summary/download/{id}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/summary/download/{id}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/summary/download/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/email/api/v1/reporting/download/{id}": {
      "get": {
        "tags": ["email"],
        "operationId": "emailDownloadMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/email/api/v1/reporting/download/{id} \\\n-H 'Content-Type: application/json' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/email/api/v1/reporting/download/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/email/api/v1/reporting/download/{id}\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/reporting/download/{id}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/email/api/v1/reporting/download/{id}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/email/api/v1/reporting/download/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "logIn",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCredentialDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "409": {
            "description": "User Already Exist"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/auth/login \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-d '{\n  \"user_name\": \"jon.doe@gmail.com\",\n  \"password\": \"Jondoe123@\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/auth/login\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\"\n}\n\npayload = {\n  \"user_name\": \"jon.doe@gmail.com\",\n  \"password\": \"Jondoe123@\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"user_name\\\": \\\"jon.doe@gmail.com\\\",\"\n,\"  \\\"password\\\": \\\"Jondoe123@\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/auth/login\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/auth/login`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  },\n  body: JSON.stringify({\n    \"user_name\": \"jon.doe@gmail.com\",\n    \"password\": \"Jondoe123@\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/auth/login`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  },\n  body: JSON.stringify({\n    \"user_name\": \"jon.doe@gmail.com\",\n    \"password\": \"Jondoe123@\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"user_name\" => \"jon.doe@gmail.com\",\n  \"password\" => \"Jondoe123@\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/auth/login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/tenant/access-key/{name}": {
      "patch": {
        "operationId": "TenantController_accessKey",
        "summary": "Generate new access key",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "409": {
            "description": "User Already Exist"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PATCH \\\nhttps://{host-domain}/voice/api/v1/tenant/access-key/{name} \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/tenant/access-key/{name}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\"\n}\n\n\nresponse = requests.patch(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/tenant/access-key/{name}\";\n    var request = HttpRequest.newBuilder()\n      .PATCH()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key/{name}`,\n{\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key/{name}`,\n{\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/tenant/access-key/{name}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/tenant/access-key/{id}": {
      "delete": {
        "operationId": "TenantController_deleteUser",
        "summary": "Delete access key",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api success"
          },
          "403": {
            "description": "You are not allowed to access this resource."
          },
          "404": {
            "description": "User not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X DELETE \\\nhttps://{host-domain}/voice/api/v1/tenant/access-key/{id} \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/tenant/access-key/{id}\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\"\n}\n\n\nresponse = requests.delete(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/tenant/access-key/{id}\";\n    var request = HttpRequest.newBuilder()\n      .DELETE()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key/{id}`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key/{id}`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/tenant/access-key/{id}\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/tenant/access-key": {
      "get": {
        "operationId": "TenantController_accessKeyList",
        "summary": "list all access key",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "409": {
            "description": "User Already Exist"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/voice/api/v1/tenant/access-key \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/tenant/access-key\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/tenant/access-key\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/tenant/access-key`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/tenant/access-key\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/setting/phone-number/list": {
      "get": {
        "operationId": "PhoneNumberController_publicList",
        "summary": "List all phone number",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Limit",
            "example": 10,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page_no",
            "required": true,
            "in": "query",
            "description": "Page number",
            "example": 1,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "input",
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Order by (Field name)",
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Api success"
          },
          "403": {
            "description": "You are not allowed to access this resource."
          },
          "404": {
            "description": "not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/voice/api/v1/setting/phone-number/list?limit=number&page_no=number&search=string&orderBy=string \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/setting/phone-number/list\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\"\n}\nquery = {\n  \"limit\": \"number\",\n  \"page_no\": \"number\",\n  \"search\": \"string\",\n  \"orderBy\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"number\");\n    params.put(\"page_no\", \"number\");\n    params.put(\"search\", \"string\");\n    params.put(\"orderBy\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/setting/phone-number/list\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"number\",\n  \"page_no\": \"number\",\n  \"search\": \"string\",\n  \"orderBy\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/setting/phone-number/list?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"number\",\n  \"page_no\": \"number\",\n  \"search\": \"string\",\n  \"orderBy\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/setting/phone-number/list?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"number\",\n  \"page_no\" => \"number\",\n  \"search\" => \"string\",\n  \"orderBy\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/setting/phone-number/list?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/callAndConnect": {
      "post": {
        "operationId": "CallingController_callsAndConnect",
        "summary": "Initiate New Request and connect",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndConnect"
                  },
                  "call1": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "call2": {
                    "example": {
                      "type": "phone/web",
                      "number": "888XXXX888",
                      "callerId": "841XXXX841"
                    }
                  },
                  "music": {
                    "example": "ANNOUNCEMENT_FILE"
                  },
                  "repeatCount": {
                    "example": "2"
                  },
                  "recordCall": {
                    "example": "true"
                  },
                  "stereo": {
                    "example": "mono"
                  },
                  "callbackUrl": {
                    "example": "http://127.0.0.1:3001/"
                  },
                  "extraParams": {
                    "example": {
                      "name": "xyz",
                      "city": "mumbai"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndConnect \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndConnect\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"call2\": {\n    \"type\": \"phone/web\",\n    \"number\": \"888XXXX888\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"music\": \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\": \"2\",\n  \"recordCall\": \"true\",\n  \"stereo\": \"mono\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndConnect\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndConnect\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"call2\": {\n    \"type\": \"phone/web\",\n    \"number\": \"888XXXX888\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"music\": \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\": \"2\",\n  \"recordCall\": \"true\",\n  \"stereo\": \"mono\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndConnect\\\",\"\n,\"  \\\"call1\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"call2\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"888XXXX888\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"music\\\": \\\"ANNOUNCEMENT_FILE\\\",\"\n,\"  \\\"repeatCount\\\": \\\"2\\\",\"\n,\"  \\\"recordCall\\\": \\\"true\\\",\"\n,\"  \\\"stereo\\\": \\\"mono\\\",\"\n,\"  \\\"callbackUrl\\\": \\\"http://127.0.0.1:3001/\\\",\"\n,\"  \\\"extraParams\\\": \"{\"\"\n,\"    \\\"name\\\": \\\"xyz\\\",\"\n,\"    \\\"city\\\": \\\"mumbai\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/callAndConnect\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndConnect`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndConnect\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"call2\": {\n      \"type\": \"phone/web\",\n      \"number\": \"888XXXX888\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"music\": \"ANNOUNCEMENT_FILE\",\n    \"repeatCount\": \"2\",\n    \"recordCall\": \"true\",\n    \"stereo\": \"mono\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndConnect`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndConnect\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"call2\": {\n      \"type\": \"phone/web\",\n      \"number\": \"888XXXX888\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"music\": \"ANNOUNCEMENT_FILE\",\n    \"repeatCount\": \"2\",\n    \"recordCall\": \"true\",\n    \"stereo\": \"mono\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndConnect\",\n  \"call1\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"call2\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"888XXXX888\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"music\" => \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\" => \"2\",\n  \"recordCall\" => \"true\",\n  \"stereo\" => \"mono\",\n  \"callbackUrl\" => \"http =>//127.0.0.1 =>3001/\",\n  \"extraParams\" => array(\n    \"name\" => \"xyz\",\n    \"city\" => \"mumbai\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndConnect\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/v1/cpaas/calls/callAndPark": {
      "post": {
        "operationId": "CallingController_callAndPark",
        "summary": "Initiate New Request and Park with another Call",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndPark"
                  },
                  "call1": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "callbackUrl": {
                    "example": "http://127.0.0.1:3001/"
                  },
                  "extraParams": {
                    "example": {
                      "name": "xyz",
                      "city": "mumbai"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndPark \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndPark\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndPark\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndPark\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndPark\\\",\"\n,\"  \\\"call1\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"callbackUrl\\\": \\\"http://127.0.0.1:3001/\\\",\"\n,\"  \\\"extraParams\\\": \"{\"\"\n,\"    \\\"name\\\": \\\"xyz\\\",\"\n,\"    \\\"city\\\": \\\"mumbai\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}/voice/api\";\n    var pathname = \"/v1/cpaas/calls/callAndPark\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndPark`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndPark\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndPark`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndPark\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndPark\",\n  \"call1\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"callbackUrl\" => \"http =>//127.0.0.1 =>3001/\",\n  \"extraParams\" => array(\n    \"name\" => \"xyz\",\n    \"city\" => \"mumbai\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndPark\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/callAndPlay": {
      "post": {
        "operationId": "CallingController_callAndPlay",
        "summary": "Initiate New Request and Play Music",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndPlay"
                  },
                  "call1": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "music": {
                    "example": "ANNOUNCEMENT_FILE"
                  },
                  "repeatCount": {
                    "example": "2"
                  },
                  "recordCall": {
                    "example": "true"
                  },
                  "stereo": {
                    "example": "mono"
                  },
                  "callbackUrl": {
                    "example": "http://127.0.0.1:3001/"
                  },
                  "extraParams": {
                    "example": {
                      "name": "xyz",
                      "city": "mumbai"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndPlay \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndPlay\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"music\": \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\": \"2\",\n  \"recordCall\": \"true\",\n  \"stereo\": \"mono\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndPlay\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndPlay\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"music\": \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\": \"2\",\n  \"recordCall\": \"true\",\n  \"stereo\": \"mono\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndPlay\\\",\"\n,\"  \\\"call1\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"music\\\": \\\"ANNOUNCEMENT_FILE\\\",\"\n,\"  \\\"repeatCount\\\": \\\"2\\\",\"\n,\"  \\\"recordCall\\\": \\\"true\\\",\"\n,\"  \\\"stereo\\\": \\\"mono\\\",\"\n,\"  \\\"callbackUrl\\\": \\\"http://127.0.0.1:3001/\\\",\"\n,\"  \\\"extraParams\\\": \"{\"\"\n,\"    \\\"name\\\": \\\"xyz\\\",\"\n,\"    \\\"city\\\": \\\"mumbai\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/callAndPlay\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndPlay`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndPlay\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"music\": \"ANNOUNCEMENT_FILE\",\n    \"repeatCount\": \"2\",\n    \"recordCall\": \"true\",\n    \"stereo\": \"mono\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndPlay`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndPlay\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"music\": \"ANNOUNCEMENT_FILE\",\n    \"repeatCount\": \"2\",\n    \"recordCall\": \"true\",\n    \"stereo\": \"mono\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndPlay\",\n  \"call1\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"music\" => \"ANNOUNCEMENT_FILE\",\n  \"repeatCount\" => \"2\",\n  \"recordCall\" => \"true\",\n  \"stereo\" => \"mono\",\n  \"callbackUrl\" => \"http =>//127.0.0.1 =>3001/\",\n  \"extraParams\" => array(\n    \"name\" => \"xyz\",\n    \"city\" => \"mumbai\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndPlay\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/callAndSpeak": {
      "post": {
        "operationId": "CallingController_callAndSpeak",
        "summary": "Initiate New Request and speak by text to speech",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndSpeak"
                  },
                  "call1": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "text": {
                    "example": "Hello John, How are you?"
                  },
                  "voice": {
                    "example": {
                      "language_code": "en-In",
                      "type": "aws-tts",
                      "voice_name": "Matthew",
                      "voice_type": "Standard",
                      "speechRate": 100
                    }
                  },
                  "repeatCount": {
                    "example": "2"
                  },
                  "callbackUrl": {
                    "example": "http://127.0.0.1:3001/"
                  },
                  "extraParams": {
                    "example": {
                      "name": "xyz",
                      "city": "mumbai"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndSpeak \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndSpeak\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"text\": \"Hello John, How are you?\",\n  \"voice\": {\n    \"language_code\": \"en-In\",\n    \"type\": \"aws-tts\",\n    \"voice_name\": \"Matthew\",\n    \"voice_type\": \"Standard\",\n    \"speechRate\": 100\n  },\n  \"repeatCount\": \"2\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndSpeak\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndSpeak\",\n  \"call1\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"text\": \"Hello John, How are you?\",\n  \"voice\": {\n    \"language_code\": \"en-In\",\n    \"type\": \"aws-tts\",\n    \"voice_name\": \"Matthew\",\n    \"voice_type\": \"Standard\",\n    \"speechRate\": 100\n  },\n  \"repeatCount\": \"2\",\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndSpeak\\\",\"\n,\"  \\\"call1\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"text\\\": \\\"Hello John, How are you?\\\",\"\n,\"  \\\"voice\\\": \"{\"\"\n,\"    \\\"language_code\\\": \\\"en-In\\\",\"\n,\"    \\\"type\\\": \\\"aws-tts\\\",\"\n,\"    \\\"voice_name\\\": \\\"Matthew\\\",\"\n,\"    \\\"voice_type\\\": \\\"Standard\\\",\"\n,\"    \\\"speechRate\\\": 100\"\n,\"  \"}\",\"\n,\"  \\\"repeatCount\\\": \\\"2\\\",\"\n,\"  \\\"callbackUrl\\\": \\\"http://127.0.0.1:3001/\\\",\"\n,\"  \\\"extraParams\\\": \"{\"\"\n,\"    \\\"name\\\": \\\"xyz\\\",\"\n,\"    \\\"city\\\": \\\"mumbai\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/callAndSpeak\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndSpeak`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndSpeak\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"text\": \"Hello John, How are you?\",\n    \"voice\": {\n      \"language_code\": \"en-In\",\n      \"type\": \"aws-tts\",\n      \"voice_name\": \"Matthew\",\n      \"voice_type\": \"Standard\",\n      \"speechRate\": 100\n    },\n    \"repeatCount\": \"2\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndSpeak`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndSpeak\",\n    \"call1\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"text\": \"Hello John, How are you?\",\n    \"voice\": {\n      \"language_code\": \"en-In\",\n      \"type\": \"aws-tts\",\n      \"voice_name\": \"Matthew\",\n      \"voice_type\": \"Standard\",\n      \"speechRate\": 100\n    },\n    \"repeatCount\": \"2\",\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndSpeak\",\n  \"call1\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"text\" => \"Hello John, How are you?\",\n  \"voice\" => array(\n    \"language_code\" => \"en-In\",\n    \"type\" => \"aws-tts\",\n    \"voice_name\" => \"Matthew\",\n    \"voice_type\" => \"Standard\",\n    \"speechRate\" => 100\n  ),\n  \"repeatCount\" => \"2\",\n  \"callbackUrl\" => \"http =>//127.0.0.1 =>3001/\",\n  \"extraParams\" => array(\n    \"name\" => \"xyz\",\n    \"city\" => \"mumbai\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndSpeak\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/callAndMerge": {
      "post": {
        "operationId": "CallingController_callAndMerge",
        "summary": "Initiate New Request and Merge",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndMerge"
                  },
                  "sessionId": {
                    "example": "sessionId"
                  },
                  "call": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "callbackUrl": {
                    "example": "http://127.0.0.1:3001/"
                  },
                  "extraParams": {
                    "example": {
                      "name": "xyz",
                      "city": "mumbai"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndMerge \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndMerge\",\n  \"sessionId\": \"sessionId\",\n  \"call\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndMerge\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndMerge\",\n  \"sessionId\": \"sessionId\",\n  \"call\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"callbackUrl\": \"http://127.0.0.1:3001/\",\n  \"extraParams\": {\n    \"name\": \"xyz\",\n    \"city\": \"mumbai\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndMerge\\\",\"\n,\"  \\\"sessionId\\\": \\\"sessionId\\\",\"\n,\"  \\\"call\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"callbackUrl\\\": \\\"http://127.0.0.1:3001/\\\",\"\n,\"  \\\"extraParams\\\": \"{\"\"\n,\"    \\\"name\\\": \\\"xyz\\\",\"\n,\"    \\\"city\\\": \\\"mumbai\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/callAndMerge\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndMerge`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndMerge\",\n    \"sessionId\": \"sessionId\",\n    \"call\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndMerge`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndMerge\",\n    \"sessionId\": \"sessionId\",\n    \"call\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"callbackUrl\": \"http://127.0.0.1:3001/\",\n    \"extraParams\": {\n      \"name\": \"xyz\",\n      \"city\": \"mumbai\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndMerge\",\n  \"sessionId\" => \"sessionId\",\n  \"call\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"callbackUrl\" => \"http =>//127.0.0.1 =>3001/\",\n  \"extraParams\" => array(\n    \"name\" => \"xyz\",\n    \"city\" => \"mumbai\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndMerge\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/mute": {
      "post": {
        "operationId": "CallingController_muted",
        "summary": "Initiate New Request and Mute Call",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "mute"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/mute \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"mute\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/mute\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"mute\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"mute\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/mute\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/mute`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"mute\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/mute`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"mute\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"mute\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/mute\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/unmute": {
      "post": {
        "operationId": "CallingController_unmuted",
        "summary": "Initiate New Request and Unmute Call",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "unmute"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/unmute \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"unmute\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/unmute\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"unmute\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"unmute\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/unmute\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/unmute`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"unmute\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/unmute`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"unmute\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"unmute\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/unmute\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/Hold": {
      "post": {
        "operationId": "CallingController_Hold",
        "summary": "Initiate New Request and Hold",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "Hold"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "music": {
                    "example": "ANNOUNCEMENT_FILE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/Hold \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"Hold\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"ANNOUNCEMENT_FILE\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/Hold\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"Hold\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"ANNOUNCEMENT_FILE\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"Hold\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"music\\\": \\\"ANNOUNCEMENT_FILE\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/Hold\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/Hold`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"Hold\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"ANNOUNCEMENT_FILE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/Hold`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"Hold\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"ANNOUNCEMENT_FILE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"Hold\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\" => \"ANNOUNCEMENT_FILE\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/Hold\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/UnHold": {
      "post": {
        "operationId": "CallingController_UnHold",
        "summary": "Initiate New Request and Unhold",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "UnHold"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/UnHold \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"UnHold\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/UnHold\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"UnHold\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"UnHold\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/UnHold\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/UnHold`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"UnHold\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/UnHold`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"UnHold\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"UnHold\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/UnHold\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/DTMF": {
      "post": {
        "operationId": "CallingController_DTMF",
        "summary": "Initiate New Request and capture DTMF",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "DTMF"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId1": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "dtmf": {
                    "example": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/DTMF \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"DTMF\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"dtmf\": \"1\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/DTMF\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"DTMF\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"dtmf\": \"1\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"DTMF\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId1\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"dtmf\\\": \\\"1\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/DTMF\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/DTMF`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"DTMF\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"dtmf\": \"1\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/DTMF`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"DTMF\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"dtmf\": \"1\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"DTMF\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"dtmf\" => \"1\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/DTMF\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/speakAudio": {
      "post": {
        "operationId": "CallingController_speakAudio",
        "summary": "Initiate New Request and Speak Audio",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "speakAudio"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId1": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "text": {
                    "example": "Hello John, How are you?"
                  },
                  "voice": {
                    "example": {
                      "language_code": "en-In",
                      "type": "aws-tts",
                      "voice_name": "Matthew",
                      "voice_type": "Standard",
                      "speechRate": 100
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/speakAudio \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"speakAudio\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"text\": \"Hello John, How are you?\",\n  \"voice\": {\n    \"language_code\": \"en-In\",\n    \"type\": \"aws-tts\",\n    \"voice_name\": \"Matthew\",\n    \"voice_type\": \"Standard\",\n    \"speechRate\": 100\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/speakAudio\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"speakAudio\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"text\": \"Hello John, How are you?\",\n  \"voice\": {\n    \"language_code\": \"en-In\",\n    \"type\": \"aws-tts\",\n    \"voice_name\": \"Matthew\",\n    \"voice_type\": \"Standard\",\n    \"speechRate\": 100\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"speakAudio\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId1\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"text\\\": \\\"Hello John, How are you?\\\",\"\n,\"  \\\"voice\\\": \"{\"\"\n,\"    \\\"language_code\\\": \\\"en-In\\\",\"\n,\"    \\\"type\\\": \\\"aws-tts\\\",\"\n,\"    \\\"voice_name\\\": \\\"Matthew\\\",\"\n,\"    \\\"voice_type\\\": \\\"Standard\\\",\"\n,\"    \\\"speechRate\\\": 100\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/speakAudio\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/speakAudio`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"speakAudio\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"text\": \"Hello John, How are you?\",\n    \"voice\": {\n      \"language_code\": \"en-In\",\n      \"type\": \"aws-tts\",\n      \"voice_name\": \"Matthew\",\n      \"voice_type\": \"Standard\",\n      \"speechRate\": 100\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/speakAudio`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"speakAudio\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"text\": \"Hello John, How are you?\",\n    \"voice\": {\n      \"language_code\": \"en-In\",\n      \"type\": \"aws-tts\",\n      \"voice_name\": \"Matthew\",\n      \"voice_type\": \"Standard\",\n      \"speechRate\": 100\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"speakAudio\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"text\" => \"Hello John, How are you?\",\n  \"voice\" => array(\n    \"language_code\" => \"en-In\",\n    \"type\" => \"aws-tts\",\n    \"voice_name\" => \"Matthew\",\n    \"voice_type\" => \"Standard\",\n    \"speechRate\" => 100\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/speakAudio\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/merge": {
      "post": {
        "operationId": "CallingController_merge",
        "summary": "merge with existing calls",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "merge"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId1": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "callId2": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/merge \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"merge\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"callId2\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f3\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/merge\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"merge\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"callId2\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f3\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"merge\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId1\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"callId2\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f3\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/merge\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/merge`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"merge\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"callId2\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f3\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/merge`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"merge\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId1\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"callId2\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f3\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"merge\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId1\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"callId2\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f3\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/merge\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/playAudioEndless": {
      "post": {
        "operationId": "CallingController_playAudioEndless",
        "summary": "playAudioEndless",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "playAudioEndless"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "music": {
                    "example": "ANNOUNCEMENT_FILE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/playAudioEndless \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"playAudioEndless\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"ANNOUNCEMENT_FILE\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/playAudioEndless\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"playAudioEndless\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"ANNOUNCEMENT_FILE\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"playAudioEndless\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"music\\\": \\\"ANNOUNCEMENT_FILE\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/playAudioEndless\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/playAudioEndless`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"playAudioEndless\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"ANNOUNCEMENT_FILE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/playAudioEndless`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"playAudioEndless\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"ANNOUNCEMENT_FILE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"playAudioEndless\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\" => \"ANNOUNCEMENT_FILE\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/playAudioEndless\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/playAudioStop": {
      "post": {
        "operationId": "CallingController_playAudioStop",
        "summary": "playAudioStop",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "playAudioStop"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/playAudioStop \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"playAudioStop\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/playAudioStop\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"playAudioStop\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"playAudioStop\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/playAudioStop\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/playAudioStop`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"playAudioStop\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/playAudioStop`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"playAudioStop\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"playAudioStop\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/playAudioStop\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/startRecording": {
      "post": {
        "operationId": "CallingController_startRecording",
        "summary": "startRecording",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "startRecording"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/startRecording \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"startRecording\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/startRecording\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"startRecording\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"startRecording\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/startRecording\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/startRecording`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"startRecording\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/startRecording`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"startRecording\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"startRecording\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/startRecording\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/stopRecording": {
      "post": {
        "operationId": "CallingController_stopRecording",
        "summary": "stopRecording",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "stopRecording"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/stopRecording \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"stopRecording\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/stopRecording\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"stopRecording\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"stopRecording\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/stopRecording\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/stopRecording`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"stopRecording\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/stopRecording`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"stopRecording\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"stopRecording\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/stopRecording\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/voicemail": {
      "post": {
        "operationId": "CallingController_voicemail",
        "summary": "voicemail",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "voicemail"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "music": {
                    "example": "VOICEMAIL_FILE"
                  },
                  "postSave": {
                    "example": "VOICEMAIL_POST_FILE"
                  },
                  "recordTime": {
                    "example": "10"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/voicemail \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"voicemail\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"VOICEMAIL_FILE\",\n  \"postSave\": \"VOICEMAIL_POST_FILE\",\n  \"recordTime\": \"10\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/voicemail\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"voicemail\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\": \"VOICEMAIL_FILE\",\n  \"postSave\": \"VOICEMAIL_POST_FILE\",\n  \"recordTime\": \"10\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"voicemail\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"music\\\": \\\"VOICEMAIL_FILE\\\",\"\n,\"  \\\"postSave\\\": \\\"VOICEMAIL_POST_FILE\\\",\"\n,\"  \\\"recordTime\\\": \\\"10\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/voicemail\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/voicemail`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"voicemail\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"VOICEMAIL_FILE\",\n    \"postSave\": \"VOICEMAIL_POST_FILE\",\n    \"recordTime\": \"10\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/voicemail`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"voicemail\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"music\": \"VOICEMAIL_FILE\",\n    \"postSave\": \"VOICEMAIL_POST_FILE\",\n    \"recordTime\": \"10\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"voicemail\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"music\" => \"VOICEMAIL_FILE\",\n  \"postSave\" => \"VOICEMAIL_POST_FILE\",\n  \"recordTime\" => \"10\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/voicemail\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/hungup": {
      "post": {
        "operationId": "CallingController_hungup",
        "summary": "hungup",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "hungup"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/hungup \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"hungup\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/hungup\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"hungup\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"hungup\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/hungup\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/hungup`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"hungup\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/hungup`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"hungup\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"hungup\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/hungup\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/callAndMonitor": {
      "post": {
        "operationId": "CallingController_callAndMonitor",
        "summary": "Initiate New Request and Monitor",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "callAndMonitor"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  },
                  "call": {
                    "example": {
                      "type": "phone/web",
                      "number": "999XXXX999",
                      "callerId": "841XXXX841"
                    }
                  },
                  "recordCall": {
                    "example": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/callAndMonitor \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"callAndMonitor\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"call\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"recordCall\": \"true\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndMonitor\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"callAndMonitor\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"call\": {\n    \"type\": \"phone/web\",\n    \"number\": \"999XXXX999\",\n    \"callerId\": \"841XXXX841\"\n  },\n  \"recordCall\": \"true\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"callAndMonitor\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\",\"\n,\"  \\\"call\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"phone/web\\\",\"\n,\"    \\\"number\\\": \\\"999XXXX999\\\",\"\n,\"    \\\"callerId\\\": \\\"841XXXX841\\\"\"\n,\"  \"}\",\"\n,\"  \\\"recordCall\\\": \\\"true\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/callAndMonitor\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndMonitor`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndMonitor\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"call\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"recordCall\": \"true\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/callAndMonitor`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"callAndMonitor\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n    \"call\": {\n      \"type\": \"phone/web\",\n      \"number\": \"999XXXX999\",\n      \"callerId\": \"841XXXX841\"\n    },\n    \"recordCall\": \"true\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"callAndMonitor\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\",\n  \"call\" => array(\n    \"type\" => \"phone/web\",\n    \"number\" => \"999XXXX999\",\n    \"callerId\" => \"841XXXX841\"\n  ),\n  \"recordCall\" => \"true\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/callAndMonitor\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/voice/api/v1/cpaas/calls/answerAndPark": {
      "post": {
        "operationId": "CallingController_answerAndPark",
        "summary": "Answer call and park it with another call",
        "parameters": [
          {
            "name": "X-TENANT-ID",
            "in": "header",
            "description": "tenant id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access-key",
            "in": "header",
            "description": "access-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "example": "answerAndPark"
                  },
                  "sessionId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f1"
                  },
                  "callId": {
                    "example": "e216c51f-31ae-4733-950a-fe2f1c9f44f2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Api success"
          },
          "404": {
            "description": "Not found!"
          },
          "422": {
            "description": "Bad Request or API error message"
          },
          "500": {
            "description": "Internal server error!"
          }
        },
        "tags": ["voice"],
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/voice/api/v1/cpaas/calls/answerAndPark \\\n-H 'Content-Type: application/json' \\\n-H 'X-TENANT-ID: string' \\\n-H 'access-key: string' \\\n-d '{\n  \"type\": \"answerAndPark\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/voice/api/v1/cpaas/calls/answerAndPark\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"X-TENANT-ID\": \"string\",\n  \"access-key\": \"string\"\n}\n\npayload = {\n  \"type\": \"answerAndPark\",\n  \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"answerAndPark\\\",\"\n,\"  \\\"sessionId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f1\\\",\"\n,\"  \\\"callId\\\": \\\"e216c51f-31ae-4733-950a-fe2f1c9f44f2\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/voice/api/v1/cpaas/calls/answerAndPark\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"X-TENANT-ID\", \"value\").header(\"access-key\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/answerAndPark`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"answerAndPark\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/voice/api/v1/cpaas/calls/answerAndPark`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"X-TENANT-ID\": \"string\",\n    \"access-key\": \"string\"\n  },\n  body: JSON.stringify({\n    \"type\": \"answerAndPark\",\n    \"sessionId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n    \"callId\": \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"answerAndPark\",\n  \"sessionId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f1\",\n  \"callId\" => \"e216c51f-31ae-4733-950a-fe2f1c9f44f2\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"X-TENANT-ID: string\",\n  \"access-key: string\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/voice/api/v1/cpaas/calls/answerAndPark\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/auth/jwt/create/": {
      "post": {
        "operationId": "auth_jwt_create_create",
        "summary": "Create JWT Authentication Tokens",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/auth/jwt/create/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/auth/jwt/create/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"username\": \"string\",\n  \"password\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"username\\\": \\\"string\\\",\"\n,\"  \\\"password\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/auth/jwt/create/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/create/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/create/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"username\" => \"string\",\n  \"password\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/auth/jwt/create/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/auth/jwt/refresh/": {
      "post": {
        "operationId": "auth_jwt_refresh_create",
        "summary": "Refresh JWT Access Token",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/auth/jwt/refresh/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"refresh\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/auth/jwt/refresh/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"refresh\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"refresh\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/auth/jwt/refresh/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/refresh/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"refresh\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/refresh/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"refresh\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"refresh\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/auth/jwt/refresh/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/auth/jwt/verify/": {
      "post": {
        "operationId": "auth_jwt_verify_create",
        "summary": "Verify JWT Access Token",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerify"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/auth/jwt/verify/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"token\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/auth/jwt/verify/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"token\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"token\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/auth/jwt/verify/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/verify/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"token\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/auth/jwt/verify/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"token\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"token\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/auth/jwt/verify/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/auth/token/login/": {
      "post": {
        "operationId": "auth_token_login_create",
        "summary": "Retrieve Authentication Token",
        "description": "Use this endpoint to obtain user authentication token.",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreate"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCreate"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/auth/token/login/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"password\": \"string\",\n  \"username\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/auth/token/login/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"password\": \"string\",\n  \"username\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"password\\\": \\\"string\\\",\"\n,\"  \\\"username\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/auth/token/login/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/auth/token/login/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"password\": \"string\",\n    \"username\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/auth/token/login/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"password\": \"string\",\n    \"username\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"password\" => \"string\",\n  \"username\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/auth/token/login/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/auth/token/logout/": {
      "post": {
        "operationId": "auth_token_logout_create",
        "summary": "Clear Authentication Token",
        "description": "Use this endpoint to logout user (remove user authentication token).",
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/auth/token/logout/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/auth/token/logout/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/auth/token/logout/\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/auth/token/logout/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/auth/token/logout/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/auth/token/logout/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/add/webhook/": {
      "post": {
        "operationId": "rcs_api_v1_add_webhook_create",
        "summary": "Add Webhook",
        "description": "This api is to add Webhook on which users wants us to push all the received messages and events.",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/add_webhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/add_webhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/add_webhook"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook added successfully"
          },
          "400": {
            "description": "Bad request (something invalid)"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/add/webhook/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"url\": \"https://example.com\",\n  \"headers\": {\n    \"Authorization\": \"XXXXXXXXXX\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/add/webhook/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"url\": \"https://example.com\",\n  \"headers\": {\n    \"Authorization\": \"XXXXXXXXXX\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"url\\\": \\\"https://example.com\\\",\"\n,\"  \\\"headers\\\": \"{\"\"\n,\"    \\\"Authorization\\\": \\\"XXXXXXXXXX\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/add/webhook/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/add/webhook/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"url\": \"https://example.com\",\n    \"headers\": {\n      \"Authorization\": \"XXXXXXXXXX\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/add/webhook/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"url\": \"https://example.com\",\n    \"headers\": {\n      \"Authorization\": \"XXXXXXXXXX\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"url\" => \"https =>//example.com\",\n  \"headers\" => array(\n    \"Authorization\" => \"XXXXXXXXXX\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/add/webhook/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/analytics/": {
      "get": {
        "operationId": "rcs_api_v1_analytics_retrieve",
        "summary": "Report Analytics",
        "description": "Get hourly, weekly and monthly analytics of all the sent RCS messages ",
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/analytics/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/analytics/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/analytics/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/analytics/`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/analytics/`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/analytics/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/bulk-cap-check/": {
      "post": {
        "operationId": "rcs_api_v1_bulk_cap_check_create",
        "summary": "Bulk RCS Capability Check",
        "description": "This api check the RCS capability of list of phone numbers",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bulk_cap_check"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/bulk_cap_check"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/bulk_cap_check"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bulk_cap_check"
                }
              }
            },
            "description": "Gets the list of capable users"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/bulk-cap-check/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_numbers\": [\n    \"+919999999999\",\n    \"+919999999998\"\n  ]\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/bulk-cap-check/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_numbers\": [\n    \"+919999999999\",\n    \"+919999999998\"\n  ]\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_numbers\\\": [\"\n,\"    \\\"+919999999999\\\",\"\n,\"    \\\"+919999999998\\\"\"\n,\"  ]\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/bulk-cap-check/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/bulk-cap-check/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_numbers\": [\n      \"+919999999999\",\n      \"+919999999998\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/bulk-cap-check/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_numbers\": [\n      \"+919999999999\",\n      \"+919999999998\"\n    ]\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_numbers\" => array(\n    \"+919999999999\",\n    \"+919999999998\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/bulk-cap-check/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/check-capability/{phone_number}/": {
      "post": {
        "operationId": "rcs_api_v1_check_capability_create",
        "summary": "RCS Capability Check",
        "description": "This api check the RCS capability of a phone number",
        "parameters": [
          {
            "in": "path",
            "name": "phone_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "RCS is activated on Users Phone. If you want to start the conversation please send the inviataion."
          },
          "400": {
            "description": "The request URL must contain the user phone number in the format of: phones/<E.164>, where <E.164> is the user's phone number in E.164 format."
          },
          "404": {
            "description": "RCS is not activated on Users Phone"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/check-capability/{phone_number}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/check-capability/{phone_number}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/check-capability/{phone_number}/\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/check-capability/{phone_number}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/check-capability/{phone_number}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/check-capability/{phone_number}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/dashboard/": {
      "post": {
        "operationId": "rcs_api_v1_dashboard_create",
        "summary": "Dashboard",
        "description": "from_date and to_date should be timestamp in millisecond format",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/dashboard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/dashboard"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/dashboard/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"from_date\": 1671694691113,\n  \"to_date\": 1671781091114\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/dashboard/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"from_date\": 1671694691113,\n  \"to_date\": 1671781091114\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"from_date\\\": 1671694691113,\"\n,\"  \\\"to_date\\\": 1671781091114\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/dashboard/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/dashboard/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"from_date\": 1671694691113,\n    \"to_date\": 1671781091114\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/dashboard/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"from_date\": 1671694691113,\n    \"to_date\": 1671781091114\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"from_date\" => 1671694691113,\n  \"to_date\" => 1671781091114\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/dashboard/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/delete/{message_type}/": {
      "post": {
        "operationId": "rcs_api_v1_delete_create",
        "summary": "Delete RCS Template",
        "description": "Delete Saved template",
        "parameters": [
          {
            "in": "path",
            "name": "message_type",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/delete_message"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/delete_message"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/delete_message"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "intent was deleted successfully"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/delete/{message_type}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"intent\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/delete/{message_type}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"intent\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"intent\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/delete/{message_type}/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/delete/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/delete/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"intent\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/delete/{message_type}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/invite-tester/{phone_number}/": {
      "post": {
        "operationId": "rcs_api_v1_invite_tester_create",
        "summary": "Send Tester Invitation",
        "description": "This api is to send Tester Invitation to number when agent is in testing phase",
        "parameters": [
          {
            "in": "path",
            "name": "phone_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invite_tester"
                }
              }
            },
            "description": "Invitation is send to phone_number form rcs_agent."
          },
          "400": {
            "description": "Request contains an invalid argument."
          },
          "404": {
            "description": "Requested entity was not found."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/invite-tester/{phone_number}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/invite-tester/{phone_number}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\n\nresponse = requests.post(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/invite-tester/{phone_number}/\";\n    var request = HttpRequest.newBuilder()\n      .POST()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/invite-tester/{phone_number}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/invite-tester/{phone_number}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/invite-tester/{phone_number}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/pause-bulk/": {
      "post": {
        "operationId": "rcs_api_v1_pause_bulk_create",
        "summary": "Pause Bulk RCS Message",
        "description": "Pause Campaign",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pause_bulk_message"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/pause_bulk_message"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/pause_bulk_message"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Resumed your campaign with campaign id {campaign_id}"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "404": {
            "description": "Campaign with campaign id {campaign_id} Does not exists"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          },
          "406": {
            "description": "Campaign with campaign id {campaign_id} is already Finished."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/pause-bulk/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"campaign_id\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/pause-bulk/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"campaign_id\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"campaign_id\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/pause-bulk/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/pause-bulk/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"campaign_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/pause-bulk/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"campaign_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"campaign_id\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/pause-bulk/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/resume-bulk/": {
      "post": {
        "operationId": "rcs_api_v1_resume_bulk_create",
        "summary": "Resume Bulk RCS Message",
        "description": "Resume Campaign",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resume_bulk_message"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/resume_bulk_message"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/resume_bulk_message"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Resumed your campaign with campaign id {campaign_id}"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          },
          "404": {
            "description": "Campaign with campaign id {campaign_id} Does not exists"
          },
          "406": {
            "description": "Campaign with campaign id {campaign_id} is already Finished."
          },
          "409": {
            "description": "{campaign_name} Campaign with campaign_id {campaign_id} is in Active state. You can run only one campaign at a time"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/resume-bulk/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"campaign_id\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/resume-bulk/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"campaign_id\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"campaign_id\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/resume-bulk/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/resume-bulk/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"campaign_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/resume-bulk/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"campaign_id\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"campaign_id\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/resume-bulk/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/save/carousel/": {
      "post": {
        "operationId": "rcs_api_v1_save_carousel_create",
        "description": "Save Your Carousel Of Cards Template that you want to send with unique intent.<br>There Are 6 Different types of suggestions<ul><li>text_suggestion</li><li>url_suggestion</li><li>dial_suggestion</li><li>view_location_suggestion</li><li>share_location_suggestion</li><li>calender_event_suggestion</li></ul>",
        "summary": "Save RCS Carousel Of Cards Template",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarouselOfCards"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CarouselOfCards"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CarouselOfCards"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarouselOfCards"
                }
              }
            },
            "description": "Created. New resource in response"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/save/carousel/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"cards\": [\n    {\n      \"suggestions\": {\n        \"text_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\"\n          }\n        ],\n        \"url_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"url\": \"uri\"\n          }\n        ],\n        \"dial_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"phone_number\": \"string\"\n          }\n        ],\n        \"view_location_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"location\": \"string\"\n          }\n        ],\n        \"share_location_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\"\n          }\n        ],\n        \"calender_event_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"event_start_datetime\": \"date-time\",\n            \"event_end_datetime\": \"date-time\",\n            \"event_Title\": \"string\",\n            \"event_description\": \"string\"\n          }\n        ]\n      },\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"image_url\": \"uri\",\n      \"image_height\": \"SHORT\",\n      \"file_resource_id\": \"string\",\n      \"resource_cashed_at\": \"date-time\"\n    }\n  ],\n  \"intent\": \"string\",\n  \"card_width\": \"SMALL\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/save/carousel/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"cards\": [\n    {\n      \"suggestions\": {\n        \"text_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\"\n          }\n        ],\n        \"url_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"url\": \"uri\"\n          }\n        ],\n        \"dial_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"phone_number\": \"string\"\n          }\n        ],\n        \"view_location_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"location\": \"string\"\n          }\n        ],\n        \"share_location_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\"\n          }\n        ],\n        \"calender_event_suggestion\": [\n          {\n            \"display_text\": \"string\",\n            \"postback_reply\": \"string\",\n            \"event_start_datetime\": \"date-time\",\n            \"event_end_datetime\": \"date-time\",\n            \"event_Title\": \"string\",\n            \"event_description\": \"string\"\n          }\n        ]\n      },\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"image_url\": \"uri\",\n      \"image_height\": \"SHORT\",\n      \"file_resource_id\": \"string\",\n      \"resource_cashed_at\": \"date-time\"\n    }\n  ],\n  \"intent\": \"string\",\n  \"card_width\": \"SMALL\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"cards\\\": [\"\n,\"    \"{\"\"\n,\"      \\\"suggestions\\\": \"{\"\"\n,\"        \\\"text_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        ],\"\n,\"        \\\"url_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\",\"\n,\"            \\\"url\\\": \\\"uri\\\"\"\n,\"          \"}\"\"\n,\"        ],\"\n,\"        \\\"dial_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\",\"\n,\"            \\\"phone_number\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        ],\"\n,\"        \\\"view_location_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\",\"\n,\"            \\\"location\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        ],\"\n,\"        \\\"share_location_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        ],\"\n,\"        \\\"calender_event_suggestion\\\": [\"\n,\"          \"{\"\"\n,\"            \\\"display_text\\\": \\\"string\\\",\"\n,\"            \\\"postback_reply\\\": \\\"string\\\",\"\n,\"            \\\"event_start_datetime\\\": \\\"date-time\\\",\"\n,\"            \\\"event_end_datetime\\\": \\\"date-time\\\",\"\n,\"            \\\"event_Title\\\": \\\"string\\\",\"\n,\"            \\\"event_description\\\": \\\"string\\\"\"\n,\"          \"}\"\"\n,\"        ]\"\n,\"      \"}\",\"\n,\"      \\\"title\\\": \\\"string\\\",\"\n,\"      \\\"description\\\": \\\"string\\\",\"\n,\"      \\\"image_url\\\": \\\"uri\\\",\"\n,\"      \\\"image_height\\\": \\\"SHORT\\\",\"\n,\"      \\\"file_resource_id\\\": \\\"string\\\",\"\n,\"      \\\"resource_cashed_at\\\": \\\"date-time\\\"\"\n,\"    \"}\"\"\n,\"  ],\"\n,\"  \\\"intent\\\": \\\"string\\\",\"\n,\"  \\\"card_width\\\": \\\"SMALL\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/save/carousel/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/carousel/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"cards\": [\n      {\n        \"suggestions\": {\n          \"text_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\"\n            }\n          ],\n          \"url_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"url\": \"uri\"\n            }\n          ],\n          \"dial_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"phone_number\": \"string\"\n            }\n          ],\n          \"view_location_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"location\": \"string\"\n            }\n          ],\n          \"share_location_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\"\n            }\n          ],\n          \"calender_event_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"event_start_datetime\": \"date-time\",\n              \"event_end_datetime\": \"date-time\",\n              \"event_Title\": \"string\",\n              \"event_description\": \"string\"\n            }\n          ]\n        },\n        \"title\": \"string\",\n        \"description\": \"string\",\n        \"image_url\": \"uri\",\n        \"image_height\": \"SHORT\",\n        \"file_resource_id\": \"string\",\n        \"resource_cashed_at\": \"date-time\"\n      }\n    ],\n    \"intent\": \"string\",\n    \"card_width\": \"SMALL\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/carousel/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"cards\": [\n      {\n        \"suggestions\": {\n          \"text_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\"\n            }\n          ],\n          \"url_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"url\": \"uri\"\n            }\n          ],\n          \"dial_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"phone_number\": \"string\"\n            }\n          ],\n          \"view_location_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"location\": \"string\"\n            }\n          ],\n          \"share_location_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\"\n            }\n          ],\n          \"calender_event_suggestion\": [\n            {\n              \"display_text\": \"string\",\n              \"postback_reply\": \"string\",\n              \"event_start_datetime\": \"date-time\",\n              \"event_end_datetime\": \"date-time\",\n              \"event_Title\": \"string\",\n              \"event_description\": \"string\"\n            }\n          ]\n        },\n        \"title\": \"string\",\n        \"description\": \"string\",\n        \"image_url\": \"uri\",\n        \"image_height\": \"SHORT\",\n        \"file_resource_id\": \"string\",\n        \"resource_cashed_at\": \"date-time\"\n      }\n    ],\n    \"intent\": \"string\",\n    \"card_width\": \"SMALL\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"cards\" => array(\n    array(\n      \"suggestions\" => array(\n        \"text_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\"\n          )\n        ),\n        \"url_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\",\n            \"url\" => \"uri\"\n          )\n        ),\n        \"dial_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\",\n            \"phone_number\" => \"string\"\n          )\n        ),\n        \"view_location_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\",\n            \"location\" => \"string\"\n          )\n        ),\n        \"share_location_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\"\n          )\n        ),\n        \"calender_event_suggestion\" => array(\n          array(\n            \"display_text\" => \"string\",\n            \"postback_reply\" => \"string\",\n            \"event_start_datetime\" => \"date-time\",\n            \"event_end_datetime\" => \"date-time\",\n            \"event_Title\" => \"string\",\n            \"event_description\" => \"string\"\n          )\n        )\n      ),\n      \"title\" => \"string\",\n      \"description\" => \"string\",\n      \"image_url\" => \"uri\",\n      \"image_height\" => \"SHORT\",\n      \"file_resource_id\" => \"string\",\n      \"resource_cashed_at\" => \"date-time\"\n    )\n  ),\n  \"intent\" => \"string\",\n  \"card_width\" => \"SMALL\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/save/carousel/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/save/file/": {
      "post": {
        "operationId": "rcs_api_v1_save_file_create",
        "description": "Save Your File Message Template that you want to send with unique intent.<br>There Are 6 Different types of suggestions<ul><li>text_suggestion</li><li>url_suggestion</li><li>dial_suggestion</li><li>view_location_suggestion</li><li>share_location_suggestion</li><li>calender_event_suggestion</li></ul>",
        "summary": "Save RCS File Message Template",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileMessage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/FileMessage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileMessage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMessage"
                }
              }
            },
            "description": "Created. New resource in response"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/save/file/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  },\n  \"intent\": \"string\",\n  \"file_url\": \"uri\",\n  \"thumbnail_url\": \"uri\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/save/file/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  },\n  \"intent\": \"string\",\n  \"file_url\": \"uri\",\n  \"thumbnail_url\": \"uri\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"suggestions\\\": \"{\"\"\n,\"    \\\"text_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"url_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"url\\\": \\\"uri\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"dial_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"phone_number\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"view_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"location\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"share_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"calender_event_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"event_start_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_end_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_Title\\\": \\\"string\\\",\"\n,\"        \\\"event_description\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ]\"\n,\"  \"}\",\"\n,\"  \\\"intent\\\": \\\"string\\\",\"\n,\"  \\\"file_url\\\": \\\"uri\\\",\"\n,\"  \\\"thumbnail_url\\\": \\\"uri\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/save/file/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/file/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    },\n    \"intent\": \"string\",\n    \"file_url\": \"uri\",\n    \"thumbnail_url\": \"uri\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/file/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    },\n    \"intent\": \"string\",\n    \"file_url\": \"uri\",\n    \"thumbnail_url\": \"uri\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"suggestions\" => array(\n    \"text_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"url_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"url\" => \"uri\"\n      )\n    ),\n    \"dial_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"phone_number\" => \"string\"\n      )\n    ),\n    \"view_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"location\" => \"string\"\n      )\n    ),\n    \"share_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"calender_event_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"event_start_datetime\" => \"date-time\",\n        \"event_end_datetime\" => \"date-time\",\n        \"event_Title\" => \"string\",\n        \"event_description\" => \"string\"\n      )\n    )\n  ),\n  \"intent\" => \"string\",\n  \"file_url\" => \"uri\",\n  \"thumbnail_url\" => \"uri\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/save/file/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/save/rich_card/": {
      "post": {
        "operationId": "rcs_api_v1_save_rich_card_create",
        "description": "Save Your Rich Card Template that you want to send with unique intent.<br>There Are 6 Different types of suggestions<ul><li>text_suggestion</li><li>url_suggestion</li><li>dial_suggestion</li><li>view_location_suggestion</li><li>share_location_suggestion</li><li>calender_event_suggestion</li></ul>",
        "summary": "Save RCS Rich Card Template",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RichCard"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RichCard"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RichCard"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RichCard"
                }
              }
            },
            "description": "Created. New resource in response"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/save/rich_card/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  },\n  \"intent\": \"string\",\n  \"card_orientation\": \"HORIZONTAL\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"image_url\": \"uri\",\n  \"thumbnail_url\": \"uri\",\n  \"thumbnail_image_alignment\": \"LEFT\",\n  \"media_height\": \"SHORT\",\n  \"file_resource_id\": \"string\",\n  \"resource_cashed_at\": \"date-time\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/save/rich_card/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  },\n  \"intent\": \"string\",\n  \"card_orientation\": \"HORIZONTAL\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"image_url\": \"uri\",\n  \"thumbnail_url\": \"uri\",\n  \"thumbnail_image_alignment\": \"LEFT\",\n  \"media_height\": \"SHORT\",\n  \"file_resource_id\": \"string\",\n  \"resource_cashed_at\": \"date-time\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"suggestions\\\": \"{\"\"\n,\"    \\\"text_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"url_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"url\\\": \\\"uri\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"dial_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"phone_number\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"view_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"location\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"share_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"calender_event_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"event_start_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_end_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_Title\\\": \\\"string\\\",\"\n,\"        \\\"event_description\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ]\"\n,\"  \"}\",\"\n,\"  \\\"intent\\\": \\\"string\\\",\"\n,\"  \\\"card_orientation\\\": \\\"HORIZONTAL\\\",\"\n,\"  \\\"title\\\": \\\"string\\\",\"\n,\"  \\\"description\\\": \\\"string\\\",\"\n,\"  \\\"image_url\\\": \\\"uri\\\",\"\n,\"  \\\"thumbnail_url\\\": \\\"uri\\\",\"\n,\"  \\\"thumbnail_image_alignment\\\": \\\"LEFT\\\",\"\n,\"  \\\"media_height\\\": \\\"SHORT\\\",\"\n,\"  \\\"file_resource_id\\\": \\\"string\\\",\"\n,\"  \\\"resource_cashed_at\\\": \\\"date-time\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/save/rich_card/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/rich_card/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    },\n    \"intent\": \"string\",\n    \"card_orientation\": \"HORIZONTAL\",\n    \"title\": \"string\",\n    \"description\": \"string\",\n    \"image_url\": \"uri\",\n    \"thumbnail_url\": \"uri\",\n    \"thumbnail_image_alignment\": \"LEFT\",\n    \"media_height\": \"SHORT\",\n    \"file_resource_id\": \"string\",\n    \"resource_cashed_at\": \"date-time\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/rich_card/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    },\n    \"intent\": \"string\",\n    \"card_orientation\": \"HORIZONTAL\",\n    \"title\": \"string\",\n    \"description\": \"string\",\n    \"image_url\": \"uri\",\n    \"thumbnail_url\": \"uri\",\n    \"thumbnail_image_alignment\": \"LEFT\",\n    \"media_height\": \"SHORT\",\n    \"file_resource_id\": \"string\",\n    \"resource_cashed_at\": \"date-time\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"suggestions\" => array(\n    \"text_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"url_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"url\" => \"uri\"\n      )\n    ),\n    \"dial_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"phone_number\" => \"string\"\n      )\n    ),\n    \"view_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"location\" => \"string\"\n      )\n    ),\n    \"share_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"calender_event_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"event_start_datetime\" => \"date-time\",\n        \"event_end_datetime\" => \"date-time\",\n        \"event_Title\" => \"string\",\n        \"event_description\" => \"string\"\n      )\n    )\n  ),\n  \"intent\" => \"string\",\n  \"card_orientation\" => \"HORIZONTAL\",\n  \"title\" => \"string\",\n  \"description\" => \"string\",\n  \"image_url\" => \"uri\",\n  \"thumbnail_url\" => \"uri\",\n  \"thumbnail_image_alignment\" => \"LEFT\",\n  \"media_height\" => \"SHORT\",\n  \"file_resource_id\" => \"string\",\n  \"resource_cashed_at\" => \"date-time\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/save/rich_card/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/save/simple_message/": {
      "post": {
        "operationId": "rcs_api_v1_save_simple_message_create",
        "description": "Save Your Simple Message Template that you want to send with unique intent.<br>There Are 6 Different types of suggestions<ul><li>text_suggestion</li><li>url_suggestion</li><li>dial_suggestion</li><li>view_location_suggestion</li><li>share_location_suggestion</li><li>calender_event_suggestion</li></ul>",
        "summary": "Save RCS Simple Message Template",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleMessage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SimpleMessage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SimpleMessage"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleMessage"
                }
              }
            },
            "description": "Created. New resource in response"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/save/simple_message/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"intent\": \"string\",\n  \"text\": \"string\",\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/save/simple_message/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"intent\": \"string\",\n  \"text\": \"string\",\n  \"suggestions\": {\n    \"text_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"url_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"url\": \"uri\"\n      }\n    ],\n    \"dial_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"phone_number\": \"string\"\n      }\n    ],\n    \"view_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"location\": \"string\"\n      }\n    ],\n    \"share_location_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\"\n      }\n    ],\n    \"calender_event_suggestion\": [\n      {\n        \"display_text\": \"string\",\n        \"postback_reply\": \"string\",\n        \"event_start_datetime\": \"date-time\",\n        \"event_end_datetime\": \"date-time\",\n        \"event_Title\": \"string\",\n        \"event_description\": \"string\"\n      }\n    ]\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"intent\\\": \\\"string\\\",\"\n,\"  \\\"text\\\": \\\"string\\\",\"\n,\"  \\\"suggestions\\\": \"{\"\"\n,\"    \\\"text_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"url_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"url\\\": \\\"uri\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"dial_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"phone_number\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"view_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"location\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"share_location_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ],\"\n,\"    \\\"calender_event_suggestion\\\": [\"\n,\"      \"{\"\"\n,\"        \\\"display_text\\\": \\\"string\\\",\"\n,\"        \\\"postback_reply\\\": \\\"string\\\",\"\n,\"        \\\"event_start_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_end_datetime\\\": \\\"date-time\\\",\"\n,\"        \\\"event_Title\\\": \\\"string\\\",\"\n,\"        \\\"event_description\\\": \\\"string\\\"\"\n,\"      \"}\"\"\n,\"    ]\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/save/simple_message/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/simple_message/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"intent\": \"string\",\n    \"text\": \"string\",\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/save/simple_message/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"intent\": \"string\",\n    \"text\": \"string\",\n    \"suggestions\": {\n      \"text_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"url_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"url\": \"uri\"\n        }\n      ],\n      \"dial_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"phone_number\": \"string\"\n        }\n      ],\n      \"view_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"location\": \"string\"\n        }\n      ],\n      \"share_location_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\"\n        }\n      ],\n      \"calender_event_suggestion\": [\n        {\n          \"display_text\": \"string\",\n          \"postback_reply\": \"string\",\n          \"event_start_datetime\": \"date-time\",\n          \"event_end_datetime\": \"date-time\",\n          \"event_Title\": \"string\",\n          \"event_description\": \"string\"\n        }\n      ]\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"intent\" => \"string\",\n  \"text\" => \"string\",\n  \"suggestions\" => array(\n    \"text_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"url_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"url\" => \"uri\"\n      )\n    ),\n    \"dial_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"phone_number\" => \"string\"\n      )\n    ),\n    \"view_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"location\" => \"string\"\n      )\n    ),\n    \"share_location_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\"\n      )\n    ),\n    \"calender_event_suggestion\" => array(\n      array(\n        \"display_text\" => \"string\",\n        \"postback_reply\" => \"string\",\n        \"event_start_datetime\" => \"date-time\",\n        \"event_end_datetime\" => \"date-time\",\n        \"event_Title\" => \"string\",\n        \"event_description\" => \"string\"\n      )\n    )\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/save/simple_message/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/send-bulk/{message_type}/": {
      "post": {
        "operationId": "rcs_api_v1_send_bulk_create",
        "summary": "Send Bulk RCS Message",
        "description": "Send Bulk Message that is saved with unique intent name and message type (simple_message/file/rich_card/carousel)",
        "parameters": [
          {
            "in": "path",
            "name": "message_type",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_bulk_message"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_bulk_message"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_bulk_message"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "We have initialized sending RCS messages."
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          },
          "409": {
            "description": "{campaign_name} Campaign with campaign_id {campaign_id} is in Active state. You can run only one campaign at a time"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/send-bulk/{message_type}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_numbers\": [\n    \"+919999999999, +919999999998\"\n  ],\n  \"campaign_name\": \"string\",\n  \"intent\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/send-bulk/{message_type}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_numbers\": [\n    \"+919999999999, +919999999998\"\n  ],\n  \"campaign_name\": \"string\",\n  \"intent\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_numbers\\\": [\"\n,\"    \\\"+919999999999, +919999999998\\\"\"\n,\"  ],\"\n,\"  \\\"campaign_name\\\": \\\"string\\\",\"\n,\"  \\\"intent\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/send-bulk/{message_type}/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-bulk/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_numbers\": [\n      \"+919999999999, +919999999998\"\n    ],\n    \"campaign_name\": \"string\",\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-bulk/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_numbers\": [\n      \"+919999999999, +919999999998\"\n    ],\n    \"campaign_name\": \"string\",\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_numbers\" => array(\n    \"+919999999999, +919999999998\"\n  ),\n  \"campaign_name\" => \"string\",\n  \"intent\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/send-bulk/{message_type}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/send-direct/": {
      "post": {
        "operationId": "rcs_api_v1_send_direct_create",
        "summary": "Send Custom RCS Message",
        "description": "This api is to send direct messages to phone number for chatting",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_direct"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_direct"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_direct"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/success"
                }
              }
            },
            "description": "Send Successfully"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/send-direct/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"message\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/send-direct/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"message\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"message\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/send-direct/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-direct/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"message\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-direct/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"message\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/send-direct/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/send-event/": {
      "post": {
        "operationId": "rcs_api_v1_send_event_create",
        "summary": "Send RCS Events",
        "description": "This api is to send READ and IS_TYPING events to user",
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_event"
              },
              "examples": {
                "READEvent": {
                  "value": {
                    "phone_number": "+919999999999",
                    "message_id": "unique message_id",
                    "event": "read"
                  },
                  "summary": "READ Event",
                  "description": "Send read event for a specific message to user"
                },
                "ISTYPINGEvent": {
                  "value": {
                    "phone_number": "+919999999999",
                    "event": "is_typing"
                  },
                  "summary": "IS TYPING event",
                  "description": "Send is typing event to user"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_event"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_event"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "READ/IS_TYPING event sent to phone_number"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/send-event/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"message_id\": \"string\",\n  \"event\": \"read/is_typing\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/send-event/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"message_id\": \"string\",\n  \"event\": \"read/is_typing\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"message_id\\\": \\\"string\\\",\"\n,\"  \\\"event\\\": \\\"read/is_typing\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/send-event/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-event/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"message_id\": \"string\",\n    \"event\": \"read/is_typing\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send-event/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"message_id\": \"string\",\n    \"event\": \"read/is_typing\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message_id\" => \"string\",\n  \"event\" => \"read/is_typing\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/send-event/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/send/{message_type}/": {
      "post": {
        "operationId": "rcs_api_v1_send_create",
        "summary": "Send RCS Message",
        "description": "Send Saved template saved by unique intent and message type (simple_message/file/rich_card/carousel)",
        "parameters": [
          {
            "in": "path",
            "name": "message_type",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["rcs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_message"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_message"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_message"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/success"
                }
              }
            },
            "description": "Send Successfully"
          },
          "400": {
            "description": "Bad request (something invalid)"
          },
          "401": {
            "description": "Authentication credentials were not provided."
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\nhttps://{host-domain}/rcs/api/v1/send/{message_type}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"intent\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/send/{message_type}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"intent\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"intent\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/send/{message_type}/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/send/{message_type}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"intent\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"intent\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/send/{message_type}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/campaign-summary/": {
      "get": {
        "operationId": "rcs_api_v1_view_campaign_summary_list",
        "summary": "List of Campaign Summary",
        "description": "This api returns list of All Campaign Summary",
        "parameters": [
          {
            "in": "query",
            "name": "campaign_end_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "campaign_end_time__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "campaign_end_time__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "campaign_start_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "campaign_start_time__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "campaign_start_time__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "intent",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "message_type",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": ["carousel", "file", "rich_card", "simple_message"]
            }
          },
          {
            "in": "query",
            "name": "name__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "integer",
              "enum": [-1, 0, 1, 2, 3, 4]
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCampaignSummaryList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/campaign-summary/?campaign_end_time=date-time&campaign_end_time__gte=date-time&campaign_end_time__lte=date-time&campaign_start_time=date-time&campaign_start_time__gte=date-time&campaign_start_time__lte=date-time&intent=string&limit=integer&message_type=string&name__contains=string&offset=integer&ordering=string&search=string&status=integer \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/campaign-summary/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"campaign_end_time\": \"date-time\",\n  \"campaign_end_time__gte\": \"date-time\",\n  \"campaign_end_time__lte\": \"date-time\",\n  \"campaign_start_time\": \"date-time\",\n  \"campaign_start_time__gte\": \"date-time\",\n  \"campaign_start_time__lte\": \"date-time\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_type\": \"string\",\n  \"name__contains\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\",\n  \"status\": \"integer\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"campaign_end_time\", \"date-time\");\n    params.put(\"campaign_end_time__gte\", \"date-time\");\n    params.put(\"campaign_end_time__lte\", \"date-time\");\n    params.put(\"campaign_start_time\", \"date-time\");\n    params.put(\"campaign_start_time__gte\", \"date-time\");\n    params.put(\"campaign_start_time__lte\", \"date-time\");\n    params.put(\"intent\", \"string\");\n    params.put(\"limit\", \"integer\");\n    params.put(\"message_type\", \"string\");\n    params.put(\"name__contains\", \"string\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"search\", \"string\");\n    params.put(\"status\", \"integer\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/campaign-summary/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"campaign_end_time\": \"date-time\",\n  \"campaign_end_time__gte\": \"date-time\",\n  \"campaign_end_time__lte\": \"date-time\",\n  \"campaign_start_time\": \"date-time\",\n  \"campaign_start_time__gte\": \"date-time\",\n  \"campaign_start_time__lte\": \"date-time\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_type\": \"string\",\n  \"name__contains\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\",\n  \"status\": \"integer\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/campaign-summary/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"campaign_end_time\": \"date-time\",\n  \"campaign_end_time__gte\": \"date-time\",\n  \"campaign_end_time__lte\": \"date-time\",\n  \"campaign_start_time\": \"date-time\",\n  \"campaign_start_time__gte\": \"date-time\",\n  \"campaign_start_time__lte\": \"date-time\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_type\": \"string\",\n  \"name__contains\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\",\n  \"status\": \"integer\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/campaign-summary/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"campaign_end_time\" => \"date-time\",\n  \"campaign_end_time__gte\" => \"date-time\",\n  \"campaign_end_time__lte\" => \"date-time\",\n  \"campaign_start_time\" => \"date-time\",\n  \"campaign_start_time__gte\" => \"date-time\",\n  \"campaign_start_time__lte\" => \"date-time\",\n  \"intent\" => \"string\",\n  \"limit\" => \"integer\",\n  \"message_type\" => \"string\",\n  \"name__contains\" => \"string\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"search\" => \"string\",\n  \"status\" => \"integer\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/campaign-summary/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/carousel/": {
      "get": {
        "operationId": "rcs_api_v1_view_carousel_list",
        "summary": "List of Carousel of Cards",
        "description": "This api returns list of Carousel Of Cards templates that is saved",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCarouselOfCardsList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/carousel/?limit=integer&offset=integer&ordering=string&search=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/carousel/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"integer\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"search\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/carousel/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/carousel/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/carousel/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"integer\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"search\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/carousel/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/conversation/": {
      "get": {
        "operationId": "rcs_api_v1_view_conversation_list",
        "summary": "List of User Conversations",
        "description": "This api returns list of conversation.<br>Provide phone_number to retrieve specific.<br>If phone_number is not provided then it return all latest conversation form unique numbers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phone_number",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender",
            "schema": {
              "type": "string",
              "enum": ["agent", "user"]
            }
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string",
              "enum": ["DELIVERED", "READ", "SENT", "UNDELIVERED"]
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedConversationList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/conversation/?limit=integer&offset=integer&ordering=string&phone_number=string&sender=string&state=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/conversation/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number\": \"string\",\n  \"sender\": \"string\",\n  \"state\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"integer\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"phone_number\", \"string\");\n    params.put(\"sender\", \"string\");\n    params.put(\"state\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/conversation/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number\": \"string\",\n  \"sender\": \"string\",\n  \"state\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/conversation/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number\": \"string\",\n  \"sender\": \"string\",\n  \"state\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/conversation/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"integer\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"phone_number\" => \"string\",\n  \"sender\" => \"string\",\n  \"state\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/conversation/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/file/": {
      "get": {
        "operationId": "rcs_api_v1_view_file_list",
        "summary": "List of File Message",
        "description": "This api returns list of File Message templates that is saved",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFileMessageList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/file/?limit=integer&offset=integer&ordering=string&search=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/file/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"integer\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"search\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/file/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/file/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/file/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"integer\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"search\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/file/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/received-messages/": {
      "get": {
        "operationId": "rcs_api_v1_view_received_messages_list",
        "summary": "List of Received Messages",
        "description": "This api returns list of Received Messages",
        "parameters": [
          {
            "in": "query",
            "name": "intent",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "message_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "received_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "received_time__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "received_time__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sender__contains",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReceivedMessageList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/received-messages/?intent=string&limit=integer&message_id=string&offset=integer&ordering=string&received_time=date-time&received_time__gte=date-time&received_time__lte=date-time&search=string&sender__contains=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/received-messages/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"received_time\": \"date-time\",\n  \"received_time__gte\": \"date-time\",\n  \"received_time__lte\": \"date-time\",\n  \"search\": \"string\",\n  \"sender__contains\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"intent\", \"string\");\n    params.put(\"limit\", \"integer\");\n    params.put(\"message_id\", \"string\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"received_time\", \"date-time\");\n    params.put(\"received_time__gte\", \"date-time\");\n    params.put(\"received_time__lte\", \"date-time\");\n    params.put(\"search\", \"string\");\n    params.put(\"sender__contains\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/received-messages/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"received_time\": \"date-time\",\n  \"received_time__gte\": \"date-time\",\n  \"received_time__lte\": \"date-time\",\n  \"search\": \"string\",\n  \"sender__contains\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/received-messages/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"received_time\": \"date-time\",\n  \"received_time__gte\": \"date-time\",\n  \"received_time__lte\": \"date-time\",\n  \"search\": \"string\",\n  \"sender__contains\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/received-messages/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"intent\" => \"string\",\n  \"limit\" => \"integer\",\n  \"message_id\" => \"string\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"received_time\" => \"date-time\",\n  \"received_time__gte\" => \"date-time\",\n  \"received_time__lte\" => \"date-time\",\n  \"search\" => \"string\",\n  \"sender__contains\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/received-messages/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/rich_card/": {
      "get": {
        "operationId": "rcs_api_v1_view_rich_card_list",
        "summary": "List of Rich Cards",
        "description": "This api returns list of Rich Card Message templates that is saved",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRichCardList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/rich_card/?limit=integer&offset=integer&ordering=string&search=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/rich_card/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"integer\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"search\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/rich_card/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/rich_card/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/rich_card/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"integer\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"search\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/rich_card/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/sent-messages/": {
      "get": {
        "operationId": "rcs_api_v1_view_sent_messages_list",
        "summary": "List of Sent Messages",
        "description": "This api returns list of Sent Messages",
        "parameters": [
          {
            "in": "query",
            "name": "campaign",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "intent",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "message_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "message_type",
            "schema": {
              "type": "string",
              "enum": ["carousel", "file", "rich_card", "simple_message"]
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phone_number__contains",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sent_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "sent_time__gte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "sent_time__lte",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string",
              "enum": ["DELIVERED", "READ", "SENT", "UNDELIVERED"]
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "integer",
              "enum": [-1, 0, 1, 2, 3]
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSentMessageList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/sent-messages/?campaign=integer&intent=string&limit=integer&message_id=string&message_type=string&offset=integer&ordering=string&phone_number__contains=string&search=string&sent_time=date-time&sent_time__gte=date-time&sent_time__lte=date-time&state=string&status=integer \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/sent-messages/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"campaign\": \"integer\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"message_type\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number__contains\": \"string\",\n  \"search\": \"string\",\n  \"sent_time\": \"date-time\",\n  \"sent_time__gte\": \"date-time\",\n  \"sent_time__lte\": \"date-time\",\n  \"state\": \"string\",\n  \"status\": \"integer\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"campaign\", \"integer\");\n    params.put(\"intent\", \"string\");\n    params.put(\"limit\", \"integer\");\n    params.put(\"message_id\", \"string\");\n    params.put(\"message_type\", \"string\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"phone_number__contains\", \"string\");\n    params.put(\"search\", \"string\");\n    params.put(\"sent_time\", \"date-time\");\n    params.put(\"sent_time__gte\", \"date-time\");\n    params.put(\"sent_time__lte\", \"date-time\");\n    params.put(\"state\", \"string\");\n    params.put(\"status\", \"integer\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/sent-messages/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"campaign\": \"integer\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"message_type\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number__contains\": \"string\",\n  \"search\": \"string\",\n  \"sent_time\": \"date-time\",\n  \"sent_time__gte\": \"date-time\",\n  \"sent_time__lte\": \"date-time\",\n  \"state\": \"string\",\n  \"status\": \"integer\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/sent-messages/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"campaign\": \"integer\",\n  \"intent\": \"string\",\n  \"limit\": \"integer\",\n  \"message_id\": \"string\",\n  \"message_type\": \"string\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"phone_number__contains\": \"string\",\n  \"search\": \"string\",\n  \"sent_time\": \"date-time\",\n  \"sent_time__gte\": \"date-time\",\n  \"sent_time__lte\": \"date-time\",\n  \"state\": \"string\",\n  \"status\": \"integer\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/sent-messages/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"campaign\" => \"integer\",\n  \"intent\" => \"string\",\n  \"limit\" => \"integer\",\n  \"message_id\" => \"string\",\n  \"message_type\" => \"string\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"phone_number__contains\" => \"string\",\n  \"search\" => \"string\",\n  \"sent_time\" => \"date-time\",\n  \"sent_time__gte\" => \"date-time\",\n  \"sent_time__lte\" => \"date-time\",\n  \"state\" => \"string\",\n  \"status\" => \"integer\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/sent-messages/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/rcs/api/v1/view/simple_message/": {
      "get": {
        "operationId": "rcs_api_v1_view_simple_message_list",
        "summary": "List of Simple Messages",
        "description": "This api returns list of Simple Message templates that is saved",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["rcs"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSimpleMessageList"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\nhttps://{host-domain}/rcs/api/v1/view/simple_message/?limit=integer&offset=integer&ordering=string&search=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"https://{host-domain}/rcs/api/v1/view/simple_message/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"limit\", \"integer\");\n    params.put(\"offset\", \"integer\");\n    params.put(\"ordering\", \"string\");\n    params.put(\"search\", \"string\");\n\n    var host = \"https://{host-domain}\";\n    var pathname = \"/rcs/api/v1/view/simple_message/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/simple_message/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"limit\": \"integer\",\n  \"offset\": \"integer\",\n  \"ordering\": \"string\",\n  \"search\": \"string\"\n}).toString();\nconst resp = await fetch(\n`https://{host-domain}/rcs/api/v1/view/simple_message/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"limit\" => \"integer\",\n  \"offset\" => \"integer\",\n  \"ordering\" => \"string\",\n  \"search\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"https://{host-domain}/rcs/api/v1/view/simple_message/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/auth/jwt/create/": {
      "post": {
        "operationId": "auth_jwt_create_create",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/auth/jwt/create/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/auth/jwt/create/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"username\": \"string\",\n  \"password\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"username\\\": \\\"string\\\",\"\n,\"  \\\"password\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/auth/jwt/create/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/create/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/create/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"username\" => \"string\",\n  \"password\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/auth/jwt/create/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/auth/jwt/refresh/": {
      "post": {
        "operationId": "auth_jwt_refresh_create",
        "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefresh"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefresh"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/auth/jwt/refresh/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"refresh\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/auth/jwt/refresh/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"refresh\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"refresh\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/auth/jwt/refresh/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/refresh/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"refresh\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/refresh/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"refresh\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"refresh\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/auth/jwt/refresh/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/auth/jwt/verify/": {
      "post": {
        "operationId": "auth_jwt_verify_create",
        "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenVerify"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/auth/jwt/verify/ \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"token\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/auth/jwt/verify/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\"\n}\n\npayload = {\n  \"token\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"token\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/auth/jwt/verify/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/verify/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"token\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/auth/jwt/verify/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    \"token\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"token\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/auth/jwt/verify/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/auth/token/": {
      "post": {
        "operationId": "v1_auth_token_create",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/auth/token/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/auth/token/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"username\": \"string\",\n  \"password\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"username\\\": \\\"string\\\",\"\n,\"  \\\"password\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/auth/token/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/auth/token/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/auth/token/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"username\": \"string\",\n    \"password\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"username\" => \"string\",\n  \"password\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/auth/token/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/customer/": {
      "get": {
        "operationId": "v1_customer_retrieve",
        "description": "Get customer otp setting configuration",
        "summary": "GET OTP CONFIGURATION",
        "tags": ["2FA"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\n{{API_URL}}/2FA/v1/customer/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/customer/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\n\nresponse = requests.get(url, headers=headers)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/customer/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/customer/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "post": {
        "operationId": "v1_customer_create",
        "description": "Save customer otp setting configuration",
        "summary": "SAVE OTP CONFIGURATION",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/customer/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"region\": \"string\",\n  \"otp_type\": \"numeric\",\n  \"otp_length\": {\n    \"object\": \"object_value\"\n  },\n  \"retry_time\": {\n    \"object\": \"object_value\"\n  },\n  \"expiry_time\": {\n    \"object\": \"object_value\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/customer/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"region\": \"string\",\n  \"otp_type\": \"numeric\",\n  \"otp_length\": {\n    \"object\": \"object_value\"\n  },\n  \"retry_time\": {\n    \"object\": \"object_value\"\n  },\n  \"expiry_time\": {\n    \"object\": \"object_value\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"region\\\": \\\"string\\\",\"\n,\"  \\\"otp_type\\\": \\\"numeric\\\",\"\n,\"  \\\"otp_length\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"retry_time\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"expiry_time\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/customer/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"region\": \"string\",\n    \"otp_type\": \"numeric\",\n    \"otp_length\": {\n      \"object\": \"object_value\"\n    },\n    \"retry_time\": {\n      \"object\": \"object_value\"\n    },\n    \"expiry_time\": {\n      \"object\": \"object_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"region\": \"string\",\n    \"otp_type\": \"numeric\",\n    \"otp_length\": {\n      \"object\": \"object_value\"\n    },\n    \"retry_time\": {\n      \"object\": \"object_value\"\n    },\n    \"expiry_time\": {\n      \"object\": \"object_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"region\" => \"string\",\n  \"otp_type\" => \"numeric\",\n  \"otp_length\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"retry_time\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"expiry_time\" => array(\n    \"object\" => \"object_value\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/customer/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "put": {
        "operationId": "v1_customer_update",
        "description": "Update customer otp setting configuration",
        "summary": "UPDATE OTP CONFIGURATION",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PUT \\\n{{API_URL}}/2FA/v1/customer/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"region\": \"string\",\n  \"otp_type\": \"numeric\",\n  \"otp_length\": {\n    \"object\": \"object_value\"\n  },\n  \"retry_time\": {\n    \"object\": \"object_value\"\n  },\n  \"expiry_time\": {\n    \"object\": \"object_value\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/customer/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"region\": \"string\",\n  \"otp_type\": \"numeric\",\n  \"otp_length\": {\n    \"object\": \"object_value\"\n  },\n  \"retry_time\": {\n    \"object\": \"object_value\"\n  },\n  \"expiry_time\": {\n    \"object\": \"object_value\"\n  }\n}\nresponse = requests.put(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"region\\\": \\\"string\\\",\"\n,\"  \\\"otp_type\\\": \\\"numeric\\\",\"\n,\"  \\\"otp_length\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"retry_time\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"expiry_time\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/customer/\";\n    var request = HttpRequest.newBuilder()\n      .PUT(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"region\": \"string\",\n    \"otp_type\": \"numeric\",\n    \"otp_length\": {\n      \"object\": \"object_value\"\n    },\n    \"retry_time\": {\n      \"object\": \"object_value\"\n    },\n    \"expiry_time\": {\n      \"object\": \"object_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/customer/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"region\": \"string\",\n    \"otp_type\": \"numeric\",\n    \"otp_length\": {\n      \"object\": \"object_value\"\n    },\n    \"retry_time\": {\n      \"object\": \"object_value\"\n    },\n    \"expiry_time\": {\n      \"object\": \"object_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"region\" => \"string\",\n  \"otp_type\" => \"numeric\",\n  \"otp_length\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"retry_time\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"expiry_time\" => array(\n    \"object\" => \"object_value\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/customer/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/my-channel/": {
      "get": {
        "operationId": "v1_my_channel_retrieve",
        "description": "This api is to get all channel configuration",
        "summary": "GET CHANNEL CONFIGURATION",
        "parameters": [
          {
            "in": "query",
            "name": "channel",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["2FA"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\n{{API_URL}}/2FA/v1/my-channel/?channel=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/my-channel/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"channel\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"channel\", \"string\");\n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/my-channel/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"channel\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"channel\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"channel\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/my-channel/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "post": {
        "operationId": "v1_my_channel_create",
        "description": "This api is to save all channel configuration via which otp will be send.",
        "summary": "SAVE CHANNEL CONFIGURATION",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              },
              "examples": {
                "SaveConfig": {
                  "value": [
                    {
                      "sms": {
                        "type": "otp",
                        "sender_id": "string",
                        "sms_type": "TEXT/FLASH/UNICODE",
                        "template": "Hi, #1# is your OTP to access panel. Thanks!",
                        "temp_id": "template_id",
                        "priority": 1,
                        "second_attempt": false
                      }
                    },
                    {
                      "whatsapp": {
                        "type": "otp",
                        "template_name": "otp_template",
                        "params": ["login", "#1#"],
                        "priority": 2
                      }
                    },
                    {
                      "email": {
                        "type": "otp",
                        "from_email": "no-reply@example.com",
                        "from_name": "No Reply",
                        "email_subject": "OTP for validation",
                        "template": "Hi, <br> Your Login OTP is <b>#1#</b>",
                        "priority": 1
                      }
                    },
                    {
                      "rcs": {
                        "type": "otp",
                        "template_name": "template_name",
                        "template_type": "simple_message/rich_card/carousel",
                        "params": {
                          "otp": "#1#"
                        },
                        "priority": 1
                      }
                    },
                    {
                      "obd": {
                        "type": "otp",
                        "callerId": "123456",
                        "access_key": "obd_access_key",
                        "template": "Your O T P is #1#",
                        "priority": 3
                      }
                    }
                  ],
                  "summary": "Save config"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/my-channel/?channel=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"type\": \"otp\",\n  \"sender_id\": \"string\",\n  \"sms_type\": \"TEXT\",\n  \"template\": \"string\",\n  \"temp_id\": \"string\",\n  \"priority\": {\n    \"object\": \"object_value\"\n  },\n  \"second_attempt\": true\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/my-channel/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"type\": \"otp\",\n  \"sender_id\": \"string\",\n  \"sms_type\": \"TEXT\",\n  \"template\": \"string\",\n  \"temp_id\": \"string\",\n  \"priority\": {\n    \"object\": \"object_value\"\n  },\n  \"second_attempt\": True\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"otp\\\",\"\n,\"  \\\"sender_id\\\": \\\"string\\\",\"\n,\"  \\\"sms_type\\\": \\\"TEXT\\\",\"\n,\"  \\\"template\\\": \\\"string\\\",\"\n,\"  \\\"temp_id\\\": \\\"string\\\",\"\n,\"  \\\"priority\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"second_attempt\\\": true\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/my-channel/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"otp\",\n  \"sender_id\" => \"string\",\n  \"sms_type\" => \"TEXT\",\n  \"template\" => \"string\",\n  \"temp_id\" => \"string\",\n  \"priority\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"second_attempt\" => true\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/my-channel/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "put": {
        "operationId": "v1_my_channel_update",
        "description": "This api is to save all channel configuration via which otp will be send.",
        "summary": "SAVE CHANNEL CONFIGURATION",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              },
              "examples": {
                "SaveConfig": {
                  "value": [
                    {
                      "sms": {
                        "type": "otp",
                        "sender_id": "string",
                        "sms_type": "TEXT/FLASH/UNICODE",
                        "template": "Hi, #1# is your OTP to access panel. Thanks!",
                        "temp_id": "template_id",
                        "priority": 1,
                        "second_attempt": false
                      }
                    },
                    {
                      "whatsapp": {
                        "type": "otp",
                        "template_name": "otp_template",
                        "params": ["login", "#1#"],
                        "priority": 2
                      }
                    },
                    {
                      "email": {
                        "type": "otp",
                        "from_email": "no-reply@example.com",
                        "from_name": "No Reply",
                        "email_subject": "OTP for validation",
                        "template": "Hi, <br> Your Login OTP is <b>#1#</b>",
                        "priority": 1
                      }
                    },
                    {
                      "rcs": {
                        "type": "otp",
                        "template_name": "template_name",
                        "template_type": "simple_message/rich_card/carousel",
                        "params": {
                          "otp": "#1#"
                        },
                        "priority": 1
                      }
                    },
                    {
                      "obd": {
                        "type": "otp",
                        "callerId": "123456",
                        "access_key": "obd_access_key",
                        "template": "Your O T P is #1#",
                        "priority": 3
                      }
                    }
                  ],
                  "summary": "Save config"
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SMS"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PUT \\\n{{API_URL}}/2FA/v1/my-channel/?channel=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"type\": \"otp\",\n  \"sender_id\": \"string\",\n  \"sms_type\": \"TEXT\",\n  \"template\": \"string\",\n  \"temp_id\": \"string\",\n  \"priority\": {\n    \"object\": \"object_value\"\n  },\n  \"second_attempt\": true\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/my-channel/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"type\": \"otp\",\n  \"sender_id\": \"string\",\n  \"sms_type\": \"TEXT\",\n  \"template\": \"string\",\n  \"temp_id\": \"string\",\n  \"priority\": {\n    \"object\": \"object_value\"\n  },\n  \"second_attempt\": True\n}\nresponse = requests.put(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"type\\\": \\\"otp\\\",\"\n,\"  \\\"sender_id\\\": \\\"string\\\",\"\n,\"  \\\"sms_type\\\": \\\"TEXT\\\",\"\n,\"  \\\"template\\\": \\\"string\\\",\"\n,\"  \\\"temp_id\\\": \\\"string\\\",\"\n,\"  \\\"priority\\\": \"{\"\"\n,\"    \\\"object\\\": \\\"object_value\\\"\"\n,\"  \"}\",\"\n,\"  \\\"second_attempt\\\": true\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/my-channel/\";\n    var request = HttpRequest.newBuilder()\n      .PUT(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/my-channel/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"type\" => \"otp\",\n  \"sender_id\" => \"string\",\n  \"sms_type\" => \"TEXT\",\n  \"template\" => \"string\",\n  \"temp_id\" => \"string\",\n  \"priority\" => array(\n    \"object\" => \"object_value\"\n  ),\n  \"second_attempt\" => true\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/my-channel/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/send-notification/": {
      "post": {
        "operationId": "v1_send_notification_create",
        "description": "This api send notification to the given mobile number and/or email-Id via all integrated channels",
        "summary": "SEND NOTIFICATION",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_notification"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_notification"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_notification"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/send-notification/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\",\n  \"notify_message\": \"string\",\n  \"template_name\": \"string\",\n  \"variables\": {\n    \"var\": \"var_value\"\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/send-notification/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\",\n  \"notify_message\": \"string\",\n  \"template_name\": \"string\",\n  \"variables\": {\n    \"var\": \"var_value\"\n  }\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"email\\\": \\\"example@gmail.com\\\",\"\n,\"  \\\"notify_message\\\": \\\"string\\\",\"\n,\"  \\\"template_name\\\": \\\"string\\\",\"\n,\"  \\\"variables\\\": \"{\"\"\n,\"    \\\"var\\\": \\\"var_value\\\"\"\n,\"  \"}\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/send-notification/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-notification/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\",\n    \"notify_message\": \"string\",\n    \"template_name\": \"string\",\n    \"variables\": {\n      \"var\": \"var_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-notification/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\",\n    \"notify_message\": \"string\",\n    \"template_name\": \"string\",\n    \"variables\": {\n      \"var\": \"var_value\"\n    }\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"email\" => \"example@gmail.com\",\n  \"notify_message\" => \"string\",\n  \"template_name\" => \"string\",\n  \"variables\" => array(\n    \"var\" => \"var_value\"\n  )\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/send-notification/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/send-otp/": {
      "post": {
        "operationId": "v1_send_otp_create",
        "description": "This api send otp to the given mobile number and/or email-Id",
        "summary": "SEND OTP",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/send-otp/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/send-otp/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"email\\\": \\\"example@gmail.com\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/send-otp/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-otp/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-otp/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"email\" => \"example@gmail.com\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/send-otp/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/send-otp/{otp_channel}/": {
      "post": {
        "operationId": "v1_send_otp_create_2",
        "description": "This api send otp to the given mobile number and/or email-Id via given channel sms/email/rcs/whatsapp/obd",
        "summary": "SEND CHANNELED OTP",
        "parameters": [
          {
            "in": "path",
            "name": "otp_channel",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/send_muchOTP"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/send-otp/{otp_channel}/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/send-otp/{otp_channel}/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"email\\\": \\\"example@gmail.com\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/send-otp/{otp_channel}/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-otp/{otp_channel}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/send-otp/{otp_channel}/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"email\" => \"example@gmail.com\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/send-otp/{otp_channel}/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/template/": {
      "get": {
        "operationId": "v1_template_retrieve",
        "description": "This api is to get Notification Templates",
        "summary": "GET TEMPLATES",
        "parameters": [
          {
            "in": "query",
            "name": "template_name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["2FA"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X GET \\\n{{API_URL}}/2FA/v1/template/?template_name=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/template/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"template_name\": \"string\"\n}\n\nresponse = requests.get(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"template_name\", \"string\");\n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/template/\";\n    var request = HttpRequest.newBuilder()\n      .GET()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"template_name\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"template_name\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/?${query}`,\n{\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"template_name\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/template/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "post": {
        "operationId": "v1_template_create",
        "description": "This api is to add or update Notification Templates",
        "summary": "SAVE TEMPLATES",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/template/?template_name=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"sms_agent\": {\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  },\n  \"whatsapp_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"email_agent\": {\n    \"type\": \"otp\",\n    \"from_email\": \"email\",\n    \"from_name\": \"string\",\n    \"email_subject\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"rcs_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"template_type\": \"simple_message\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"obd_agent\": {\n    \"type\": \"otp\",\n    \"callerId\": \"string\",\n    \"access_key\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"template_name\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/template/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"sms_agent\": {\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": True\n  },\n  \"whatsapp_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"email_agent\": {\n    \"type\": \"otp\",\n    \"from_email\": \"email\",\n    \"from_name\": \"string\",\n    \"email_subject\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"rcs_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"template_type\": \"simple_message\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"obd_agent\": {\n    \"type\": \"otp\",\n    \"callerId\": \"string\",\n    \"access_key\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"template_name\": \"string\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sms_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"sender_id\\\": \\\"string\\\",\"\n,\"    \\\"sms_type\\\": \\\"TEXT\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"temp_id\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"second_attempt\\\": true\"\n,\"  \"}\",\"\n,\"  \\\"whatsapp_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"template_name\\\": \\\"string\\\",\"\n,\"    \\\"params\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"email_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"from_email\\\": \\\"email\\\",\"\n,\"    \\\"from_name\\\": \\\"string\\\",\"\n,\"    \\\"email_subject\\\": \\\"string\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"rcs_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"template_name\\\": \\\"string\\\",\"\n,\"    \\\"template_type\\\": \\\"simple_message\\\",\"\n,\"    \\\"params\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"obd_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"callerId\\\": \\\"string\\\",\"\n,\"    \\\"access_key\\\": \\\"string\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"template_name\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/template/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"sms_agent\": {\n      \"type\": \"otp\",\n      \"sender_id\": \"string\",\n      \"sms_type\": \"TEXT\",\n      \"template\": \"string\",\n      \"temp_id\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      },\n      \"second_attempt\": true\n    },\n    \"whatsapp_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"email_agent\": {\n      \"type\": \"otp\",\n      \"from_email\": \"email\",\n      \"from_name\": \"string\",\n      \"email_subject\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"rcs_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"template_type\": \"simple_message\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"obd_agent\": {\n      \"type\": \"otp\",\n      \"callerId\": \"string\",\n      \"access_key\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"template_name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"sms_agent\": {\n      \"type\": \"otp\",\n      \"sender_id\": \"string\",\n      \"sms_type\": \"TEXT\",\n      \"template\": \"string\",\n      \"temp_id\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      },\n      \"second_attempt\": true\n    },\n    \"whatsapp_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"email_agent\": {\n      \"type\": \"otp\",\n      \"from_email\": \"email\",\n      \"from_name\": \"string\",\n      \"email_subject\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"rcs_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"template_type\": \"simple_message\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"obd_agent\": {\n      \"type\": \"otp\",\n      \"callerId\": \"string\",\n      \"access_key\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"template_name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sms_agent\" => array(\n    \"type\" => \"otp\",\n    \"sender_id\" => \"string\",\n    \"sms_type\" => \"TEXT\",\n    \"template\" => \"string\",\n    \"temp_id\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"second_attempt\" => true\n  ),\n  \"whatsapp_agent\" => array(\n    \"type\" => \"otp\",\n    \"template_name\" => \"string\",\n    \"params\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"email_agent\" => array(\n    \"type\" => \"otp\",\n    \"from_email\" => \"email\",\n    \"from_name\" => \"string\",\n    \"email_subject\" => \"string\",\n    \"template\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"rcs_agent\" => array(\n    \"type\" => \"otp\",\n    \"template_name\" => \"string\",\n    \"template_type\" => \"simple_message\",\n    \"params\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"obd_agent\" => array(\n    \"type\" => \"otp\",\n    \"callerId\" => \"string\",\n    \"access_key\" => \"string\",\n    \"template\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"template_name\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/template/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "put": {
        "operationId": "v1_template_update",
        "description": "This api is to add or update Notification Templates",
        "summary": "SAVE TEMPLATES",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X PUT \\\n{{API_URL}}/2FA/v1/template/?template_name=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"sms_agent\": {\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": true\n  },\n  \"whatsapp_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"email_agent\": {\n    \"type\": \"otp\",\n    \"from_email\": \"email\",\n    \"from_name\": \"string\",\n    \"email_subject\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"rcs_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"template_type\": \"simple_message\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"obd_agent\": {\n    \"type\": \"otp\",\n    \"callerId\": \"string\",\n    \"access_key\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"template_name\": \"string\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/template/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"sms_agent\": {\n    \"type\": \"otp\",\n    \"sender_id\": \"string\",\n    \"sms_type\": \"TEXT\",\n    \"template\": \"string\",\n    \"temp_id\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    },\n    \"second_attempt\": True\n  },\n  \"whatsapp_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"email_agent\": {\n    \"type\": \"otp\",\n    \"from_email\": \"email\",\n    \"from_name\": \"string\",\n    \"email_subject\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"rcs_agent\": {\n    \"type\": \"otp\",\n    \"template_name\": \"string\",\n    \"template_type\": \"simple_message\",\n    \"params\": {\n      \"object\": \"object_value\"\n    },\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"obd_agent\": {\n    \"type\": \"otp\",\n    \"callerId\": \"string\",\n    \"access_key\": \"string\",\n    \"template\": \"string\",\n    \"priority\": {\n      \"object\": \"object_value\"\n    }\n  },\n  \"template_name\": \"string\"\n}\nresponse = requests.put(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"sms_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"sender_id\\\": \\\"string\\\",\"\n,\"    \\\"sms_type\\\": \\\"TEXT\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"temp_id\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"second_attempt\\\": true\"\n,\"  \"}\",\"\n,\"  \\\"whatsapp_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"template_name\\\": \\\"string\\\",\"\n,\"    \\\"params\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"email_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"from_email\\\": \\\"email\\\",\"\n,\"    \\\"from_name\\\": \\\"string\\\",\"\n,\"    \\\"email_subject\\\": \\\"string\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"rcs_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"template_name\\\": \\\"string\\\",\"\n,\"    \\\"template_type\\\": \\\"simple_message\\\",\"\n,\"    \\\"params\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"obd_agent\\\": \"{\"\"\n,\"    \\\"type\\\": \\\"otp\\\",\"\n,\"    \\\"callerId\\\": \\\"string\\\",\"\n,\"    \\\"access_key\\\": \\\"string\\\",\"\n,\"    \\\"template\\\": \\\"string\\\",\"\n,\"    \\\"priority\\\": \"{\"\"\n,\"      \\\"object\\\": \\\"object_value\\\"\"\n,\"    \"}\"\"\n,\"  \"}\",\"\n,\"  \\\"template_name\\\": \\\"string\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/template/\";\n    var request = HttpRequest.newBuilder()\n      .PUT(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"sms_agent\": {\n      \"type\": \"otp\",\n      \"sender_id\": \"string\",\n      \"sms_type\": \"TEXT\",\n      \"template\": \"string\",\n      \"temp_id\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      },\n      \"second_attempt\": true\n    },\n    \"whatsapp_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"email_agent\": {\n      \"type\": \"otp\",\n      \"from_email\": \"email\",\n      \"from_name\": \"string\",\n      \"email_subject\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"rcs_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"template_type\": \"simple_message\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"obd_agent\": {\n      \"type\": \"otp\",\n      \"callerId\": \"string\",\n      \"access_key\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"template_name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/`,\n{\n  \"method\": \"PUT\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"sms_agent\": {\n      \"type\": \"otp\",\n      \"sender_id\": \"string\",\n      \"sms_type\": \"TEXT\",\n      \"template\": \"string\",\n      \"temp_id\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      },\n      \"second_attempt\": true\n    },\n    \"whatsapp_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"email_agent\": {\n      \"type\": \"otp\",\n      \"from_email\": \"email\",\n      \"from_name\": \"string\",\n      \"email_subject\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"rcs_agent\": {\n      \"type\": \"otp\",\n      \"template_name\": \"string\",\n      \"template_type\": \"simple_message\",\n      \"params\": {\n        \"object\": \"object_value\"\n      },\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"obd_agent\": {\n      \"type\": \"otp\",\n      \"callerId\": \"string\",\n      \"access_key\": \"string\",\n      \"template\": \"string\",\n      \"priority\": {\n        \"object\": \"object_value\"\n      }\n    },\n    \"template_name\": \"string\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"sms_agent\" => array(\n    \"type\" => \"otp\",\n    \"sender_id\" => \"string\",\n    \"sms_type\" => \"TEXT\",\n    \"template\" => \"string\",\n    \"temp_id\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"second_attempt\" => true\n  ),\n  \"whatsapp_agent\" => array(\n    \"type\" => \"otp\",\n    \"template_name\" => \"string\",\n    \"params\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"email_agent\" => array(\n    \"type\" => \"otp\",\n    \"from_email\" => \"email\",\n    \"from_name\" => \"string\",\n    \"email_subject\" => \"string\",\n    \"template\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"rcs_agent\" => array(\n    \"type\" => \"otp\",\n    \"template_name\" => \"string\",\n    \"template_type\" => \"simple_message\",\n    \"params\" => array(\n      \"object\" => \"object_value\"\n    ),\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"obd_agent\" => array(\n    \"type\" => \"otp\",\n    \"callerId\" => \"string\",\n    \"access_key\" => \"string\",\n    \"template\" => \"string\",\n    \"priority\" => array(\n      \"object\" => \"object_value\"\n    )\n  ),\n  \"template_name\" => \"string\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/template/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      },
      "delete": {
        "operationId": "v1_template_destroy",
        "description": "This api delete notification template",
        "summary": "DELETE NOTIFICATION TEMPLATE",
        "parameters": [
          {
            "in": "query",
            "name": "template_name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["2FA"],
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X DELETE \\\n{{API_URL}}/2FA/v1/template/?template_name=string?template_name=string \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/template/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\nquery = {\n  \"template_name\": \"string\"\n}\n\nresponse = requests.delete(url, headers=headers, params=query)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    \n    HashMap<String, String> params = new HashMap<>();\n    params.put(\"template_name\", \"string\");\n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/template/\";\n    var request = HttpRequest.newBuilder()\n      .DELETE()\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\nconst query = new URLSearchParams({\n  \"template_name\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/?${query}`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "const query = new URLSearchParams({\n  \"template_name\": \"string\"\n}).toString();\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/template/?${query}`,\n{\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n$query = array(\n  \"template_name\" => \"string\"\n);\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  \n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/template/?\". http_build_query($query),\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    },
    "/2FA/v1/verify-otp/": {
      "post": {
        "operationId": "v1_verify_otp_create",
        "description": "This api verify otp that is been sent to the given mobile number and/or email-Id",
        "summary": "VERIFY OTP",
        "tags": ["2FA"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verify_muchOTP"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/verify_muchOTP"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/verify_muchOTP"
              }
            }
          }
        },
        "security": [
          {
            "tokenAuth": []
          },
          {
            "jwtAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        },
        "x-codeSamples": [
          {
            "lang": "cURL",
            "label": "cURL",
            "source": "curl -i -X POST \\\n{{API_URL}}/2FA/v1/verify-otp/ \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: YOUR_API_KEY_HERE' \\\n-d '{\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\",\n  \"otp\": \"123456\"\n}'\n"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "import requests\n\nurl = \"{{API_URL}}/2FA/v1/verify-otp/\"\n\nheaders = {\n  \"Content-Type\": \"application/json\",\n  \"Authorization\": \"YOUR_API_KEY_HERE\"\n}\n\npayload = {\n  \"phone_number\": \"+919999999999\",\n  \"email\": \"example@gmail.com\",\n  \"otp\": \"123456\"\n}\nresponse = requests.post(url, headers=headers, json=payload)\n\ndata = response.json()\nprint(data)\n"
          },
          {
            "lang": "java",
            "label": "Java",
            "source": "import java.net.*;\nimport java.net.http.*;\nimport java.util.*;\n\npublic class App {\n  public static void main(String[] args) throws Exception {\n    var httpClient = HttpClient.newBuilder().build();\n    var payload = String.join(\"\\n\"\n\"{\"\n,\"  \\\"phone_number\\\": \\\"+919999999999\\\",\"\n,\"  \\\"email\\\": \\\"example@gmail.com\\\",\"\n,\"  \\\"otp\\\": \\\"123456\\\"\"\n,\"}\"\n    );\n    \n\n    var host = \"{{API_URL}}\";\n    var pathname = \"/2FA/v1/verify-otp/\";\n    var request = HttpRequest.newBuilder()\n      .POST(HttpRequest.BodyPublishers.ofString(payload))\n      .uri(URI.create(host + pathname ))\n      .header(\"Content-Type\", \"value\").header(\"Authorization\", \"value\")\n      .build();\n\n    var response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\n\n    System.out.println(response.body());\n  }\n}\n"
          },
          {
            "lang": "node",
            "label": "Node.js",
            "source": "import fetch from 'node-fetch';\n\nasync function run() {\n\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/verify-otp/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\",\n    \"otp\": \"123456\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n}\n\nrun();\n"
          },
          {
            "lang": "js",
            "label": "JavaScript",
            "source": "\nconst resp = await fetch(\n`{{API_URL}}/2FA/v1/verify-otp/`,\n{\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"YOUR_API_KEY_HERE\"\n  },\n  body: JSON.stringify({\n    \"phone_number\": \"+919999999999\",\n    \"email\": \"example@gmail.com\",\n    \"otp\": \"123456\"\n  })\n}\n);\n\nconst data = await resp.json();\nconsole.log(data);\n"
          },
          {
            "lang": "php",
            "label": "PHP",
            "source": "/**\n * Requires libcurl\n */\n\n$curl = curl_init();\n\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"email\" => \"example@gmail.com\",\n  \"otp\" => \"123456\"\n);\n$payload = array(\n  \"phone_number\" => \"+919999999999\",\n  \"message\" => \"string\"\n);\n\ncurl_setopt_array($curl, [\n  CURLOPT_HTTPHEADER => [\n  \"Content-Type: application/json\",\n  \"Authorization: YOUR_API_KEY_HERE\"\n],\n  CURLOPT_POSTFIELDS => json_encode($payload),\n  CURLOPT_URL => \"{{API_URL}}/2FA/v1/verify-otp/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$error = curl_error($curl);\n\ncurl_close($curl);\n\nif ($error) {\n  echo \"cURL Error #:\" . $error;\n} else {\n  echo $response;\n}\n"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "WhatsappReportingModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "ButtonModel": {
        "type": "object",
        "properties": {
          "buttonType": {
            "type": "string"
          },
          "buttonPayload": {
            "type": "string"
          }
        }
      },
      "ComponentsHalo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "mediaparameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterHalo"
            }
          }
        }
      },
      "HaloLanguage": {
        "type": "object",
        "properties": {
          "policy": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "MediaHalo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "ParameterHalo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/MediaHalo"
          }
        }
      },
      "SendWhatsappModel": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "browserType": {
            "type": "string"
          },
          "whatsappType": {
            "type": "string"
          },
          "parameterCount": {
            "type": "integer",
            "format": "int32"
          },
          "templateName": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mediaType": {
            "type": "string"
          },
          "mediaUrl": {
            "type": "string"
          },
          "button1": {
            "type": "string"
          },
          "button2": {
            "type": "string"
          },
          "button3": {
            "type": "string"
          },
          "buttons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ButtonModel"
            }
          },
          "button_type": {
            "type": "string"
          },
          "button_payload": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/TemplateHalo"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentsHalo"
            }
          },
          "message": {
            "type": "string"
          },
          "to's": {
            "type": "string"
          },
          "from's": {
            "type": "string"
          }
        }
      },
      "TemplateHalo": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/HaloLanguage"
          },
          "templateId": {
            "type": "string"
          }
        }
      },
      "JSONObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "SendWhatsapp": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "example": ["84********", "93********"],
            "items": {
              "type": "object",
              "example": ["84********", "93********"]
            }
          },
          "message": {
            "$ref": "#/components/schemas/SendWhatsappMessage"
          },
          "templateMessage": {
            "type": "string"
          }
        }
      },
      "SendWhatsappMessage": {
        "required": ["language", "template_name"],
        "type": "object",
        "properties": {
          "template_name": {
            "type": "string",
            "example": "cust_support"
          },
          "language": {
            "type": "string"
          },
          "body_params": {
            "type": "string",
            "example": "[\"Name\",\"Ticket-id\"\"hours\"]"
          },
          "type": {
            "type": "string",
            "example": "template"
          }
        }
      },
      "WhatsappSendSwagger": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statusesSwagger"
            }
          }
        }
      },
      "statusesSwagger": {
        "type": "object",
        "properties": {
          "recipient": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "RetreivingTemplateModel": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          }
        }
      },
      "TemplateResponse": {
        "type": "object",
        "properties": {
          "template_id": {
            "type": "integer",
            "format": "int64"
          },
          "templatenameId": {
            "type": "string"
          },
          "templateCount": {
            "type": "integer",
            "format": "int32"
          },
          "templateName": {
            "type": "string"
          },
          "template": {
            "type": "string"
          }
        }
      },
      "WhatsappSummaryBody": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CapabilityModel": {
        "type": "object",
        "properties": {
          "numbers": {
            "type": "array",
            "example": ["84********", "93********"],
            "items": {
              "type": "string",
              "example": "[\"84********\",\"93********\"]"
            }
          }
        }
      },
      "Capabilities": {
        "type": "object",
        "properties": {
          "msisdn": {
            "type": "string"
          },
          "waid": {
            "type": "string"
          },
          "capable": {
            "type": "string"
          }
        }
      },
      "CapibilitySwagger": {
        "type": "object",
        "properties": {
          "capibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capabilities"
            }
          }
        }
      },
      "OptInModel": {
        "type": "object",
        "properties": {
          "numbers": {
            "type": "array",
            "example": ["84********", "93********"],
            "items": {
              "type": "string",
              "example": "[\"84********\",\"93********\"]"
            }
          }
        }
      },
      "AuthenticationLoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "****"
          },
          "password": {
            "type": "string",
            "example": "****"
          }
        }
      },
      "AuthenticationLoginResponse": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "OptOutSwagger": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "AuthCredentialDto": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "description": "User name or email",
            "example": "jon.doe@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          }
        },
        "required": ["user_name", "password"]
      },
      "SsoCredentialDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "email",
            "example": "jon.doe@gmail.com"
          },
          "tenant": {
            "type": "string",
            "description": "Tenant",
            "example": "Jondoe"
          }
        },
        "required": ["email", "tenant"]
      },
      "SSOLogin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "Password",
            "example": ""
          }
        },
        "required": ["id", "type"]
      },
      "ForgetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User Email",
            "example": "jon.doe@gmail.com"
          }
        },
        "required": ["email"]
      },
      "NewPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Enter Email Id",
            "example": "jonDoe@gmail.com"
          },
          "otp": {
            "type": "number",
            "description": "Enter Otp",
            "example": "192653654"
          },
          "new_password": {
            "type": "string",
            "description": "Enter New Password",
            "example": "Streamspace1@"
          }
        },
        "required": ["email", "otp", "new_password"]
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "UpdateProfileDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter First Name",
            "example": "Jon"
          },
          "profile_pic": {
            "type": "string",
            "format": "binary",
            "description": "profile Picture Url (Allow Only 'JPG,JPEG,PNG')",
            "example": "profile.jpg"
          },
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": ""
          },
          "phoneType": {
            "type": "string",
            "description": "user phone type",
            "example": "web"
          }
        },
        "required": ["name"]
      },
      "resetPassword": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "Enter oldPassword",
            "example": ""
          },
          "new_password": {
            "type": "string",
            "description": "Enter New Password",
            "example": "Streamspace1@"
          }
        },
        "required": ["oldPassword", "new_password"]
      },
      "SaveUserDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter First Name",
            "example": "Jon"
          },
          "userName": {
            "type": "string",
            "description": "Enter user name",
            "example": "Jon"
          },
          "email": {
            "type": "string",
            "description": "Enter Email Id",
            "example": "jon.doe@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Enter Password",
            "example": "Jondoe123@"
          },
          "accessRole": {
            "type": "string",
            "description": "access role id",
            "example": ""
          },
          "profile_pic": {
            "type": "string",
            "format": "binary",
            "description": "profile Picture Url (Allow Only 'JPG,JPEG,PNG')",
            "example": "profile.jpg"
          },
          "phoneType": {
            "type": "string",
            "description": "user phone type",
            "example": "web"
          },
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "crmId": {
            "type": "string",
            "description": "crmId",
            "example": ""
          },
          "crmType": {
            "type": "string",
            "description": "crmType",
            "example": ""
          },
          "countryCode": {
            "type": "string",
            "description": "countryCode",
            "example": "91"
          },
          "role": {
            "type": "number",
            "description": "role-id",
            "example": 3
          },
          "teams": {
            "description": "Enter teams",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skillMappings": {
            "description": "Enter skillMappings",
            "example": [
              {
                "skillId": "",
                "score": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "userName",
          "password",
          "accessRole",
          "phoneType",
          "role"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter First Name",
            "example": "Jon"
          },
          "email": {
            "type": "string",
            "description": "Enter Email Id",
            "example": "jon.doe@gmail.com"
          },
          "profile_pic": {
            "type": "string",
            "format": "binary",
            "description": "profile Picture Url (Allow Only 'JPG,JPEG,PNG')",
            "example": "profile.jpg"
          },
          "accessRole": {
            "type": "string",
            "description": "access role id",
            "example": "61a08b2ea6e59cc359b5dd04"
          },
          "phoneType": {
            "type": "string",
            "description": "user phone type",
            "example": "web"
          },
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "password": {
            "type": "string",
            "description": "Enter Password",
            "example": "Jondoe123@"
          },
          "role": {
            "type": "object",
            "description": "role-id",
            "example": 3
          },
          "skillMappings": {
            "description": "Enter skillMappings",
            "example": [
              {
                "skillId": "",
                "score": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "crmId": {
            "type": "string",
            "description": "crmId",
            "example": ""
          },
          "crmType": {
            "type": "string",
            "description": "crmType",
            "example": ""
          }
        }
      },
      "ActiveDeactiveDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Enter status",
            "example": true
          }
        },
        "required": ["status"]
      },
      "ImportUserDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          }
        }
      },
      "AssignAccessRoleDto": {
        "type": "object",
        "properties": {
          "accessRole": {
            "type": "string",
            "description": "access role id",
            "example": "61a08b2ea6e59cc359b5dd04"
          }
        },
        "required": ["accessRole"]
      },
      "inviteUserArrayDto": {
        "type": "object",
        "properties": {
          "reqArray": {
            "description": "reqArray",
            "example": [
              {
                "email": "jonXXXXX@gmail.com",
                "role": 3
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["reqArray"]
      },
      "userPerrformanceDto": {
        "type": "object",
        "properties": {
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "agentId": {
            "description": "agentId",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "listConfig": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          },
          "teamIds": {
            "description": "sendStartTime",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "userBreakReportDto": {
        "type": "object",
        "properties": {
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "agentId": {
            "description": "agentId",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "breakIds": {
            "description": "breakIds",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "listConfig": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        }
      },
      "liveMoniterDto": {
        "type": "object",
        "properties": {
          "campaignId": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "teamId": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        }
      },
      "agentDesposeDto": {
        "type": "object",
        "properties": {
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "agentId": {
            "description": "agentId",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "desposeIds": {
            "description": "desposeIds",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "listConfig": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        }
      },
      "skillMappingUserDto": {
        "type": "object",
        "properties": {
          "skillMappings": {
            "description": "Enter skillMappings",
            "example": [
              {
                "skillId": "",
                "score": 1
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AgentCallDto": {
        "type": "object",
        "properties": {
          "agentVerificationKey": {
            "type": "string",
            "description": "score",
            "example": ""
          },
          "customerNumber": {
            "type": "string",
            "description": "customerNumber",
            "example": ""
          },
          "team": {
            "type": "string",
            "description": "team",
            "example": ""
          }
        },
        "required": ["agentVerificationKey", "customerNumber", "team"]
      },
      "CoreDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MultipleDeleteDto": {
        "type": "object",
        "properties": {
          "ids": {
            "description": "ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["ids"]
      },
      "CreateNewTenantDto": {
        "type": "object",
        "properties": {
          "tenant_id": {
            "type": "string",
            "description": "tenant id",
            "example": "512dbfb5-ef7e-4212-84cd-0b41bb746424"
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "512dbfb5-ef7e-4212-84cd-0b41bb746424"
          },
          "tenant": {
            "type": "object",
            "description": "name",
            "example": {}
          },
          "endPoint": {
            "type": "object",
            "description": "end point",
            "example": {}
          },
          "totalSip": {
            "type": "number",
            "description": "total-sip",
            "example": 20
          },
          "cloneDbs": {
            "description": "cloneDbs",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeZone": {
            "type": "string",
            "description": "timezone",
            "example": ""
          },
          "config": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        },
        "required": ["tenant_id", "name", "tenant"]
      },
      "addConfig": {
        "type": "object",
        "properties": {
          "config": {
            "description": "skillPriority",
            "example": [
              {
                "name": "",
                "value": 0
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "rewokeDto": {
        "type": "object",
        "properties": {
          "revokeFiles": {
            "description": "name",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "sendSmsDto": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "description": "provider id ",
            "example": ""
          },
          "value": {
            "type": "object",
            "description": "user values",
            "example": {}
          },
          "templeteId": {
            "type": "string",
            "description": "templete id ",
            "example": ""
          }
        },
        "required": ["teamId", "value", "templeteId"]
      },
      "sendEmailDto": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "string",
            "description": "provider id ",
            "example": ""
          },
          "value": {
            "type": "object",
            "description": "user values",
            "example": {}
          },
          "templeteId": {
            "type": "string",
            "description": "templeteId",
            "example": {}
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": {}
          },
          "subject": {
            "type": "string",
            "description": "provider id ",
            "example": ""
          },
          "to": {
            "description": "provider id ",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cc": {
            "description": "provider id ",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "object",
            "description": "provider id ",
            "example": ""
          },
          "html": {
            "type": "string",
            "description": "provider id ",
            "example": ""
          }
        },
        "required": ["teamId", "value", "subject", "to"]
      },
      "CreateNewAccessRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": "Employee"
          },
          "baseRole": {
            "type": "string",
            "description": "name",
            "example": "Employee"
          },
          "description": {
            "type": "string",
            "description": "description",
            "example": ""
          },
          "creteria": {
            "description": "Access creterias",
            "example": [
              {
                "module": "user",
                "access": "full"
              },
              {
                "module": "payment",
                "access": "write"
              },
              {
                "module": "user",
                "access": "read"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "baseRole", "creteria"]
      },
      "UpdateNewAccessRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": "Employee"
          },
          "description": {
            "type": "string",
            "description": "description",
            "example": ""
          },
          "creteria": {
            "description": "Access creterias",
            "example": [
              {
                "module": "user",
                "access": "full",
                "type": "report"
              },
              {
                "module": "payment",
                "access": "write",
                "type": "modules"
              },
              {
                "module": "user",
                "access": "read",
                "type": "modules"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["creteria"]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "managers": {
            "description": "managers",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaign": {
            "description": "Enter campaign",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "campaign"]
      },
      "ChangeStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "question",
            "example": true
          }
        },
        "required": ["status"]
      },
      "CreateTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "teamLeads": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dialCode": {
            "type": "string",
            "description": "dial code",
            "example": "ea47091e-9c6d-473a-ab94-7e72314b50e3"
          },
          "member": {
            "description": "Team Members",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "provider": {
            "description": "teliphony provider",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contactLists": {
            "description": "contactLists",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callerIds": {
            "description": "phone number ids",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          },
          "externalTeam": {
            "description": "team leads",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalNumber": {
            "description": "team number",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoAnswer": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "webhookUrl": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "ctiUrl": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "timeOut": {
            "type": "number",
            "description": "team number",
            "example": []
          },
          "numberMasking": {
            "type": "boolean",
            "description": "numberMasking",
            "example": true
          },
          "sendSms": {
            "type": "boolean",
            "description": "sendSms",
            "example": true
          },
          "smsTemplate": {
            "description": "smsTemplate",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "smsProvider": {
            "description": "smsProvider",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendEmail": {
            "type": "boolean",
            "description": "sendEmail",
            "example": true
          },
          "emailTemplate": {
            "description": "emailTemplate",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "smtpProvider": {
            "description": "smtpProvider",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoDispose": {
            "type": "boolean",
            "description": "autoDispose",
            "example": true
          },
          "disposeTag": {
            "type": "string",
            "description": "sendEmail",
            "example": ""
          },
          "disposeTimeout": {
            "type": "number",
            "description": "sendEmail",
            "example": 0
          },
          "inboundOffer": {
            "type": "boolean",
            "description": "inboundOffer",
            "example": true
          },
          "inboundTimeout": {
            "type": "number",
            "description": "sendEmail",
            "example": 0
          },
          "transferTeam": {
            "type": "boolean",
            "description": "transferTeam",
            "example": true
          },
          "teamList": {
            "description": "sendEmail",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outboundOnPriority": {
            "type": "boolean",
            "description": "outboundOnPriority",
            "example": true
          },
          "skillPriority": {
            "description": "skillPriority",
            "example": [
              {
                "typePriority": 0,
                "agentDefaultPriority": 0,
                "skillGroupId": ""
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "positionInQueue": {
            "type": "boolean",
            "description": "positionInQueue",
            "example": true
          },
          "holdTimeAnnouncement": {
            "type": "boolean",
            "description": "Hold Time Announcement",
            "example": true
          },
          "announcementFrequency": {
            "type": "number",
            "description": "Announcement Frequency",
            "example": true
          }
        },
        "required": ["name"]
      },
      "ListUsersTeamDto": {
        "type": "object",
        "properties": {
          "teamsArr": {
            "description": "teamsArr",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["teamsArr"]
      },
      "TeamOutbound": {
        "type": "object",
        "properties": {
          "callerId": {
            "description": "Enter Caller Id",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recording": {
            "type": "boolean",
            "description": "Recording Call",
            "example": ""
          },
          "agentControl": {
            "type": "boolean",
            "description": "Agent Control",
            "example": ""
          },
          "holdMusic": {
            "type": "string",
            "description": "Hold Music File",
            "example": ""
          },
          "dropVoiceMail": {
            "type": "boolean",
            "description": "Auto Voice Mail drop",
            "example": ""
          },
          "acd": {
            "type": "boolean",
            "description": "After Call Work",
            "example": ""
          },
          "acdTimeout": {
            "type": "number",
            "description": "After Call Work Timeout",
            "example": ""
          },
          "acdOnFailedCalls": {
            "type": "boolean",
            "description": "ACW on failed call",
            "example": ""
          },
          "csat": {
            "type": "boolean",
            "description": "CSAT",
            "example": ""
          },
          "csatId": {
            "type": "string",
            "description": "CSAT flow",
            "example": ""
          },
          "prefix": {
            "type": "string",
            "description": "Team Prefix",
            "example": ""
          },
          "tags": {
            "description": "Enter Tags",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          },
          "externalTeam": {
            "description": "team leads",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TeamInbound": {
        "type": "object",
        "properties": {
          "callerId": {
            "description": "Enter Caller Id",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recording": {
            "type": "boolean",
            "description": "Record Call",
            "example": ""
          },
          "holdMusic": {
            "type": "string",
            "description": "Hold Music File",
            "example": ""
          },
          "acw": {
            "type": "boolean",
            "description": "After Call Work",
            "example": ""
          },
          "csat": {
            "type": "boolean",
            "description": "CSAT",
            "example": ""
          },
          "csatId": {
            "type": "string",
            "description": "CSAT flow",
            "example": ""
          },
          "acdTimeout": {
            "type": "number",
            "description": "After Call Work Timeout",
            "example": ""
          },
          "queueStartFileFlag": {
            "type": "boolean",
            "description": "Do you need to play file before placing in Queue",
            "example": ""
          },
          "queueStartFile": {
            "type": "string",
            "description": "Play Before placing in Queue",
            "example": ""
          },
          "queueMusicFile": {
            "type": "string",
            "description": "Play While in Queues",
            "example": ""
          },
          "queueTimeout": {
            "type": "string",
            "description": "Queue Timeout",
            "example": ""
          },
          "timeoutActionType": {
            "type": "string",
            "description": "Timeout Action ( Hungup / Voice Mail / Team / User / Flow / Transfer )",
            "example": ""
          },
          "timeoutActionEntity": {
            "type": "string",
            "description": "Timeout Action Value",
            "example": ""
          },
          "stickyAgent": {
            "type": "boolean",
            "description": "Sticky Agent",
            "example": ""
          },
          "repeatAnnouncement": {
            "type": "boolean",
            "description": "Announce Flag",
            "example": ""
          },
          "announcementAfter": {
            "type": "number",
            "description": "Announce every x sec",
            "example": ""
          },
          "announceFile": {
            "type": "string",
            "description": "Announce flie",
            "example": ""
          },
          "agentRingTimeout": {
            "type": "number",
            "description": "Agent Ring Timeout Sec",
            "example": ""
          },
          "agentTimeoutState": {
            "type": "string",
            "description": "Agent Ring Timeout After State",
            "example": ""
          },
          "tags": {
            "description": "Enter Tags",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "provider": {
            "description": "teliphony provider",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dialCode": {
            "type": "string",
            "description": "dial code",
            "example": "ea47091e-9c6d-473a-ab94-7e72314b50e3"
          },
          "isOutbound": {
            "type": "boolean",
            "description": "Outbound Calling Allowed",
            "example": false
          },
          "isInbound": {
            "type": "boolean",
            "description": "Inbound Calling Allowed",
            "example": false
          },
          "tags": {
            "description": "Enter Tags",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outbound": {
            "description": "Outbound Config",
            "example": {
              "callerId": [],
              "recording": true,
              "agentControl": false,
              "holdMusic": "111-111-11",
              "dropVoiceMail": false,
              "acd": true,
              "acdTimeout": 10,
              "acdOnFailedCalls": true,
              "csat": true,
              "csatId": "1234"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamOutbound"
              }
            ]
          },
          "inbound": {
            "description": "Inbound Config",
            "example": {
              "recording": true,
              "holdMusic": "",
              "acw": false,
              "csat": true,
              "csatId": "1234",
              "queueStartFileFlag": false,
              "queueStartFile": "",
              "queueMusicFile": "",
              "queueTimeout": "",
              "timeoutActionType": "",
              "timeoutActionEntity": "",
              "stickyAgent": true,
              "repeatAnnouncement": true,
              "announcementAfter": "",
              "announceFile": "",
              "agentRingTimeout": ""
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TeamInbound"
              }
            ]
          },
          "member": {
            "description": "Team Members",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callerIds": {
            "description": " callerIds",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contactLists": {
            "description": "contactLists",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          },
          "externalTeam": {
            "description": "team leads",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalNumber": {
            "description": "team number",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoAnswer": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "timeOut": {
            "type": "number",
            "description": "team number",
            "example": []
          },
          "webhookUrl": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "ctiUrl": {
            "type": "string",
            "description": "auto answer",
            "example": []
          },
          "numberMasking": {
            "type": "boolean",
            "description": "numberMasking",
            "example": true
          },
          "sendSms": {
            "type": "boolean",
            "description": "sendSms",
            "example": true
          },
          "smsTemplate": {
            "description": "smsTemplate",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "smsProvider": {
            "description": "smsProvider",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendEmail": {
            "type": "boolean",
            "description": "sendEmail",
            "example": true
          },
          "emailTemplate": {
            "description": "emailTemplate",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "smtpProvider": {
            "description": "smtpProvider",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "autoDispose": {
            "type": "boolean",
            "description": "autoDispose",
            "example": true
          },
          "disposeTag": {
            "type": "string",
            "description": "sendEmail",
            "example": ""
          },
          "disposeTimeout": {
            "type": "number",
            "description": "sendEmail",
            "example": 0
          },
          "inboundOffer": {
            "type": "boolean",
            "description": "inboundOffer",
            "example": true
          },
          "inboundTimeout": {
            "type": "number",
            "description": "sendEmail",
            "example": 0
          },
          "transferTeam": {
            "type": "boolean",
            "description": "transferTeam",
            "example": true
          },
          "teamList": {
            "description": "sendEmail",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "positionInQueue": {
            "type": "boolean",
            "description": "positionInQueue",
            "example": true
          },
          "holdTimeAnnouncement": {
            "type": "boolean",
            "description": "Hold Time Announcement",
            "example": true
          },
          "csat": {
            "type": "boolean",
            "description": "Hold Time Announcement",
            "example": true
          },
          "csatFlowId": {
            "type": "string",
            "description": "Hold Time Announcement",
            "example": true
          },
          "announcementFrequency": {
            "type": "number",
            "description": "Announcement Frequency",
            "example": true
          }
        }
      },
      "AddTeamMemberDto": {
        "type": "object",
        "properties": {
          "members": {
            "description": "members ids",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teams": {
            "description": "Enter teams",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["members", "teams"]
      },
      "RemoveTeamMemberDto": {
        "type": "object",
        "properties": {
          "members": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["members"]
      },
      "ManageTeamMemberDto": {
        "type": "object",
        "properties": {
          "AddMembers": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeMembers": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["AddMembers", "removeMembers"]
      },
      "ManageCallerId": {
        "type": "object",
        "properties": {
          "AddReletions": {
            "description": "team leads",
            "example": [
              {
                "userId": "ea47091e-9c6d-473a-ab94-7e72314b50e3",
                "phoneNumberId": "ea47091e-9c6d-473a-ab94-7e72314b50e3"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeReletions": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["AddReletions", "removeReletions"]
      },
      "TestMicroservicesDto": {
        "type": "object",
        "properties": {
          "queue": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "pattern": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "body": {
            "type": "object",
            "description": "info",
            "example": "{}"
          }
        },
        "required": ["queue", "pattern"]
      },
      "AddContactDto": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "info": {
            "type": "object",
            "description": "info",
            "example": "{}"
          },
          "privateInfo": {
            "type": "object",
            "description": "private info",
            "example": "{}"
          },
          "contactListName": {
            "type": "string",
            "description": "contactListNames",
            "example": ""
          },
          "email": {
            "type": "string",
            "description": "email",
            "example": "jon.deo@gmail.com"
          },
          "teamId": {
            "type": "string",
            "description": "teamId",
            "example": ""
          },
          "groupId": {
            "type": "string",
            "description": "group id",
            "example": "jon.deo@gmail.com"
          },
          "listIdExiest": {
            "type": "object",
            "description": "info",
            "example": "{}"
          },
          "priority": {
            "type": "number",
            "description": "priority",
            "example": 0
          }
        },
        "required": ["mobileNumber", "countryCode", "teamId"]
      },
      "ImportCsvDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          }
        }
      },
      "DeleteContactDto": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "description": "mobile number",
            "example": ["8989757459"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "description": "user-id",
            "example": "userID"
          },
          "groupId": {
            "type": "string",
            "description": "group-id",
            "example": "userID"
          },
          "teamId": {
            "type": "string",
            "description": "group-id",
            "example": "userID"
          }
        },
        "required": ["mobileNumber", "userId", "groupId", "teamId"]
      },
      "CreateNewContactListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "list name ",
            "example": ""
          }
        },
        "required": ["name"]
      },
      "AssignPersonalInfoDto": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "info": {
            "type": "object",
            "description": "info",
            "example": "{}"
          },
          "contactListName": {
            "type": "string",
            "description": "contactListNames",
            "example": ""
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "listIdExiest": {
            "type": "object",
            "description": "info",
            "example": "{}"
          }
        },
        "required": ["mobileNumber", "countryCode"]
      },
      "updateContactList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "list name ",
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "list id ",
            "example": ""
          }
        },
        "required": ["name", "id"]
      },
      "contactExport": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "listContactDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          },
          "page_no": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludedContacts": {
            "description": "excluded",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamId": {
            "type": "string",
            "description": "group-id",
            "example": "userID"
          }
        },
        "required": ["limit", "page_no", "teamId"]
      },
      "DeleteContactListDto": {
        "type": "object",
        "properties": {
          "contactListId": {
            "type": "string",
            "description": "contactListNames",
            "example": ""
          }
        }
      },
      "DeletePersonalInfoDto": {
        "type": "object",
        "properties": {
          "infoId": {
            "type": "string",
            "description": "info id ",
            "example": ""
          },
          "contactListId": {
            "type": "string",
            "description": "contactListNames",
            "example": ""
          }
        },
        "required": ["infoId"]
      },
      "ImportCampaignContactListDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          },
          "listName": {
            "type": "string",
            "description": "list name ",
            "example": ""
          }
        },
        "required": ["listName"]
      },
      "AddPhoneNumDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": "string",
            "description": "phone number",
            "example": "9898888488"
          },
          "provider_id": {
            "type": "string",
            "description": "provider id",
            "example": "1234-XXXXXX-XCXXXSX-DDXXXXC"
          },
          "sendToType": {
            "type": "string",
            "description": "send-to-type",
            "example": "USER"
          },
          "sendTo": {
            "type": "string",
            "description": "send-to-id",
            "example": ""
          },
          "detail": {
            "type": "object",
            "description": "details",
            "example": {}
          },
          "flow": {
            "type": "object",
            "description": "flow",
            "example": {}
          }
        },
        "required": ["phone_number", "provider_id", "sendToType", "sendTo"]
      },
      "UpdatePhoneNumDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "provider_id": {
            "type": "string",
            "description": "provider id",
            "example": "1234-XXXXXX-XCXXXSX-DDXXXXC"
          },
          "flow": {
            "type": "object",
            "description": "flow",
            "example": {}
          },
          "sendToType": {
            "type": "string",
            "description": "send-to-type",
            "example": "USER"
          },
          "sendTo": {
            "type": "string",
            "description": "send-to-id",
            "example": ""
          },
          "apiMethod": {
            "type": "string",
            "description": "apiMethod",
            "example": ""
          },
          "detail": {
            "type": "object",
            "description": "details",
            "example": {}
          }
        },
        "required": ["provider_id", "sendToType", "sendTo", "apiMethod"]
      },
      "ImportCSVDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          }
        }
      },
      "CreatePauseDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          }
        },
        "required": ["name"]
      },
      "CreateDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sip": {
            "type": "string",
            "description": "Enter sip",
            "example": ""
          },
          "userId": {
            "type": "string",
            "description": "Enter User Id",
            "example": ""
          }
        },
        "required": ["sip", "userId"]
      },
      "AddDncDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone_number": {
            "description": "phone number",
            "example": ["9898888488"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "global"
          },
          "team": {
            "type": "string",
            "description": "team id",
            "example": ""
          },
          "campaign": {
            "type": "string",
            "description": "campaign id",
            "example": ""
          }
        },
        "required": ["type"]
      },
      "DncCSVDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "type",
            "example": "global"
          },
          "team": {
            "type": "string",
            "description": "team id",
            "example": ""
          },
          "campaign": {
            "type": "string",
            "description": "campaign id",
            "example": ""
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          }
        },
        "required": ["type"]
      },
      "Intro": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Add File Name",
            "example": "abc.wav"
          },
          "fileId": {
            "type": "string",
            "description": "Add File Name",
            "example": "xx-xx-xx"
          }
        },
        "required": ["file", "fileId"]
      },
      "QuestionsConfig": {
        "type": "object",
        "properties": {
          "keypad": {
            "type": "boolean",
            "description": "Input keypad",
            "example": true
          },
          "speech": {
            "type": "boolean",
            "description": "Input speech",
            "example": false
          },
          "allowIntruption": {
            "type": "boolean",
            "description": "Allow Intruption",
            "example": false
          }
        },
        "required": ["keypad", "speech", "allowIntruption"]
      },
      "Questions": {
        "type": "object",
        "properties": {
          "config": {
            "description": "Add Question Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuestionsConfig"
              }
            ]
          },
          "list": {
            "description": "Add Questions List",
            "example": "[{\"title\": \"First questions\",\"fileId\": \"abc-abc-abc-abc\",\"file\": \"xskksl.wav\",\"next\" :  \"NEXT_QUESTION\"},{\"title\": \"Second questions\",\"fileId\": \"abc-abc-abc-abc\",\"file\": \"xskksl.wav\",\"next\" :  \"HUNGUP\"}]",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["config", "list"]
      },
      "CreateCsatDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "CSAT Identifier",
            "example": "CSAT Sample"
          },
          "description": {
            "type": "string",
            "description": "Enter description",
            "example": ""
          },
          "intro": {
            "description": "Intro File ",
            "example": "{\"fileId\": \"abc-abc-abc-abc\",\"file\": \"abc.wav\"}",
            "allOf": [
              {
                "$ref": "#/components/schemas/Intro"
              }
            ]
          },
          "method": {
            "type": "string",
            "description": "Enter end",
            "example": "TRANSFER_ON_AGENT_HANGUP"
          },
          "questions": {
            "description": "Question List ",
            "allOf": [
              {
                "$ref": "#/components/schemas/Questions"
              }
            ]
          },
          "end": {
            "description": "CSAT End Config",
            "example": "{\"fileName\":\"\", \"fileId\":\"\",\"type\":\"string\"}",
            "allOf": [
              {
                "$ref": "#/components/schemas/Intro"
              }
            ]
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "method"]
      },
      "UpdateCsatDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "CSAT Identifier",
            "example": "CSAT Sample"
          },
          "description": {
            "type": "string",
            "description": "Enter description",
            "example": ""
          },
          "intro": {
            "description": "Intro File ",
            "example": "{\"fileId\": \"abc-abc-abc-abc\",\"file\": \"abc.wav\"}",
            "allOf": [
              {
                "$ref": "#/components/schemas/Intro"
              }
            ]
          },
          "method": {
            "type": "string",
            "description": "Enter end",
            "example": "TRANSFER_ON_AGENT_HANGUP"
          },
          "questions": {
            "description": "Question List ",
            "allOf": [
              {
                "$ref": "#/components/schemas/Questions"
              }
            ]
          },
          "end": {
            "description": "CSAT End Config",
            "example": "{\"fileName\":\"\", \"fileId\":\"\",\"type\":\"string\"}",
            "allOf": [
              {
                "$ref": "#/components/schemas/Intro"
              }
            ]
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateSoundDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Audio file url (Allow Only 'audio')",
            "example": "xyz.mp3"
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "Hold Music"
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "Music File Name"
          },
          "group": {
            "description": "group",
            "example": ["call"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["type", "name"]
      },
      "UpdateSoundDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "Music File Name"
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "Hold Music"
          },
          "group": {
            "description": "group",
            "example": ["call"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TextToSpeachDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "text",
            "example": "Hold Music"
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "Hold Music"
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "Music File Name"
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "group": {
            "description": "group",
            "example": ["call"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["text", "type", "name"]
      },
      "createNewTag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": 10
          },
          "colourCode": {
            "type": "string",
            "description": "colour",
            "example": ""
          },
          "moduleName": {
            "type": "string",
            "description": "module name",
            "example": ""
          }
        },
        "required": ["name"]
      },
      "AssignTags": {
        "type": "object",
        "properties": {
          "module_ids": {
            "description": "module ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "module_name": {
            "type": "string",
            "description": "module name",
            "example": ""
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["module_ids", "module_name"]
      },
      "Subscription": {
        "type": "object",
        "properties": {}
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "iso3": {
            "type": "string",
            "description": "iso3",
            "example": ""
          },
          "iso2": {
            "type": "string",
            "description": "iso2",
            "example": ""
          },
          "numeric_code": {
            "type": "string",
            "description": "numeric code",
            "example": ""
          },
          "phone_code": {
            "type": "string",
            "description": "phone code",
            "example": ""
          },
          "capital": {
            "type": "string",
            "description": "capital",
            "example": ""
          },
          "currency": {
            "type": "string",
            "description": "currency",
            "example": ""
          },
          "currency_symbol": {
            "type": "string",
            "description": "currenct symbol",
            "example": ""
          },
          "native": {
            "type": "string",
            "description": "native",
            "example": ""
          },
          "region": {
            "type": "string",
            "description": "region",
            "example": ""
          },
          "subregion": {
            "type": "string",
            "description": "sub region",
            "example": ""
          },
          "timezones": {
            "type": "string",
            "description": "timezones",
            "example": ""
          },
          "latitude": {
            "type": "string",
            "description": "latitude",
            "example": ""
          },
          "longitude": {
            "type": "string",
            "description": "longitude",
            "example": ""
          },
          "emoji": {
            "type": "string",
            "description": "emoji",
            "example": ""
          },
          "emojiU": {
            "type": "string",
            "description": "emojiU",
            "example": ""
          }
        },
        "required": ["name", "iso3", "iso2", "phone_code"]
      },
      "HolidayDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Audio file url (Allow Only 'audio')",
            "example": "xyz.mp3"
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "Name"
          },
          "start_date": {
            "type": "string",
            "description": "start date",
            "example": "2020-11-06"
          },
          "end_date": {
            "type": "string",
            "description": "end date",
            "example": "2020-11-06"
          },
          "group": {
            "description": "group",
            "example": ["call"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "start_date", "end_date"]
      },
      "createGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": "Name"
          }
        },
        "required": ["name"]
      },
      "CreateSkillDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": "sales"
          },
          "type": {
            "description": "type",
            "example": ["xyz"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "score": {
            "type": "number",
            "description": "score",
            "example": 20
          }
        },
        "required": ["name", "type", "score"]
      },
      "ListAllSkillDto": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          }
        }
      },
      "AddCredDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "type",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          }
        },
        "required": ["type", "name", "config"]
      },
      "CredActive": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id",
            "example": ""
          },
          "useDefaultCred": {
            "type": "boolean",
            "description": "useDefault",
            "example": true
          }
        },
        "required": ["useDefaultCred"]
      },
      "CreateTelephony": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "isOutBound": {
            "type": "boolean",
            "description": "Enter isOutBound",
            "example": true
          },
          "isInBound": {
            "type": "boolean",
            "description": "Enter isInBound",
            "example": true
          },
          "inboundIp": {
            "description": "Enter Inbound Ips",
            "example": [
              {
                "ip": "",
                "port": ""
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vender": {
            "type": "string",
            "description": "Enter vender id",
            "example": ""
          },
          "outboundDomain": {
            "type": "string",
            "description": "Enter Outbound Domain",
            "example": ""
          },
          "outboundProxy": {
            "type": "string",
            "description": "Enter Outbound Proxy",
            "example": ""
          },
          "outboundPort": {
            "type": "string",
            "description": "Enter Outbound Port",
            "example": ""
          },
          "outboundUserName": {
            "type": "string",
            "description": "Enter Outbound UserName",
            "example": ""
          },
          "outboundPassword": {
            "type": "string",
            "description": "Enter Outbound Password",
            "example": ""
          },
          "outboundPrefix": {
            "type": "string",
            "description": "Enter Outbound Prefix",
            "example": ""
          },
          "outboundRegister": {
            "type": "boolean",
            "description": "Enter Outbound Register",
            "example": ""
          },
          "mediaServer": {
            "type": "string",
            "description": "Enter Media Server",
            "example": ""
          },
          "intialPulse": {
            "type": "string",
            "description": "Enter intialPulse",
            "example": 0
          },
          "subSequentPulse": {
            "type": "string",
            "description": "Enter subSequent Pulse",
            "example": 0
          },
          "ConnectionCharge": {
            "type": "string",
            "description": "Enter Connection Charge",
            "example": 0
          },
          "defaultRate": {
            "type": "string",
            "description": "Enter Connection Charge",
            "example": 0
          },
          "prepaid": {
            "type": "boolean",
            "description": "question",
            "example": true
          },
          "isBilled": {
            "type": "boolean",
            "description": "Billing is enable",
            "example": true
          }
        },
        "required": ["name", "isOutBound", "isInBound"]
      },
      "UpdateTelephony": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "isOutBound": {
            "type": "boolean",
            "description": "Enter isOutBound",
            "example": true
          },
          "isInBound": {
            "type": "boolean",
            "description": "Enter isInBound",
            "example": true
          },
          "newInboundIp": {
            "description": "Enter Inbound Ips",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updateVendor": {
            "description": "Enter Inbound Ips",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeVendor": {
            "description": "Enter Inbound ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vender": {
            "type": "string",
            "description": "Enter vender id",
            "example": ""
          },
          "outboundDomain": {
            "type": "string",
            "description": "Enter Outbound Domain",
            "example": ""
          },
          "outboundProxy": {
            "type": "string",
            "description": "Enter Outbound Proxy",
            "example": ""
          },
          "outboundPort": {
            "type": "string",
            "description": "Enter Outbound Port",
            "example": ""
          },
          "outboundUserName": {
            "type": "string",
            "description": "Enter Outbound UserName",
            "example": ""
          },
          "outboundPassword": {
            "type": "string",
            "description": "Enter Outbound Password",
            "example": ""
          },
          "outboundPrefix": {
            "type": "string",
            "description": "Enter Outbound Prefix",
            "example": ""
          },
          "outboundRegister": {
            "type": "string",
            "description": "Enter Outbound Register",
            "example": ""
          },
          "mediaServer": {
            "type": "string",
            "description": "Enter Media Server",
            "example": ""
          },
          "intialPulse": {
            "type": "string",
            "description": "Enter intialPulse",
            "example": 0
          },
          "subSequentPulse": {
            "type": "string",
            "description": "Enter subSequent Pulse",
            "example": 0
          },
          "defaultRate": {
            "type": "string",
            "description": "Enter subSequent Pulse",
            "example": 0
          },
          "ConnectionCharge": {
            "type": "string",
            "description": "Enter Connection Charge",
            "example": 0
          },
          "prepaid": {
            "type": "boolean",
            "description": "question",
            "example": true
          },
          "isBilled": {
            "type": "boolean",
            "description": "Billing is enable",
            "example": true
          }
        },
        "required": ["isOutBound", "isInBound"]
      },
      "verifyDto": {
        "type": "object",
        "properties": {
          "verify": {
            "type": "boolean",
            "description": "verify",
            "example": true
          }
        },
        "required": ["verify"]
      },
      "setDefaultCallerId": {
        "type": "object",
        "properties": {
          "callerIds": {
            "description": "Enter Inbound Ip",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateCarrierRateDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "countryCode": {
            "type": "string",
            "description": "country code",
            "example": "+91"
          },
          "currency": {
            "type": "string",
            "description": "currency",
            "example": "Rupees"
          },
          "destination": {
            "type": "string",
            "description": "destination",
            "example": ""
          },
          "rate": {
            "type": "number",
            "description": "rate",
            "example": 0.25
          },
          "intialPulse": {
            "type": "number",
            "description": "intialPulse",
            "example": 0.25
          },
          "subSequentPulse": {
            "type": "number",
            "description": "subSequentPulse",
            "example": 0.25
          },
          "connectionCharge": {
            "type": "number",
            "description": "connectionCharge",
            "example": 0.25
          }
        },
        "required": [
          "countryCode",
          "rate",
          "intialPulse",
          "subSequentPulse",
          "connectionCharge"
        ]
      },
      "SaveQueue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "welcome": {
            "type": "string",
            "description": "Enter welcome soundLink",
            "example": ""
          },
          "queue": {
            "type": "string",
            "description": "Enter queue soundLink",
            "example": ""
          },
          "endCall": {
            "type": "string",
            "description": "Enter endCall soundLink",
            "example": ""
          },
          "waitTime": {
            "type": "number",
            "description": "Enter wait Time",
            "example": 0
          },
          "businessTime": {
            "description": "buisnessTime",
            "example": [
              {
                "startTime": "",
                "endTime": ""
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "welcome",
          "queue",
          "endCall",
          "waitTime",
          "businessTime"
        ]
      },
      "SaveDialCodes": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "countryIds": {
            "description": "Enter countrys",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "countryIds"]
      },
      "CreateVenderDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "inboundIp": {
            "description": "Enter Inbound Ips",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name", "inboundIp"]
      },
      "UpdateVendorDto": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ip": {
            "type": "string",
            "description": "Enter Inbound ip",
            "example": ""
          },
          "port": {
            "type": "string",
            "description": "Enter Inbound port",
            "example": ""
          }
        },
        "required": ["ip", "port"]
      },
      "CreateFlowDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "actions": {
            "type": "object",
            "description": "Enter action",
            "example": ""
          },
          "elements": {
            "type": "object",
            "description": "Enter elements",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "general"
          },
          "update": {
            "type": "boolean",
            "description": "Update Flow or Create New Flow",
            "example": true
          }
        },
        "required": ["name", "actions", "elements", "type", "update"]
      },
      "SmsProviderCreate": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "host": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "port": {
            "type": "number",
            "description": "Enter Port",
            "example": ""
          },
          "systemId": {
            "type": "string",
            "description": "Enter systemId",
            "example": ""
          },
          "password": {
            "type": "string",
            "description": "Enter password",
            "example": ""
          },
          "secure": {
            "type": "boolean",
            "description": "Enter secure",
            "example": true
          },
          "version": {
            "type": "string",
            "description": "Enter version",
            "example": ""
          }
        },
        "required": ["name", "host", "port", "systemId", "password", "secure"]
      },
      "UpdateSmsProvider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "host": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "port": {
            "type": "number",
            "description": "Enter Port",
            "example": ""
          },
          "systemId": {
            "type": "string",
            "description": "Enter systemId",
            "example": ""
          },
          "password": {
            "type": "string",
            "description": "Enter password",
            "example": ""
          },
          "secure": {
            "type": "boolean",
            "description": "Enter secure",
            "example": true
          },
          "version": {
            "type": "string",
            "description": "Enter version",
            "example": ""
          }
        },
        "required": ["name", "secure"]
      },
      "defaultProvider": {
        "type": "object",
        "properties": {
          "providers": {
            "description": "Enter providers",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["providers"]
      },
      "saveTemplete": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "Enter type",
            "example": "text"
          },
          "templete": {
            "type": "string",
            "description": "templete",
            "example": ""
          }
        },
        "required": ["name", "type", "templete"]
      },
      "UpdateTemplete": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "templete": {
            "type": "string",
            "description": "templete",
            "example": ""
          }
        }
      },
      "SmtpProviderCreate": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "host": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "port": {
            "type": "string",
            "description": "Enter port",
            "example": ""
          },
          "from": {
            "type": "string",
            "description": "Enter from",
            "example": ""
          },
          "authPassword": {
            "type": "string",
            "description": "Enter auth password",
            "example": ""
          },
          "authUser": {
            "type": "string",
            "description": "Enter user",
            "example": ""
          },
          "secure": {
            "type": "boolean",
            "description": "Enter secureTO",
            "example": ""
          },
          "defaultBcc": {
            "description": "Enter defaultBcc",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultcc": {
            "description": "Enter defaultBcc",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tlsHeader": {
            "type": "object",
            "description": "Enter tlsHeader",
            "example": ""
          }
        },
        "required": [
          "name",
          "host",
          "port",
          "from",
          "authPassword",
          "authUser",
          "secure"
        ]
      },
      "saveEmailTemplete": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "Enter type",
            "example": "text"
          },
          "templete": {
            "type": "string",
            "description": "templete",
            "example": ""
          },
          "valueObj": {
            "type": "object",
            "description": "value obj",
            "example": []
          }
        },
        "required": ["name", "type", "templete", "valueObj"]
      },
      "UpdateEmailTemplete": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "templete": {
            "type": "string",
            "description": "templete",
            "example": ""
          },
          "valueObj": {
            "type": "object",
            "description": "value obj",
            "example": []
          }
        },
        "required": ["valueObj"]
      },
      "GenerateIntegrationDTO": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          }
        },
        "required": ["limit"]
      },
      "UpdateLeadSquaredToken": {
        "type": "object",
        "properties": {
          "accessKey": {
            "type": "string",
            "description": "Access Key",
            "example": ""
          },
          "secreateKey": {
            "type": "string",
            "description": "Secreate Key",
            "example": ""
          },
          "apiHost": {
            "type": "string",
            "description": "Api Host",
            "example": ""
          }
        },
        "required": ["accessKey", "secreateKey", "apiHost"]
      },
      "LeadSquaredTokenActive": {
        "type": "object",
        "properties": {
          "allowAll": {
            "type": "boolean",
            "description": "Allow for All Team",
            "example": ""
          },
          "teamAllow": {
            "type": "boolean",
            "description": "Team Allow",
            "example": ""
          },
          "teamIds": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["allowAll"]
      },
      "SmsServicerCreate": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "reqType": {
            "type": "string",
            "description": "Enter reqType",
            "example": ""
          },
          "url": {
            "type": "string",
            "description": "Enter url",
            "example": ""
          },
          "headers": {
            "type": "object",
            "description": "Enter headers",
            "example": {
              "Authorization": "Bearer KEY017EAC02F740B79A5D2EFEA91F45179C_sbqmyZ12Sx3hNn4wq5"
            }
          },
          "body": {
            "type": "object",
            "description": "Enter body",
            "example": {
              "from": "+18884802545",
              "to": "{phoneNumber}",
              "text": "Your Otp",
              "media_urls": []
            }
          }
        },
        "required": ["name", "reqType", "url", "headers"]
      },
      "UpdateSmsServicer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter host",
            "example": ""
          },
          "reqType": {
            "type": "string",
            "description": "Enter reqType",
            "example": ""
          },
          "url": {
            "type": "string",
            "description": "Enter url",
            "example": ""
          },
          "headers": {
            "type": "object",
            "description": "Enter headers",
            "example": ""
          },
          "body": {
            "type": "object",
            "description": "Enter body",
            "example": ""
          }
        },
        "required": ["name", "reqType", "url", "headers"]
      },
      "CallingHoures": {
        "type": "object",
        "properties": {
          "weekDays": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["weekDays"]
      },
      "SaveCampaign": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "Enter campaign type",
            "example": "voice"
          },
          "subType": {
            "type": "string",
            "description": "Enter campaign sub type",
            "example": "preview"
          },
          "expiryDate": {
            "type": "string",
            "description": "Enter expiryDate",
            "example": "yyyy-mm-dd"
          },
          "startDate": {
            "type": "string",
            "description": "Enter campaign startDate",
            "example": "yyyy-mm-dd"
          },
          "contactNumLength": {
            "type": "string",
            "description": "Enter campaign startDate",
            "example": "yyyy-mm-dd"
          },
          "contactList": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "telephonyProviders": {
            "description": "Enter telephonyProviders",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ratio": {
            "type": "number",
            "description": "ratio",
            "example": ""
          },
          "ringTime": {
            "type": "number",
            "description": "ringTime",
            "example": ""
          },
          "callerIds": {
            "description": " callerIds",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callingHours": {
            "description": " callingHours",
            "example": {
              "WeekDays": ["Mon", "TUE", "WED", "THU", "FRI"],
              "Timezone": "",
              "time": [
                {
                  "startTime": "10:00",
                  "endTime": "14:00"
                },
                {
                  "startTime": "15:00",
                  "endTime": "20:00"
                }
              ],
              "startDate": "YYYY-MM-DD",
              "endDate": "YYYY-MM-DD"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingHoures"
              }
            ]
          },
          "team": {
            "type": "string",
            "description": "team"
          },
          "queue": {
            "type": "string",
            "description": "queue"
          },
          "flow": {
            "type": "string",
            "description": "team"
          },
          "members": {
            "description": " member ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamLeads": {
            "description": " teamLeads ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "despose": {
            "description": "desposes",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          },
          "sstId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "ttsId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "voiceId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "voiceLanguge": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "miniFlow": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "previewTimer": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "absentTime": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "maxCall": {
            "type": "number",
            "description": "Enter contact list",
            "example": 0
          },
          "answeringMachineDetection": {
            "type": "string",
            "description": "Enter contact list",
            "example": true
          }
        },
        "required": ["name", "type", "subType", "callerIds", "callingHours"]
      },
      "UpdateCampaignDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": ""
          },
          "telephonyProviders": {
            "description": "Enter telephonyProviders",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "csv file url (Allow Only 'csv')",
            "example": "user.csv"
          },
          "ratio": {
            "type": "number",
            "description": "ratio",
            "example": ""
          },
          "ringTime": {
            "type": "number",
            "description": "ringTime",
            "example": ""
          },
          "callerIds": {
            "description": " callerIds",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callingHours": {
            "description": " callingHours",
            "example": {
              "WeekDays": ["Mon", "TUE", "WED", "THU", "FRI"],
              "Timezone": "",
              "time": [
                {
                  "startTime": "10:00",
                  "endTime": "14:00"
                },
                {
                  "startTime": "15:00",
                  "endTime": "20:00"
                }
              ]
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/CallingHoures"
              }
            ]
          },
          "expiryDate": {
            "type": "string",
            "description": "Enter expiryDate",
            "example": "yyyy-mm-dd"
          },
          "startDate": {
            "type": "string",
            "description": "Enter campaign startDate",
            "example": "yyyy-mm-dd"
          },
          "team": {
            "type": "string",
            "description": "team"
          },
          "queue": {
            "type": "string",
            "description": "queue"
          },
          "flow": {
            "type": "string",
            "description": "team"
          },
          "members": {
            "description": " callerIds",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "despose": {
            "description": "desposes",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sstId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "ttsId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "voiceId": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "voiceLanguge": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "miniFlow": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "previewTimer": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "absentTime": {
            "type": "string",
            "description": "Enter contact list",
            "example": ""
          },
          "maxCall": {
            "type": "number",
            "description": "Enter contact list",
            "example": 0
          },
          "reqPerSecond": {
            "type": "number",
            "description": "Enter req per second",
            "example": ""
          },
          "contacts": {
            "description": "Enter contact list",
            "example": [
              {
                "mobileNumber": "8989757459",
                "countryCode": "Jondoe123@"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "addContactList": {
        "type": "object",
        "properties": {
          "contactList": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["contactList"]
      },
      "manageContactListDto": {
        "type": "object",
        "properties": {
          "addContactList": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeContactList": {
            "description": "Enter contact list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "churnDto": {
        "type": "object",
        "properties": {
          "list": {
            "description": "Enter cause code list",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "taskId": {
            "type": "string",
            "description": "taskId"
          }
        }
      },
      "campaignAddContact": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "privateInfo": {
            "type": "object",
            "description": "private info",
            "example": "{}"
          },
          "contactListId": {
            "type": "string",
            "description": "contactListId",
            "example": ""
          }
        },
        "required": ["mobileNumber", "countryCode"]
      },
      "testCampaignDto": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string",
            "description": "mobile number",
            "example": "8989757459"
          },
          "countryCode": {
            "type": "string",
            "description": "Password",
            "example": "Jondoe123@"
          },
          "privateInfo": {
            "type": "object",
            "description": "private info",
            "example": "{}"
          }
        },
        "required": ["mobileNumber", "countryCode"]
      },
      "uploadInCampaignDto": {
        "type": "object",
        "properties": {
          "contacts": {
            "description": "bulkContactDto",
            "example": [
              {
                "mobileNumber": "",
                "countryCode": 0,
                "info": {}
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaignId": {
            "type": "string",
            "description": "campaignId / campaign Name",
            "example": ""
          }
        },
        "required": ["contacts", "campaignId"]
      },
      "UUIDBridgeDto": {
        "type": "object",
        "properties": {}
      },
      "EndpointCreateDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "username",
            "example": "5844315489489"
          },
          "password": {
            "type": "string",
            "description": "password",
            "example": "5844315489489"
          },
          "type": {
            "type": "string",
            "description": "type",
            "example": "5844315489489"
          }
        },
        "required": ["username", "password", "type"]
      },
      "CallInfo": {
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "description": "Call Info",
            "example": "{\"phone\":\"9292929\"}"
          }
        },
        "required": ["info"]
      },
      "CallHandler": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Cpaas Request Type",
            "example": "callAndConnect"
          },
          "music": {
            "type": "string",
            "description": "Music File",
            "example": "https://sounds.ai/agentBusy.wav"
          },
          "postSave": {
            "type": "string",
            "description": "Music File",
            "example": "https://sounds.ai/agentBusy.wav"
          },
          "sessionId": {
            "type": "string",
            "description": "SessionId",
            "example": ""
          },
          "callId": {
            "type": "string",
            "description": "callId",
            "example": ""
          },
          "callId1": {
            "type": "string",
            "description": "callId1",
            "example": ""
          },
          "callId2": {
            "type": "string",
            "description": "callId2",
            "example": ""
          },
          "dtmf": {
            "type": "string",
            "description": "callId2",
            "example": ""
          },
          "repeatCount": {
            "type": "number",
            "description": "Repeat Count",
            "example": 2
          },
          "recordTime": {
            "type": "number",
            "description": "Record Time",
            "example": 20
          }
        },
        "required": [
          "type",
          "music",
          "postSave",
          "sessionId",
          "callId",
          "callId1",
          "callId2",
          "dtmf",
          "repeatCount",
          "recordTime"
        ]
      },
      "CalllAndConnect": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User Id from Application",
            "example": "54a34895-d978-411a-8dd1-4196aa7f5340"
          },
          "teamId": {
            "type": "string",
            "description": "Team Id from Application",
            "example": "54a34895-d978-411a-8dd1-4196aa7f5340"
          },
          "customerNumber": {
            "type": "string",
            "description": "Customer Phone Number",
            "example": "98xxxxxxx"
          },
          "customerType": {
            "type": "string",
            "description": "Customer Phone Type",
            "example": "phone"
          },
          "customerCallerId": {
            "type": "string",
            "description": "Customer Caller Id",
            "example": "485869"
          },
          "agentType": {
            "type": "string",
            "description": "Agent Phone Type",
            "example": "phone"
          },
          "agentNumber": {
            "type": "string",
            "description": "Agent Number",
            "example": "87xxxxxxxx"
          },
          "agentCallerId": {
            "type": "string",
            "description": "Agent Caller Id",
            "example": "485896"
          }
        },
        "required": [
          "userId",
          "teamId",
          "customerNumber",
          "customerType",
          "customerCallerId",
          "agentType",
          "agentNumber",
          "agentCallerId"
        ]
      },
      "createNewDespose": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name",
            "example": 10
          },
          "parent": {
            "type": "string",
            "description": "parent id",
            "example": ""
          },
          "level": {
            "type": "number",
            "description": "level",
            "example": 0
          },
          "isDnc": {
            "type": "boolean",
            "description": "isDnc",
            "example": 0
          },
          "isCallback": {
            "type": "boolean",
            "description": "isCallback",
            "example": 0
          }
        },
        "required": ["name", "level"]
      },
      "AssignDespose": {
        "type": "object",
        "properties": {
          "module_ids": {
            "description": "module ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "module_name": {
            "type": "string",
            "description": "module name",
            "example": ""
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["module_ids", "module_name"]
      },
      "voiceLogListDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          },
          "page_no": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subType": {
            "type": "string",
            "description": "sub type",
            "example": ""
          },
          "agentId": {
            "type": "object",
            "description": "sub type",
            "example": ""
          },
          "source": {
            "type": "string",
            "description": "source",
            "example": ""
          },
          "freeTextSearch": {
            "type": "string",
            "description": "freeTextSearch",
            "example": ""
          },
          "to": {
            "type": "string",
            "description": "to",
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "status",
            "example": ""
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "selectedCampaign": {
            "description": "selectedCampaign",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "requireDetail": {
            "type": "object",
            "description": "requireDetail",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          },
          "listConfig": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          }
        },
        "required": ["limit", "page_no"]
      },
      "hourlyVoiceCDRDto": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "object",
            "description": "sub type",
            "example": ""
          },
          "source": {
            "type": "string",
            "description": "source",
            "example": ""
          },
          "freeTextSearch": {
            "type": "string",
            "description": "freeTextSearch",
            "example": ""
          },
          "to": {
            "type": "string",
            "description": "to",
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "status",
            "example": ""
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "selectedCampaign": {
            "description": "selectedCampaign",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "requireDetail": {
            "type": "object",
            "description": "requireDetail",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          },
          "listConfig": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          }
        }
      },
      "listGraphDto": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "source",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          },
          "teamIds": {
            "description": "teamIds",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "string",
            "description": "to",
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "status",
            "example": ""
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "isAgentGraph": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          }
        }
      },
      "exportVoiceLogListDto": {
        "type": "object",
        "properties": {
          "subType": {
            "type": "string",
            "description": "sub type",
            "example": ""
          },
          "source": {
            "type": "string",
            "description": "source",
            "example": ""
          },
          "freeTextSearch": {
            "type": "string",
            "description": "freeTextSearch",
            "example": ""
          },
          "to": {
            "type": "string",
            "description": "to",
            "example": ""
          },
          "status": {
            "type": "string",
            "description": "status",
            "example": ""
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "selectedCampaign": {
            "description": "selectedCampaign",
            "example": "",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "requireDetail": {
            "type": "object",
            "description": "requireDetail",
            "example": ""
          },
          "filter": {
            "type": "object",
            "description": "filter",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          },
          "listConfig": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          }
        }
      },
      "CoreExportDto": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "reortListLog": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          },
          "page_no": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "module": {
            "description": "",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "type": "object",
            "description": "",
            "example": ""
          },
          "action": {
            "description": "",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "description": "",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "endTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          }
        },
        "required": ["limit", "page_no"]
      },
      "billOptionDTO": {
        "type": "object",
        "properties": {
          "tenant": {
            "type": "string",
            "description": "Tenant",
            "example": 1
          },
          "callerid": {
            "type": "string",
            "description": "callerid",
            "example": 1
          },
          "startdate": {
            "type": "string",
            "description": "start date",
            "example": "yyyy-mm-dd"
          },
          "enddate": {
            "type": "string",
            "description": "end date",
            "example": "yyyy-mm-dd"
          }
        },
        "required": ["tenant", "callerid", "startdate", "enddate"]
      },
      "webHookReportDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          },
          "page_no": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "listConfig": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        },
        "required": ["limit", "page_no"]
      },
      "webHookReportExportDto": {
        "type": "object",
        "properties": {
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "listConfig": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          },
          "timezone": {
            "type": "object",
            "description": "timezone",
            "example": ""
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {}
      },
      "addCtiConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "module type",
            "example": ""
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          }
        },
        "required": ["url", "type"]
      },
      "UpdateCtiConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "module type",
            "example": ""
          },
          "config": {
            "type": "object",
            "description": "config",
            "example": {}
          }
        }
      },
      "AssignToTeam": {
        "type": "object",
        "properties": {
          "teamIds": {
            "description": "module ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["teamIds"]
      },
      "removeFromTeam": {
        "type": "object",
        "properties": {
          "teamIds": {
            "description": "module ids",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["teamIds"]
      },
      "addWebhookConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "callStyle": {
            "type": "string",
            "description": "module type",
            "example": ""
          },
          "method": {
            "type": "string",
            "description": "module type",
            "example": "get"
          },
          "status": {
            "type": "boolean",
            "description": "module type",
            "example": true
          },
          "events": {
            "description": "Enter skillMappings",
            "example": [
              {
                "type": "Inbound",
                "subType": "Missed",
                "header": {},
                "body": {},
                "assignTo": "did",
                "assignIds": ["1223", "3444"]
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "header": {
            "type": "object",
            "description": "config",
            "example": {}
          }
        },
        "required": ["url", "name", "callStyle", "method", "status"]
      },
      "UpdateWebhookConfig": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "description": "config",
            "example": {}
          },
          "url": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "module url",
            "example": ""
          },
          "callStyle": {
            "type": "string",
            "description": "module type",
            "example": ""
          },
          "method": {
            "type": "string",
            "description": "module type",
            "example": "get"
          },
          "status": {
            "type": "boolean",
            "description": "module type",
            "example": true
          },
          "events": {
            "description": "Enter skillMappings",
            "example": [
              {
                "type": "Inbound",
                "subType": "Missed",
                "header": {},
                "body": {},
                "assignTo": "did",
                "assignIds": ["1223", "3444"]
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["status"]
      },
      "CreateStickyGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "teams": {
            "description": "team leads",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["name"]
      },
      "UpdateStickyGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Enter name",
            "example": ""
          },
          "teams": {
            "description": "team leads",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "addRemoveTeamDto": {
        "type": "object",
        "properties": {
          "AddTeams": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "removeTeams": {
            "description": "team leads",
            "example": ["ea47091e-9c6d-473a-ab94-7e72314b50e3"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["AddTeams", "removeTeams"]
      },
      "sceduleList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit",
            "example": 10
          },
          "page_no": {
            "type": "number",
            "description": "Page number",
            "example": 1
          },
          "search": {
            "type": "string",
            "description": "input",
            "example": ""
          },
          "orderBy": {
            "type": "string",
            "description": "Order by (Field name)",
            "example": ""
          },
          "order": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariable": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterVariableValueType": {
            "type": "string",
            "description": "Order by",
            "example": ""
          },
          "filterValue": {
            "type": "object",
            "description": "Order by",
            "example": ""
          },
          "excluded": {
            "description": "excluded user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includes": {
            "description": "includes user",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "tags",
            "example": ["sales", "marketing"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string",
            "description": "info",
            "example": []
          },
          "teamId": {
            "type": "string",
            "description": "info",
            "example": []
          },
          "customerNo": {
            "type": "string",
            "description": "info",
            "example": []
          },
          "fromTeam": {
            "description": "sceduled from team",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "listConfig": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "columFilter": {
            "type": "object",
            "description": "listConfig",
            "example": ""
          },
          "sendStartTime": {
            "type": "string",
            "description": "sendStartTime",
            "example": ""
          },
          "requireDetail": {
            "type": "object",
            "description": "requireDetail",
            "example": ""
          },
          "sendEndTime": {
            "type": "string",
            "description": "sendEndTime",
            "example": ""
          }
        },
        "required": ["limit", "page_no"]
      },
      "callScedularDto": {
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "description": "list name ",
            "example": ""
          },
          "customerNo": {
            "type": "string",
            "description": "list name ",
            "example": ""
          },
          "assignTo": {
            "type": "string",
            "description": "list name ",
            "example": ""
          },
          "assignToId": {
            "type": "string",
            "description": "list name ",
            "example": ""
          }
        }
      },
      "assignsceduler": {
        "type": "object",
        "properties": {
          "scedulerIds": {
            "description": "scedulerIds",
            "example": [""],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignToId": {
            "type": "string",
            "description": "list name ",
            "example": ""
          },
          "assignTo": {
            "type": "string",
            "description": "list name ",
            "example": ""
          }
        },
        "required": ["scedulerIds", "assignToId"]
      },
      "SaveAction": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "action",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "action",
            "example": ""
          },
          "actionAt": {
            "description": "actionAt",
            "example": "MISSED",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "DIDs": {
            "description": "DIDs",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaign": {
            "type": "string",
            "description": "action",
            "example": ""
          }
        },
        "required": ["action", "name", "actionAt", "DIDs", "campaign"]
      },
      "UpdateAction": {
        "type": "object",
        "properties": {
          "DIDs": {
            "description": "DIDs",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "action",
            "example": ""
          },
          "campaign": {
            "type": "string",
            "description": "teams",
            "example": ""
          },
          "actionAt": {
            "description": "actionAt",
            "example": "MISSED",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["actionAt"]
      },
      "SaveConfig": {
        "type": "object",
        "properties": {
          "subType": {
            "type": "string",
            "description": "subType",
            "example": ""
          },
          "config": {
            "type": "object",
            "description": "tags",
            "example": ["sales", "marketing"]
          }
        },
        "required": ["subType", "config"]
      },
      "CalendereventSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          },
          "event_start_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "event_end_datetime": {
            "type": "string",
            "format": "date-time"
          },
          "event_Title": {
            "type": "string",
            "maxLength": 100
          },
          "event_description": {
            "type": "string"
          }
        },
        "required": [
          "display_text",
          "event_Title",
          "event_description",
          "event_end_datetime",
          "event_start_datetime",
          "postback_reply"
        ]
      },
      "CampaignSummary": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 500
          },
          "message_type": {
            "type": "string",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessageTypeEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "intent": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "message_json": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "processed_numbers": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64"
          },
          "total_numbers": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64"
          },
          "active": {
            "type": "boolean"
          },
          "campaign_start_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "campaign_end_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": ["campaign_start_time", "name", "status"]
      },
      "CardOrientationEnum": {
        "enum": ["HORIZONTAL", "VERTICAL"],
        "type": "string"
      },
      "CardWidthEnum": {
        "enum": ["SMALL", "MEDIUM"],
        "type": "string"
      },
      "CarouselCard": {
        "type": "object",
        "properties": {
          "suggestions": {
            "$ref": "#/components/schemas/Suggestion"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 2000
          },
          "image_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "image_height": {
            "$ref": "#/components/schemas/ImageHeightEnum"
          },
          "file_resource_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "resource_cashed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": ["created_at", "image_height", "suggestions"]
      },
      "CarouselOfCards": {
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarouselCard"
            }
          },
          "intent": {
            "type": "string",
            "maxLength": 100
          },
          "card_width": {
            "$ref": "#/components/schemas/CardWidthEnum"
          }
        },
        "required": ["card_width", "cards", "intent"]
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "phone_number": {
            "type": "string",
            "maxLength": 21
          },
          "sender": {
            "$ref": "#/components/schemas/SenderEnum"
          },
          "message_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "message_json": {
            "type": "object",
            "additionalProperties": {}
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": ["id", "message_json", "phone_number", "sender", "time"]
      },
      "DialSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          },
          "phone_number": {
            "type": "string",
            "pattern": "\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$",
            "maxLength": 21
          }
        },
        "required": ["display_text", "phone_number", "postback_reply"]
      },
      "FileMessage": {
        "type": "object",
        "properties": {
          "suggestions": {
            "$ref": "#/components/schemas/Suggestion"
          },
          "intent": {
            "type": "string",
            "maxLength": 500
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "maxLength": 200
          },
          "thumbnail_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": ["created_at", "file_url", "intent", "suggestions"]
      },
      "ImageHeightEnum": {
        "enum": ["SHORT", "MEDIUM", "TALL"],
        "type": "string"
      },
      "IntegrationEnum": {
        "enum": ["Dialogflow", "Cloud_Pub/Sub"],
        "type": "string"
      },
      "MediaHeightEnum": {
        "enum": ["SHORT", "MEDIUM", "TALL"],
        "type": "string"
      },
      "MessageTypeEnum": {
        "enum": ["simple_message", "file", "rich_card", "carousel"],
        "type": "string"
      },
      "NullEnum": {
        "enum": [null]
      },
      "PaginatedCampaignSummaryList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignSummary"
            }
          }
        }
      },
      "PaginatedCarouselOfCardsList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarouselOfCards"
            }
          }
        }
      },
      "PaginatedConversationList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Conversation"
            }
          }
        }
      },
      "PaginatedFileMessageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileMessage"
            }
          }
        }
      },
      "PaginatedReceivedMessageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceivedMessage"
            }
          }
        }
      },
      "PaginatedRichCardList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RichCard"
            }
          }
        }
      },
      "PaginatedSentMessageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentMessage"
            }
          }
        }
      },
      "PaginatedSimpleMessageList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleMessage"
            }
          }
        }
      },
      "ReceivedMessage": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "maxLength": 21
          },
          "message_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "integration": {
            "$ref": "#/components/schemas/IntegrationEnum"
          },
          "raw_message_body": {
            "type": "object",
            "additionalProperties": {}
          },
          "intent": {
            "type": "string",
            "maxLength": 4000
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "webhook_pushed_status": {
            "type": "string",
            "nullable": true,
            "maxLength": 4
          },
          "received_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "read_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "integration",
          "intent",
          "raw_message_body",
          "received_time",
          "sender"
        ]
      },
      "RichCard": {
        "type": "object",
        "properties": {
          "suggestions": {
            "$ref": "#/components/schemas/Suggestion"
          },
          "intent": {
            "type": "string",
            "maxLength": 100
          },
          "card_orientation": {
            "$ref": "#/components/schemas/CardOrientationEnum"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 2000
          },
          "image_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "thumbnail_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "maxLength": 200
          },
          "thumbnail_image_alignment": {
            "$ref": "#/components/schemas/ThumbnailImageAlignmentEnum"
          },
          "media_height": {
            "$ref": "#/components/schemas/MediaHeightEnum"
          },
          "file_resource_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "resource_cashed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "card_orientation",
          "created_at",
          "intent",
          "media_height",
          "suggestions"
        ]
      },
      "SaveMessageSwagger": {
        "type": "object",
        "properties": {
          "simple_message": {
            "$ref": "#/components/schemas/SimpleMessage"
          },
          "rich_message": {
            "$ref": "#/components/schemas/RichCard"
          },
          "carousel": {
            "$ref": "#/components/schemas/CarouselOfCards"
          }
        },
        "required": []
      },
      "SenderEnum": {
        "enum": ["user", "agent"],
        "type": "string"
      },
      "SentMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentMessageEvent"
            }
          },
          "phone_number": {
            "type": "string",
            "pattern": "\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$",
            "maxLength": 21
          },
          "message_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageTypeEnum"
          },
          "intent": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "message_json": {
            "type": "object",
            "additionalProperties": {}
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "sent_time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "campaign": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "events",
          "message_json",
          "message_type",
          "phone_number",
          "sent_time",
          "status"
        ]
      },
      "SentMessageEvent": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "rcs_agent": {
            "type": "integer"
          }
        },
        "required": ["time"]
      },
      "ShareLocationSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          }
        },
        "required": ["display_text", "postback_reply"]
      },
      "SimpleMessage": {
        "type": "object",
        "properties": {
          "intent": {
            "type": "string",
            "maxLength": 100
          },
          "text": {
            "type": "string",
            "maxLength": 3072
          },
          "suggestions": {
            "$ref": "#/components/schemas/Suggestion"
          }
        },
        "required": ["intent", "suggestions", "text"]
      },
      "StateEnum": {
        "enum": ["SENT", "DELIVERED", "READ", "UNDELIVERED"],
        "type": "string"
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "text_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextSuggestion"
            }
          },
          "url_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlSuggestion"
            }
          },
          "dial_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DialSuggestion"
            }
          },
          "view_location_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ViewLocationSuggestion"
            }
          },
          "share_location_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShareLocationSuggestion"
            }
          },
          "calender_event_suggestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendereventSuggestion"
            }
          }
        },
        "required": [
          "calender_event_suggestion",
          "dial_suggestion",
          "share_location_suggestion",
          "text_suggestion",
          "url_suggestion",
          "view_location_suggestion"
        ]
      },
      "TextSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          }
        },
        "required": ["display_text", "postback_reply"]
      },
      "ThumbnailImageAlignmentEnum": {
        "enum": ["LEFT", "RIGHT"],
        "type": "string"
      },
      "TokenCreate": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": ["access", "password", "refresh", "username"]
      },
      "TokenRefresh": {
        "type": "object",
        "properties": {
          "access": {
            "type": "string",
            "readOnly": true
          },
          "refresh": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": ["access", "refresh"]
      },
      "TokenVerify": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": ["token"]
      },
      "TypeEnum": {
        "enum": ["SENT", "DELIVERED", "READ", "UNDELIVERED"],
        "type": "string"
      },
      "UrlSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          },
          "url": {
            "type": "string",
            "format": "uri",
            "maxLength": 200
          }
        },
        "required": ["display_text", "postback_reply", "url"]
      },
      "ViewLocationSuggestion": {
        "type": "object",
        "properties": {
          "display_text": {
            "type": "string",
            "maxLength": 50
          },
          "postback_reply": {
            "type": "string",
            "maxLength": 50
          },
          "location": {
            "type": "string",
            "maxLength": 500
          }
        },
        "required": ["display_text", "location", "postback_reply"]
      },
      "add_webhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "default": "https://example.com"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {},
            "default": {
              "Authorization": "XXXXXXXXXX"
            },
            "description": "This field is optional"
          }
        }
      },
      "bulk_cap_check": {
        "type": "object",
        "properties": {
          "phone_numbers": {
            "type": "array",
            "items": {},
            "default": ["+919999999999", "+919999999998"]
          }
        }
      },
      "dashboard": {
        "type": "object",
        "properties": {
          "from_date": {
            "type": "integer",
            "default": 1671694691113
          },
          "to_date": {
            "type": "integer",
            "default": 1671781091114
          }
        }
      },
      "delete_message": {
        "type": "object",
        "properties": {
          "intent": {
            "type": "string"
          }
        },
        "required": ["intent"]
      },
      "invite_tester": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string",
            "default": "Invitation is send to +919999999999 form rcs_agent."
          },
          "message": {
            "type": "string",
            "default": "Please check users RCS messaging app and accept the invitation to start the conversation"
          }
        }
      },
      "pause_bulk_message": {
        "type": "object",
        "properties": {
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": ["campaign_id"]
      },
      "resume_bulk_message": {
        "type": "object",
        "properties": {
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": ["campaign_id"]
      },
      "send_bulk_message": {
        "type": "object",
        "properties": {
          "phone_numbers": {
            "type": "array",
            "items": {},
            "default": ["+919999999999, +919999999998"]
          },
          "campaign_name": {
            "type": "string"
          },
          "intent": {
            "type": "string"
          }
        },
        "required": ["campaign_name", "intent"]
      },
      "send_direct": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "send_event": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "message_id": {
            "type": "string"
          },
          "event": {
            "type": "string",
            "default": "read/is_typing"
          }
        },
        "required": ["message_id"]
      },
      "send_message": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "intent": {
            "type": "string"
          }
        },
        "required": ["intent"]
      },
      "success": {
        "type": "object",
        "properties": {
          "response": {
            "type": "object",
            "additionalProperties": {},
            "default": {
              "message_id": "8941367125478963549048826106896927048a",
              "sendTime": "2022-11-14T12:10:33.838Z",
              "status": "200"
            }
          },
          "message": {
            "type": "object",
            "additionalProperties": {},
            "default": "message_object"
          }
        }
      },
      "EmailSummaryModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "Bcc": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "Cc": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "EmailSendRequest": {
        "type": "object",
        "properties": {
          "personalizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Personalizations"
            }
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          },
          "from": {
            "$ref": "#/components/schemas/FromEmail"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "send_at": {
            "type": "integer",
            "format": "int32"
          },
          "batch_id": {
            "type": "string"
          }
        }
      },
      "FromEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "reply_to": {
            "type": "string"
          }
        }
      },
      "Personalizations": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToEmail"
            }
          },
          "subject": {
            "type": "string"
          },
          "cc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cc"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bcc"
            }
          }
        }
      },
      "ToEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ReportingRequest": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "EmailDashboardRequest": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UsernameEmailResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "toEmail": {
            "type": "string"
          },
          "fromEmail": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "smtp_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          }
        }
      },
      "EmailResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sg_event_id": {
            "type": "string"
          },
          "sg_message_id": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "attempt": {
            "type": "string"
          },
          "useragent": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "asm_group_id": {
            "type": "string"
          },
          "smtp-id": {
            "type": "string"
          }
        }
      },
      "ProfileModel": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "principleEntityId": {
            "type": "string"
          },
          "contactNo": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AccountingupdateModel": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "SendTemplateModel": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "dltTemplateId": {
            "type": "string"
          }
        }
      },
      "TemplateSwagger": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "SingleSmsProcedure": {
        "type": "object",
        "properties": {
          "mobileNo": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "messages": {
            "type": "string"
          },
          "peId": {
            "type": "string"
          },
          "tempId": {
            "type": "string"
          },
          "countCharacter": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TemplateRetrievingRequest": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          }
        }
      },
      "RetreiveModelSwagger": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "template_info": {
            "type": "string"
          }
        }
      },
      "MultipleSmsSource": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "smsType": {
            "type": "string"
          },
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "fileName": {
            "type": "string"
          },
          "totalNumber": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "peId": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "campaignName": {
            "type": "string"
          }
        }
      },
      "uploadSwagger": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "faulty": {
            "type": "string"
          },
          "duplicate": {
            "type": "string"
          }
        }
      },
      "PaginationModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "jobid": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Data": {
        "type": "object",
        "properties": {
          "destination": {
            "type": "string"
          },
          "smsType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "submitTime": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "string"
          },
          "count": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "length": {
            "type": "string"
          }
        }
      },
      "SmsLogSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SenderWiseStatisticModel": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "SenderMangeModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "delete": {
            "type": "boolean"
          }
        }
      },
      "BlockNumberModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          },
          "delete": {
            "type": "boolean"
          },
          "mobileno": {
            "type": "string"
          }
        }
      },
      "RetreiveDownloadModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "uploadPersonalizeSwagger": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "string"
          },
          "file": {
            "type": "string"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "faulty": {
            "type": "string"
          },
          "duplicate": {
            "type": "string"
          }
        }
      },
      "DatestatisticModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sender": {
            "type": "string"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "MobileLogsModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "mobileNo": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BulkJobSwagger": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataBulkJob"
            }
          },
          "totalCount": {
            "type": "string"
          },
          "feilds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DataBulkJob": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "length": {
            "type": "string"
          },
          "tsent": {
            "type": "string"
          },
          "tcount": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "queuedAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          },
          "statusType": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "DownloadCentrerModel2": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          },
          "jobId": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "search": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          }
        }
      },
      "DescriptiveSummaryModel": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "search": {
            "type": "string"
          },
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CountSmsRequest": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "fromDate": {
            "type": "integer",
            "format": "int64"
          },
          "toDate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DashboardSwagger": {
        "type": "object",
        "properties": {
          "submission_sms": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "dlrStatus": {
            "$ref": "#/components/schemas/DlrStatus"
          }
        }
      },
      "DlrStatus": {
        "type": "object",
        "properties": {
          "pending": {
            "type": "string"
          },
          "deliverd": {
            "type": "string"
          },
          "rejectd": {
            "type": "string"
          },
          "undelivrd": {
            "type": "string"
          },
          "expired": {
            "type": "string"
          }
        }
      },
      "DashBoardHourSwagger": {
        "type": "object",
        "properties": {
          "month": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hour": {
            "$ref": "#/components/schemas/Hour"
          },
          "weekly": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Hour": {
        "type": "object"
      },
      "CreditLogModel": {
        "type": "object",
        "properties": {
          "search": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AllSenderSwagger": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "dlrStatus": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BalanceSwagger": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "string"
          }
        }
      },
      "SchBulkJob": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataBulkJob"
            }
          },
          "totalCount": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DownloadApi": {
        "type": "object",
        "properties": {
          "fileurl": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "DeleteTemplateModel": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "format": "int64"
          },
          "sender": {
            "type": "string"
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": ["password", "token", "username"]
      },
      "Customer": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string"
          },
          "otp_type": {
            "$ref": "#/components/schemas/OtpTypeEnum"
          },
          "otp_length": {
            "type": "integer",
            "maximum": 10,
            "minimum": 4
          },
          "retry_time": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "description": "retry time in seconds"
          },
          "expiry_time": {
            "type": "integer",
            "maximum": 4294967295,
            "minimum": 0,
            "format": "int64",
            "description": "time in seconds"
          }
        },
        "required": ["region"]
      },
      "Email": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "from_email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "from_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "email_subject": {
            "type": "string",
            "maxLength": 500
          },
          "template": {
            "type": "string",
            "description": "Eg. Hi, #1# is OTP for validation. (#1# will be replaced by the otp)"
          },
          "priority": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          }
        },
        "required": ["email_subject", "from_email"]
      },
      "OBD": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "callerId": {
            "type": "string",
            "maxLength": 12
          },
          "access_key": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "template": {
            "type": "string",
            "description": "Eg. Hi, Your O T P is #1# (#1# will be replaced by the otp)"
          },
          "priority": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          }
        },
        "required": ["callerId"]
      },
      "OtpTypeEnum": {
        "enum": ["numeric", "alpha", "alpha_numeric"],
        "type": "string"
      },
      "RCS": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "template_name": {
            "type": "string",
            "maxLength": 100
          },
          "template_type": {
            "$ref": "#/components/schemas/TemplateTypeEnum"
          },
          "params": {
            "type": "object",
            "additionalProperties": {}
          },
          "priority": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          }
        }
      },
      "SMS": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "sender_id": {
            "type": "string",
            "maxLength": 11
          },
          "sms_type": {
            "$ref": "#/components/schemas/SmsTypeEnum"
          },
          "template": {
            "type": "string",
            "description": "Eg. Hi, #1# is OTP for validation. (#1# will be replaced by the otp)"
          },
          "temp_id": {
            "type": "string",
            "nullable": true,
            "maxLength": 20
          },
          "priority": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          },
          "second_attempt": {
            "type": "boolean"
          }
        },
        "required": ["sender_id"]
      },
      "SmsTypeEnum": {
        "enum": ["TEXT", "FLASH", "UNICODE"],
        "type": "string"
      },
      "Template": {
        "type": "object",
        "properties": {
          "sms_agent": {
            "$ref": "#/components/schemas/SMS"
          },
          "whatsapp_agent": {
            "$ref": "#/components/schemas/WhatsApp"
          },
          "email_agent": {
            "$ref": "#/components/schemas/Email"
          },
          "rcs_agent": {
            "$ref": "#/components/schemas/RCS"
          },
          "obd_agent": {
            "$ref": "#/components/schemas/OBD"
          },
          "template_name": {
            "type": "string",
            "maxLength": 1000
          }
        },
        "required": [
          "email_agent",
          "obd_agent",
          "rcs_agent",
          "sms_agent",
          "template_name",
          "whatsapp_agent"
        ]
      },
      "TemplateTypeEnum": {
        "enum": ["simple_message", "rich_card", "carousel"],
        "type": "string"
      },
      "WhatsApp": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "template_name": {
            "type": "string",
            "maxLength": 100
          },
          "params": {
            "type": "object",
            "additionalProperties": {}
          },
          "priority": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          }
        },
        "required": ["template_name"]
      },
      "send_muchOTP": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "email": {
            "type": "string",
            "format": "email",
            "default": "example@gmail.com"
          }
        }
      },
      "send_notification": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "email": {
            "type": "string",
            "format": "email",
            "default": "example@gmail.com"
          },
          "notify_message": {
            "type": "string"
          },
          "template_name": {
            "type": "string"
          },
          "variables": {
            "type": "object",
            "additionalProperties": {},
            "default": {
              "var": "var_value"
            }
          }
        },
        "required": ["notify_message", "template_name"]
      },
      "verify_muchOTP": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "default": "+919999999999"
          },
          "email": {
            "type": "string",
            "format": "email",
            "default": "example@gmail.com"
          },
          "otp": {
            "type": "string",
            "default": "123456"
          }
        }
      }
    },
    "securitySchemes": {
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"Token\""
      }
    }
  },
  "servers": [
    {
      "url": "https://{host-domain}",
      "description": "Live Server Endpoint"
    }
  ]
}
